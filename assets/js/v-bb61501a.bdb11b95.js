"use strict";(self.webpackChunkblog_demo=self.webpackChunkblog_demo||[]).push([[706],{9320:(e,n,d)=>{d.r(n),d.d(n,{data:()=>l});const l={key:"v-bb61501a",path:"/Javascript/null%E5%92%8Cundefined%E5%8C%BA%E5%88%AB.html",title:"null和undefined区别",lang:"zh-CN",frontmatter:{date:"2022/3/2 14:15",coverUrl:"/pic/8.jpg",stick:!1,keyword:"javascript,undefined",description:"null和undefined区别",title:"null和undefined区别",tag:["javascript","undefined"],categories:["javascript","undefined"]},excerpt:"",headers:[{level:2,title:"✨null和undefined区别✨",slug:"✨null和undefined区别✨",children:[{level:3,title:"Undefined类型只有一个值，即undefined。当声明的变量还未被初始化时，变量的默认值为undefined。",slug:"undefined类型只有一个值-即undefined。当声明的变量还未被初始化时-变量的默认值为undefined。",children:[]},{level:3,title:"Null类型也只有一个值，即null。null用来表示尚未存在的对象，常用来表示函数企图返回一个不存在的对象。",slug:"null类型也只有一个值-即null。null用来表示尚未存在的对象-常用来表示函数企图返回一个不存在的对象。",children:[]}]}],git:{updatedTime:null,contributors:[]}}},5936:(e,n,d)=>{d.r(n),d.d(n,{default:()=>i});const l=(0,d(6252).uE)('<h2 id="✨null和undefined区别✨" tabindex="-1"><a class="header-anchor" href="#✨null和undefined区别✨" aria-hidden="true">#</a> ✨null和undefined区别✨</h2><h3 id="undefined类型只有一个值-即undefined。当声明的变量还未被初始化时-变量的默认值为undefined。" tabindex="-1"><a class="header-anchor" href="#undefined类型只有一个值-即undefined。当声明的变量还未被初始化时-变量的默认值为undefined。" aria-hidden="true">#</a> Undefined类型只有一个值，即undefined。当声明的变量还未被初始化时，变量的默认值为undefined。</h3><blockquote><p>用法： 变量被声明了，但没有赋值时，就等于undefined。 调用函数时，应该提供的参数没有提供，该参数等于undefined。 对象没有赋值的属性，该属性的值为undefined。 函数没有返回值时，默认返回undefined。</p></blockquote><h3 id="null类型也只有一个值-即null。null用来表示尚未存在的对象-常用来表示函数企图返回一个不存在的对象。" tabindex="-1"><a class="header-anchor" href="#null类型也只有一个值-即null。null用来表示尚未存在的对象-常用来表示函数企图返回一个不存在的对象。" aria-hidden="true">#</a> Null类型也只有一个值，即null。null用来表示尚未存在的对象，常用来表示函数企图返回一个不存在的对象。</h3><blockquote><p>用法： 作为函数的参数，表示该函数的参数不是对象。 作为对象原型链的终点。</p></blockquote>',5),u={},i=(0,d(3744).Z)(u,[["render",function(e,n){return l}]])}}]);