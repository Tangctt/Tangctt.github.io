"use strict";(self.webpackChunkaurora_template=self.webpackChunkaurora_template||[]).push([[922],{3962:(e,t,l)=>{l.r(t),l.d(t,{data:()=>a});const a={key:"v-58298250",path:"/Javascript/GET%E4%B8%8EPOST%E6%96%B9%E6%B3%95%E7%9A%84%E5%8C%BA%E5%88%AB.html",title:"GET与POST方法的区别",lang:"zh-CN",frontmatter:{date:"2022/5/2 20:08",coverUrl:"/pic/8.jpg",stick:!1,keyword:"Get,Post,方法",description:"GET与POST方法的区别",title:"GET与POST方法的区别",tag:["Get","Post","方法"],categories:["Get","Post","方法"]},excerpt:"",headers:[{level:2,title:"✨GET与POST方法的区别✨",slug:"✨get与post方法的区别✨",children:[{level:3,title:"GET",slug:"get",children:[]},{level:3,title:"POST",slug:"post",children:[]},{level:3,title:"GET与POST的区别",slug:"get与post的区别",children:[]},{level:3,title:"在以下情况中使用POST请求",slug:"在以下情况中使用post请求",children:[]}]}],git:{updatedTime:null,contributors:[]}}},2973:(e,t,l)=>{l.r(t),l.d(t,{default:()=>r});const a=(0,l(6252).uE)('<h2 id="✨get与post方法的区别✨" tabindex="-1"><a class="header-anchor" href="#✨get与post方法的区别✨" aria-hidden="true">#</a> ✨GET与POST方法的区别✨</h2><h3 id="get" tabindex="-1"><a class="header-anchor" href="#get" aria-hidden="true">#</a> GET</h3><ul><li>一般用于从服务器上获取数组，使用URL传递参数，对所发送信息的数量也有限制，一般在2000个字符</li></ul><h3 id="post" tabindex="-1"><a class="header-anchor" href="#post" aria-hidden="true">#</a> POST</h3><ul><li>一般用于服务器上数据的修改/传送，对所发送信息的数量没有限制</li></ul><blockquote><p>GET方式需要使用<code>Request.QueryString</code>来取得变量的值，而POST方式通过<code>Request.Form</code>来获取变量的值。也就是说，GET是通过地址栏来传值，而POST是通过提交表单来传值。</p></blockquote><h3 id="get与post的区别" tabindex="-1"><a class="header-anchor" href="#get与post的区别" aria-hidden="true">#</a> GET与POST的区别</h3><ol><li>GET提交的数据会放在URL之后，以？分割URL和传输数据，参数之间以&amp;相连，如<code>EditPosts.aspx?name=test1&amp;id=123456.</code>。POST方法是把提交的数据放在HTTP包的Body中</li><li>GET提交的数据大小有限制，最多只能由2K字节（因为浏览器对URL的长度有限制），而POST方法提交的数据没有限制</li><li>GET方式需要使用<code>Request.QueryString</code>来取得变量的值，而POST方式通过<code>Request.Form</code>来获取变量的值。</li><li>GET方式提交数据，会带来安全问题，比如一个登录界面，通过GET方式提交数据时，用户名和密码将出现在URL上，如果页面可以被缓存或者其他人可以访问这台机器，就可以从历史记录获得该用户的账号和密码。</li></ol><h3 id="在以下情况中使用post请求" tabindex="-1"><a class="header-anchor" href="#在以下情况中使用post请求" aria-hidden="true">#</a> 在以下情况中使用POST请求</h3><ol><li>无法使用缓存文件（更新服务器上的文件或数据库）</li><li>向服务器发送大量数据（POST没有数据量限制）</li><li>发送包含未知字符的用户输入时，POST比GET更稳定也更可靠</li></ol>',10),i={},r=(0,l(3744).Z)(i,[["render",function(e,t){return a}]])}}]);