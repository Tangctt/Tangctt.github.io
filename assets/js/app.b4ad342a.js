"use strict";(self.webpackChunkaurora_template=self.webpackChunkaurora_template||[]).push([[143],{6396:(n,e,s)=>{s.d(e,{g:()=>m});var a=s(7478),t=s(5748),l=s(1598),o=s(6665),r=s(1843),i=s(8580),p=s(881),c=s(1301),u=s(9146),d=s(287);const h=(0,s(7621).vW)((({app:n,router:e,siteData:s})=>{})),m=[a.Z,t.Z,l.Z,o.Z,r.Z,i.Z,p.Z,c.Z,u.Z,d.Z,h]},9947:(n,e,s)=>{s.d(e,{p:()=>o});var a=s(3051),t=s(7790),l=s(9796);const o=[a.Z,t.Z,l.Z]},4611:(n,e,s)=>{s.d(e,{l:()=>r});var a=s(1263),t=s(6243),l=s(7593),o=s(4817);const r=[a.Z,t.Z,l.Z,o.Z]},4150:(n,e,s)=>{s.d(e,{Z:()=>t});var a=s(6252);const t={404:(0,a.RC)((()=>Promise.all([s.e(973),s.e(431)]).then(s.bind(s,2431)))),Layout:(0,a.RC)((()=>s.e(887).then(s.bind(s,8887))))}},6056:(n,e,s)=>{s.d(e,{b:()=>t});var a=s(6252);const t={"v-690f92a4":(0,a.RC)((()=>s.e(202).then(s.bind(s,8972)))),"v-22a39d25":(0,a.RC)((()=>s.e(99).then(s.bind(s,2645)))),"v-b1714770":(0,a.RC)((()=>s.e(310).then(s.bind(s,9925)))),"v-58298250":(0,a.RC)((()=>s.e(922).then(s.bind(s,2973)))),"v-18e4ba4c":(0,a.RC)((()=>s.e(428).then(s.bind(s,8914)))),"v-bb61501a":(0,a.RC)((()=>s.e(706).then(s.bind(s,5936)))),"v-6382c4c6":(0,a.RC)((()=>s.e(558).then(s.bind(s,1519)))),"v-e6a0db48":(0,a.RC)((()=>s.e(952).then(s.bind(s,2254)))),"v-9a49e110":(0,a.RC)((()=>s.e(855).then(s.bind(s,8378)))),"v-6b9f561e":(0,a.RC)((()=>s.e(866).then(s.bind(s,4301)))),"v-36024825":(0,a.RC)((()=>s.e(657).then(s.bind(s,4575)))),"v-a796ac14":(0,a.RC)((()=>s.e(92).then(s.bind(s,1312)))),"v-ba03ecda":(0,a.RC)((()=>s.e(837).then(s.bind(s,7932)))),"v-1f086782":(0,a.RC)((()=>s.e(356).then(s.bind(s,9964)))),"v-67bdf7e9":(0,a.RC)((()=>s.e(246).then(s.bind(s,4646)))),"v-09e1915c":(0,a.RC)((()=>s.e(741).then(s.bind(s,9577)))),"v-d72b840a":(0,a.RC)((()=>s.e(867).then(s.bind(s,494)))),"v-e44ed9cc":(0,a.RC)((()=>s.e(927).then(s.bind(s,7620)))),"v-08f1d122":(0,a.RC)((()=>s.e(325).then(s.bind(s,7086)))),"v-7072d7a0":(0,a.RC)((()=>s.e(451).then(s.bind(s,1724)))),"v-3706649a":(0,a.RC)((()=>s.e(88).then(s.bind(s,8109)))),"v-8daa1a0e":(0,a.RC)((()=>s.e(509).then(s.bind(s,1829)))),"v-74bc627b":(0,a.RC)((()=>s.e(5).then(s.bind(s,9085)))),"v-14f724bf":(0,a.RC)((()=>s.e(69).then(s.bind(s,8784)))),"v-14e6501c":(0,a.RC)((()=>s.e(713).then(s.bind(s,779)))),"v-744d024e":(0,a.RC)((()=>s.e(146).then(s.bind(s,7034)))),"v-705c21a6":(0,a.RC)((()=>s.e(888).then(s.bind(s,8099)))),"v-6629f178":(0,a.RC)((()=>s.e(158).then(s.bind(s,7984)))),"v-f693f690":(0,a.RC)((()=>s.e(516).then(s.bind(s,2209)))),"v-e2acc714":(0,a.RC)((()=>s.e(853).then(s.bind(s,5506)))),"v-4382d077":(0,a.RC)((()=>s.e(740).then(s.bind(s,7072)))),"v-3c506944":(0,a.RC)((()=>s.e(219).then(s.bind(s,5455)))),"v-3279cf61":(0,a.RC)((()=>s.e(118).then(s.bind(s,1973))))}},9706:(n,e,s)=>{s.d(e,{T:()=>a});const a={"v-690f92a4":()=>s.e(202).then(s.bind(s,9968)).then((({data:n})=>n)),"v-22a39d25":()=>s.e(99).then(s.bind(s,5562)).then((({data:n})=>n)),"v-b1714770":()=>s.e(310).then(s.bind(s,4236)).then((({data:n})=>n)),"v-58298250":()=>s.e(922).then(s.bind(s,3962)).then((({data:n})=>n)),"v-18e4ba4c":()=>s.e(428).then(s.bind(s,2237)).then((({data:n})=>n)),"v-bb61501a":()=>s.e(706).then(s.bind(s,9320)).then((({data:n})=>n)),"v-6382c4c6":()=>s.e(558).then(s.bind(s,6815)).then((({data:n})=>n)),"v-e6a0db48":()=>s.e(952).then(s.bind(s,629)).then((({data:n})=>n)),"v-9a49e110":()=>s.e(855).then(s.bind(s,7523)).then((({data:n})=>n)),"v-6b9f561e":()=>s.e(866).then(s.bind(s,8060)).then((({data:n})=>n)),"v-36024825":()=>s.e(657).then(s.bind(s,1318)).then((({data:n})=>n)),"v-a796ac14":()=>s.e(92).then(s.bind(s,575)).then((({data:n})=>n)),"v-ba03ecda":()=>s.e(837).then(s.bind(s,9737)).then((({data:n})=>n)),"v-1f086782":()=>s.e(356).then(s.bind(s,2968)).then((({data:n})=>n)),"v-67bdf7e9":()=>s.e(246).then(s.bind(s,5077)).then((({data:n})=>n)),"v-09e1915c":()=>s.e(741).then(s.bind(s,453)).then((({data:n})=>n)),"v-d72b840a":()=>s.e(867).then(s.bind(s,9810)).then((({data:n})=>n)),"v-e44ed9cc":()=>s.e(927).then(s.bind(s,2429)).then((({data:n})=>n)),"v-08f1d122":()=>s.e(325).then(s.bind(s,4020)).then((({data:n})=>n)),"v-7072d7a0":()=>s.e(451).then(s.bind(s,9420)).then((({data:n})=>n)),"v-3706649a":()=>s.e(88).then(s.bind(s,1801)).then((({data:n})=>n)),"v-8daa1a0e":()=>s.e(509).then(s.bind(s,6464)).then((({data:n})=>n)),"v-74bc627b":()=>s.e(5).then(s.bind(s,2988)).then((({data:n})=>n)),"v-14f724bf":()=>s.e(69).then(s.bind(s,4770)).then((({data:n})=>n)),"v-14e6501c":()=>s.e(713).then(s.bind(s,4502)).then((({data:n})=>n)),"v-744d024e":()=>s.e(146).then(s.bind(s,6041)).then((({data:n})=>n)),"v-705c21a6":()=>s.e(888).then(s.bind(s,6762)).then((({data:n})=>n)),"v-6629f178":()=>s.e(158).then(s.bind(s,4141)).then((({data:n})=>n)),"v-f693f690":()=>s.e(516).then(s.bind(s,1442)).then((({data:n})=>n)),"v-e2acc714":()=>s.e(853).then(s.bind(s,6790)).then((({data:n})=>n)),"v-4382d077":()=>s.e(740).then(s.bind(s,7629)).then((({data:n})=>n)),"v-3c506944":()=>s.e(219).then(s.bind(s,3350)).then((({data:n})=>n)),"v-3279cf61":()=>s.e(118).then(s.bind(s,8588)).then((({data:n})=>n))}},4634:(n,e,s)=>{s.d(e,{g:()=>t});var a=s(4802);const t=[["v-690f92a4","/16-11-27%5E%E5%8D%97%E5%B1%B1%E5%85%AC%E5%9B%AD.html",{},["/16-11-27^南山公园.html","/16-11-27%5E%E5%8D%97%E5%B1%B1%E5%85%AC%E5%9B%AD","/16-11-27^南山公园.md","/16-11-27%5E%E5%8D%97%E5%B1%B1%E5%85%AC%E5%9B%AD.md"]],["v-22a39d25","/about.html",{},["/about","/about.md"]],["v-b1714770","/myself.html",{},["/myself","/myself.md"]],["v-58298250","/Javascript/GET%E4%B8%8EPOST%E6%96%B9%E6%B3%95%E7%9A%84%E5%8C%BA%E5%88%AB.html",{},["/Javascript/GET与POST方法的区别.html","/Javascript/GET%E4%B8%8EPOST%E6%96%B9%E6%B3%95%E7%9A%84%E5%8C%BA%E5%88%AB","/Javascript/GET与POST方法的区别.md","/Javascript/GET%E4%B8%8EPOST%E6%96%B9%E6%B3%95%E7%9A%84%E5%8C%BA%E5%88%AB.md"]],["v-18e4ba4c","/Javascript/Node.js%E4%B8%A4%E7%A7%8D%E8%B0%83%E7%94%A8Mongodb%E6%96%B9%E6%B3%95.html",{},["/Javascript/Node.js两种调用Mongodb方法.html","/Javascript/Node.js%E4%B8%A4%E7%A7%8D%E8%B0%83%E7%94%A8Mongodb%E6%96%B9%E6%B3%95","/Javascript/Node.js两种调用Mongodb方法.md","/Javascript/Node.js%E4%B8%A4%E7%A7%8D%E8%B0%83%E7%94%A8Mongodb%E6%96%B9%E6%B3%95.md"]],["v-bb61501a","/Javascript/null%E5%92%8Cundefined%E5%8C%BA%E5%88%AB.html",{},["/Javascript/null和undefined区别.html","/Javascript/null%E5%92%8Cundefined%E5%8C%BA%E5%88%AB","/Javascript/null和undefined区别.md","/Javascript/null%E5%92%8Cundefined%E5%8C%BA%E5%88%AB.md"]],["v-6382c4c6","/Javascript/%E8%AE%BF%E9%97%AEnode-express%E4%B8%ADstatic%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6.html",{},["/Javascript/访问node-express中static静态文件.html","/Javascript/%E8%AE%BF%E9%97%AEnode-express%E4%B8%ADstatic%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6","/Javascript/访问node-express中static静态文件.md","/Javascript/%E8%AE%BF%E9%97%AEnode-express%E4%B8%ADstatic%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6.md"]],["v-e6a0db48","/Debug/css%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8node-sass%E5%AE%89%E8%A3%85%E5%87%BA%E9%94%99.html",{},["/Debug/css预处理器node-sass安装出错.html","/Debug/css%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8node-sass%E5%AE%89%E8%A3%85%E5%87%BA%E9%94%99","/Debug/css预处理器node-sass安装出错.md","/Debug/css%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8node-sass%E5%AE%89%E8%A3%85%E5%87%BA%E9%94%99.md"]],["v-9a49e110","/Debug/Vue%E9%A1%B9%E7%9B%AE%E9%A1%B5%E9%9D%A2%E7%A9%BA%E7%99%BD.html",{},["/Debug/Vue项目页面空白.html","/Debug/Vue%E9%A1%B9%E7%9B%AE%E9%A1%B5%E9%9D%A2%E7%A9%BA%E7%99%BD","/Debug/Vue项目页面空白.md","/Debug/Vue%E9%A1%B9%E7%9B%AE%E9%A1%B5%E9%9D%A2%E7%A9%BA%E7%99%BD.md"]],["v-6b9f561e","/Vue/Cookie-LocalStorage-SessionStorage.html",{},["/Vue/Cookie-LocalStorage-SessionStorage","/Vue/Cookie-LocalStorage-SessionStorage.md"]],["v-36024825","/Vue/vue%E7%BB%84%E4%BB%B6%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html",{},["/Vue/vue组件生命周期.html","/Vue/vue%E7%BB%84%E4%BB%B6%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F","/Vue/vue组件生命周期.md","/Vue/vue%E7%BB%84%E4%BB%B6%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.md"]],["v-a796ac14","/Vue/Vue%E7%BB%84%E4%BB%B6%E9%97%B4%E5%B8%B8%E7%94%A8%E4%BC%A0%E5%8F%82%E6%96%B9%E5%BC%8F.html",{},["/Vue/Vue组件间常用传参方式.html","/Vue/Vue%E7%BB%84%E4%BB%B6%E9%97%B4%E5%B8%B8%E7%94%A8%E4%BC%A0%E5%8F%82%E6%96%B9%E5%BC%8F","/Vue/Vue组件间常用传参方式.md","/Vue/Vue%E7%BB%84%E4%BB%B6%E9%97%B4%E5%B8%B8%E7%94%A8%E4%BC%A0%E5%8F%82%E6%96%B9%E5%BC%8F.md"]],["v-ba03ecda","/Vue/Vue%E8%B7%AF%E7%94%B1%E4%BC%A0%E5%8F%82.html",{},["/Vue/Vue路由传参.html","/Vue/Vue%E8%B7%AF%E7%94%B1%E4%BC%A0%E5%8F%82","/Vue/Vue路由传参.md","/Vue/Vue%E8%B7%AF%E7%94%B1%E4%BC%A0%E5%8F%82.md"]],["v-1f086782","/Vue/%E9%80%9A%E8%BF%87network%E7%9A%84ip%E8%AE%BF%E9%97%AE.html",{},["/Vue/通过network的ip访问.html","/Vue/%E9%80%9A%E8%BF%87network%E7%9A%84ip%E8%AE%BF%E9%97%AE","/Vue/通过network的ip访问.md","/Vue/%E9%80%9A%E8%BF%87network%E7%9A%84ip%E8%AE%BF%E9%97%AE.md"]],["v-67bdf7e9","/Other/ABAQUS/ABAQUS%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84Mask%E6%8E%A9%E7%A0%81%E6%96%B9%E5%BC%8F%E7%B4%A2%E5%BC%95.html",{},["/Other/ABAQUS/ABAQUS二次开发中的Mask掩码方式索引.html","/Other/ABAQUS/ABAQUS%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84Mask%E6%8E%A9%E7%A0%81%E6%96%B9%E5%BC%8F%E7%B4%A2%E5%BC%95","/Other/ABAQUS/ABAQUS二次开发中的Mask掩码方式索引.md","/Other/ABAQUS/ABAQUS%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84Mask%E6%8E%A9%E7%A0%81%E6%96%B9%E5%BC%8F%E7%B4%A2%E5%BC%95.md"]],["v-09e1915c","/Other/ABAQUS/Simulation%20platform.html",{},["/Other/ABAQUS/Simulation platform.html","/Other/ABAQUS/Simulation%20platform","/Other/ABAQUS/Simulation platform.md","/Other/ABAQUS/Simulation%20platform.md"]],["v-d72b840a","/Other/Python/%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%89%A7%E8%A1%8Cpython%E8%84%9A%E6%9C%AC%E7%9A%84%E4%BC%A0%E5%8F%82%E6%96%B9%E5%BC%8F.html",{},["/Other/Python/命令行执行python脚本的传参方式.html","/Other/Python/%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%89%A7%E8%A1%8Cpython%E8%84%9A%E6%9C%AC%E7%9A%84%E4%BC%A0%E5%8F%82%E6%96%B9%E5%BC%8F","/Other/Python/命令行执行python脚本的传参方式.md","/Other/Python/%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%89%A7%E8%A1%8Cpython%E8%84%9A%E6%9C%AC%E7%9A%84%E4%BC%A0%E5%8F%82%E6%96%B9%E5%BC%8F.md"]],["v-e44ed9cc","/T-zone/life/%E6%B5%AE%E7%94%9F%E4%B8%80%E8%AE%B0(1)-%E9%80%89%E6%8B%A9.html",{},["/T-zone/life/浮生一记(1)-选择.html","/T-zone/life/%E6%B5%AE%E7%94%9F%E4%B8%80%E8%AE%B0(1)-%E9%80%89%E6%8B%A9","/T-zone/life/浮生一记(1)-选择.md","/T-zone/life/%E6%B5%AE%E7%94%9F%E4%B8%80%E8%AE%B0(1)-%E9%80%89%E6%8B%A9.md"]],["v-08f1d122","/T-zone/no-emo/%E8%80%83%E7%A0%94%E7%9A%84%E6%84%8F%E4%B9%89%E4%BD%95%E5%9C%A8.html",{},["/T-zone/no-emo/考研的意义何在.html","/T-zone/no-emo/%E8%80%83%E7%A0%94%E7%9A%84%E6%84%8F%E4%B9%89%E4%BD%95%E5%9C%A8","/T-zone/no-emo/考研的意义何在.md","/T-zone/no-emo/%E8%80%83%E7%A0%94%E7%9A%84%E6%84%8F%E4%B9%89%E4%BD%95%E5%9C%A8.md"]],["v-7072d7a0","/T-zone/no-emo/%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E5%AF%B9%E7%9A%84%EF%BC%9F.html",{},["/T-zone/no-emo/马克思为什么是对的？.html","/T-zone/no-emo/%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E5%AF%B9%E7%9A%84%EF%BC%9F","/T-zone/no-emo/马克思为什么是对的？.md","/T-zone/no-emo/%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E5%AF%B9%E7%9A%84%EF%BC%9F.md"]],["v-3706649a","/404.html",{},["/404"]],["v-8daa1a0e","/",{},["/index.html"]],["v-74bc627b","/about/",{},["/about/index.html"]],["v-14f724bf","/mood/",{},["/mood/index.html"]],["v-14e6501c","/link/",{},["/link/index.html"]],["v-744d024e","/tag/",{},["/tag/index.html"]],["v-705c21a6","/archive/",{},["/archive/index.html"]],["v-6629f178","/aurora-coze/",{},["/aurora-coze/index.html"]],["v-f693f690","/aurora-register/",{},["/aurora-register/index.html"]],["v-e2acc714","/photo/",{},["/photo/index.html"]],["v-4382d077","/next-mood/",{},["/next-mood/index.html"]],["v-3c506944","/aurora-music/",{},["/aurora-music/index.html"]],["v-3279cf61","/aurora-archive/",{},["/aurora-archive/index.html"]]].reduce(((n,[e,s,t,l])=>(n.push({name:e,path:s,component:a.Y,meta:t},...l.map((n=>({path:n,redirect:s})))),n)),[{name:"404",path:"/:catchAll(.*)",component:a.Y}])},5472:(n,e,s)=>{s.d(e,{D:()=>a});const a=[{title:"16-11-27=>南山公园",headers:[{level:2,title:"🍂16-11-27=>南山公园🍂",slug:"🍂16-11-27-南山公园🍂",children:[]}],path:"/16-11-27%5E%E5%8D%97%E5%B1%B1%E5%85%AC%E5%9B%AD.html",pathLocale:"/",extraFields:[]},{title:"Introduction of the site",headers:[{level:2,title:"✨Introduction of the site✨",slug:"✨introduction-of-the-site✨",children:[]},{level:2,title:"Feature",slug:"feature",children:[]},{level:2,title:"Quick start",slug:"quick-start",children:[{level:3,title:"Node安装",slug:"node安装",children:[]},{level:3,title:"安装CLI",slug:"安装cli",children:[]},{level:3,title:"创建博客",slug:"创建博客",children:[]}]}],path:"/about.html",pathLocale:"/",extraFields:[]},{title:"Self-Introduction",headers:[{level:2,title:"🎈✨🎉Welcome!🎉✨🎈",slug:"🎈✨🎉welcome-🎉✨🎈",children:[]},{level:2,title:"Self-Introduction",slug:"self-introduction",children:[]},{level:2,title:"Hobbies",slug:"hobbies",children:[{level:3,title:"踢球踢球⚽！！！",slug:"踢球踢球⚽",children:[]},{level:3,title:"骑车骑车🚲！！！",slug:"骑车骑车🚲",children:[]},{level:3,title:"Gaming🎮！！！",slug:"gaming🎮",children:[]}]},{level:2,title:"Stories",slug:"stories",children:[]},{level:2,title:"Wishes",slug:"wishes",children:[{level:3,title:"小目标（努力实现🥳）",slug:"小目标-努力实现🥳",children:[]},{level:3,title:"大梦想（想想就好🤔）",slug:"大梦想-想想就好🤔",children:[]}]},{level:2,title:"My treasure",slug:"my-treasure",children:[]},{level:2,title:"Travel timeline",slug:"travel-timeline",children:[{level:3,title:"校园时光，一去不复返",slug:"校园时光-一去不复返",children:[]},{level:3,title:"长沙",slug:"长沙",children:[]},{level:3,title:"南昌",slug:"南昌",children:[]},{level:3,title:"无锡",slug:"无锡",children:[]},{level:3,title:"上海",slug:"上海",children:[]},{level:3,title:"PPMT",slug:"ppmt",children:[]},{level:3,title:"南京",slug:"南京",children:[]},{level:3,title:"深圳",slug:"深圳",children:[]}]},{level:2,title:"To be continue...",slug:"to-be-continue",children:[]}],path:"/myself.html",pathLocale:"/",extraFields:[]},{title:"GET与POST方法的区别",headers:[{level:2,title:"✨GET与POST方法的区别✨",slug:"✨get与post方法的区别✨",children:[{level:3,title:"GET",slug:"get",children:[]},{level:3,title:"POST",slug:"post",children:[]},{level:3,title:"GET与POST的区别",slug:"get与post的区别",children:[]},{level:3,title:"在以下情况中使用POST请求",slug:"在以下情况中使用post请求",children:[]}]}],path:"/Javascript/GET%E4%B8%8EPOST%E6%96%B9%E6%B3%95%E7%9A%84%E5%8C%BA%E5%88%AB.html",pathLocale:"/",extraFields:[]},{title:"Node.js两种调用Mongodb方法",headers:[{level:2,title:"✨Node.js两种调用Mongodb方法✨",slug:"✨node-js两种调用mongodb方法✨",children:[{level:3,title:"方法一：MongoClient",slug:"方法一-mongoclient",children:[]},{level:3,title:"方法二：Mongoose",slug:"方法二-mongoose",children:[]},{level:3,title:"new Object",slug:"new-object",children:[]},{level:3,title:"使用案例",slug:"使用案例",children:[]}]}],path:"/Javascript/Node.js%E4%B8%A4%E7%A7%8D%E8%B0%83%E7%94%A8Mongodb%E6%96%B9%E6%B3%95.html",pathLocale:"/",extraFields:[]},{title:"null和undefined区别",headers:[{level:2,title:"✨null和undefined区别✨",slug:"✨null和undefined区别✨",children:[{level:3,title:"Undefined类型只有一个值，即undefined。当声明的变量还未被初始化时，变量的默认值为undefined。",slug:"undefined类型只有一个值-即undefined。当声明的变量还未被初始化时-变量的默认值为undefined。",children:[]},{level:3,title:"Null类型也只有一个值，即null。null用来表示尚未存在的对象，常用来表示函数企图返回一个不存在的对象。",slug:"null类型也只有一个值-即null。null用来表示尚未存在的对象-常用来表示函数企图返回一个不存在的对象。",children:[]}]}],path:"/Javascript/null%E5%92%8Cundefined%E5%8C%BA%E5%88%AB.html",pathLocale:"/",extraFields:[]},{title:"访问node-express中static静态文件",headers:[{level:2,title:"✨访问node-express中static静态文件✨",slug:"✨访问node-express中static静态文件✨",children:[{level:3,title:"应用场合",slug:"应用场合",children:[]},{level:3,title:"解决方法",slug:"解决方法",children:[]},{level:3,title:"示例",slug:"示例",children:[]}]}],path:"/Javascript/%E8%AE%BF%E9%97%AEnode-express%E4%B8%ADstatic%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6.html",pathLocale:"/",extraFields:[]},{title:"css预处理器node-sass安装出错",headers:[{level:2,title:"✨css预处理器node-sass安装出错✨",slug:"✨css预处理器node-sass安装出错✨",children:[{level:3,title:"在npm i 后发现项目跑不起来，报错node-sass包安装失败、找不到或版本问题",slug:"在npm-i-后发现项目跑不起来-报错node-sass包安装失败、找不到或版本问题",children:[]},{level:3,title:"经过一系列的实验，最终发现是node的版本问题",slug:"经过一系列的实验-最终发现是node的版本问题",children:[]},{level:3,title:"降低node版本即可",slug:"降低node版本即可",children:[]}]}],path:"/Debug/css%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8node-sass%E5%AE%89%E8%A3%85%E5%87%BA%E9%94%99.html",pathLocale:"/",extraFields:[]},{title:"Vue项目页面空白",headers:[{level:2,title:"✨Vue项目页面空白✨",slug:"✨vue项目页面空白✨",children:[{level:3,title:"问题描述：",slug:"问题描述",children:[]},{level:3,title:"解决办法：",slug:"解决办法",children:[]}]}],path:"/Debug/Vue%E9%A1%B9%E7%9B%AE%E9%A1%B5%E9%9D%A2%E7%A9%BA%E7%99%BD.html",pathLocale:"/",extraFields:[]},{title:"Cookie、LocalStorage、SessionStorage的异同",headers:[{level:2,title:"✨Cookie、LocalStorage、SessionStorage的异同✨",slug:"✨cookie、localstorage、sessionstorage的异同✨",children:[{level:3,title:"基本概念",slug:"基本概念",children:[]},{level:3,title:"Cookie与Session的区别",slug:"cookie与session的区别",children:[]},{level:3,title:"Cookie、LocalStorage、SessionStorage的异同",slug:"cookie、localstorage、sessionstorage的异同",children:[]},{level:3,title:"LocalStorage与SessionStorage的API",slug:"localstorage与sessionstorage的api",children:[]},{level:3,title:"应用场景",slug:"应用场景",children:[]}]}],path:"/Vue/Cookie-LocalStorage-SessionStorage.html",pathLocale:"/",extraFields:[]},{title:"vue组件声明周期",headers:[{level:2,title:"✨vue组件声明周期✨",slug:"✨vue组件声明周期✨",children:[{level:3,title:"单组件声明周期图",slug:"单组件声明周期图",children:[]},{level:3,title:"父子组件生命周期图",slug:"父子组件生命周期图",children:[]}]}],path:"/Vue/vue%E7%BB%84%E4%BB%B6%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html",pathLocale:"/",extraFields:[]},{title:"Vue组件间常用传参方式",headers:[{level:2,title:"✨Vue组件间常用传参方式✨",slug:"✨vue组件间常用传参方式✨",children:[{level:3,title:"1. props、emit（最常用的父子通讯方式）",slug:"_1-props、emit-最常用的父子通讯方式",children:[]},{level:3,title:"2. 事件总线EventBus（常用任意两个组件之间的通讯）",slug:"_2-事件总线eventbus-常用任意两个组件之间的通讯",children:[]},{level:3,title:"3.Vuex状态管理（vue的核心插件，用于任意组件的任意通讯，需注意刷新后有可能vuex数据会丢失）",slug:"_3-vuex状态管理-vue的核心插件-用于任意组件的任意通讯-需注意刷新后有可能vuex数据会丢失",children:[]}]}],path:"/Vue/Vue%E7%BB%84%E4%BB%B6%E9%97%B4%E5%B8%B8%E7%94%A8%E4%BC%A0%E5%8F%82%E6%96%B9%E5%BC%8F.html",pathLocale:"/",extraFields:[]},{title:"Vue路由传参",headers:[{level:2,title:"✨Vue路由传参✨",slug:"✨vue路由传参✨",children:[{level:3,title:"方式一：配置动态路由",slug:"方式一-配置动态路由",children:[]},{level:3,title:"方式二：通过query属性传值",slug:"方式二-通过query属性传值",children:[]},{level:3,title:"方式三：通过params属性传值",slug:"方式三-通过params属性传值",children:[]},{level:3,title:"query和params传参的区别",slug:"query和params传参的区别",children:[]}]}],path:"/Vue/Vue%E8%B7%AF%E7%94%B1%E4%BC%A0%E5%8F%82.html",pathLocale:"/",extraFields:[]},{title:"Vue项目通过network的ip地址访问方法",headers:[{level:2,title:"✨Vue项目通过network的ip地址访问方法✨",slug:"✨vue项目通过network的ip地址访问方法✨",children:[]},{level:2,title:"设置完成之后就可以用ip+端口号的形式来访问项目",slug:"设置完成之后就可以用ip-端口号的形式来访问项目",children:[]},{level:2,title:"在使用network进行局域网访问时注意",slug:"在使用network进行局域网访问时注意",children:[{level:3,title:"设置完成即可使用其它设备在同一局域网下进行访问了",slug:"设置完成即可使用其它设备在同一局域网下进行访问了",children:[]},{level:3,title:"注意：",slug:"注意",children:[]}]}],path:"/Vue/%E9%80%9A%E8%BF%87network%E7%9A%84ip%E8%AE%BF%E9%97%AE.html",pathLocale:"/",extraFields:[]},{title:"ABAQUS二次开发中的Mask掩码方式索引",headers:[{level:2,title:"✨ABAQUS二次开发中的Mask掩码方式索引✨",slug:"✨abaqus二次开发中的mask掩码方式索引✨",children:[{level:3,title:"Mask掩码方式索引介绍：",slug:"mask掩码方式索引介绍",children:[]},{level:3,title:"三种索引方式",slug:"三种索引方式",children:[]},{level:3,title:"索引号切换方式",slug:"索引号切换方式",children:[]},{level:3,title:"注意",slug:"注意",children:[]}]}],path:"/Other/ABAQUS/ABAQUS%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84Mask%E6%8E%A9%E7%A0%81%E6%96%B9%E5%BC%8F%E7%B4%A2%E5%BC%95.html",pathLocale:"/",extraFields:[]},{title:"Simulation platform",headers:[{level:2,title:"✨基于ABAQUS二次开发的仿真分析平台✨",slug:"✨基于abaqus二次开发的仿真分析平台✨",children:[{level:3,title:"技术栈",slug:"技术栈",children:[]},{level:3,title:"ABAQUS有限元仿真技术",slug:"abaqus有限元仿真技术",children:[]},{level:3,title:"基于ABAQUS的二次开发",slug:"基于abaqus的二次开发",children:[]},{level:3,title:"平台开发",slug:"平台开发",children:[]}]}],path:"/Other/ABAQUS/Simulation%20platform.html",pathLocale:"/",extraFields:[]},{title:"命令行执行Python脚本的传参方式",headers:[{level:2,title:"✨命令行执行Python脚本的传参方式✨",slug:"✨命令行执行python脚本的传参方式✨",children:[{level:3,title:"应用场景",slug:"应用场景",children:[]},{level:3,title:"方式一",slug:"方式一",children:[]},{level:3,title:"方式二",slug:"方式二",children:[]}]}],path:"/Other/Python/%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%89%A7%E8%A1%8Cpython%E8%84%9A%E6%9C%AC%E7%9A%84%E4%BC%A0%E5%8F%82%E6%96%B9%E5%BC%8F.html",pathLocale:"/",extraFields:[]},{title:"浮生一记（1）-选择",headers:[{level:2,title:"✨浮生一记（1）-选择✨",slug:"✨浮生一记-1-选择✨",children:[{level:3,title:"选择的意义🚥",slug:"选择的意义🚥",children:[]},{level:3,title:"拥有选择🌈",slug:"拥有选择🌈",children:[]},{level:3,title:"如何选择🌠",slug:"如何选择🌠",children:[]}]}],path:"/T-zone/life/%E6%B5%AE%E7%94%9F%E4%B8%80%E8%AE%B0(1)-%E9%80%89%E6%8B%A9.html",pathLocale:"/",extraFields:[]},{title:"考研的意义何在",headers:[{level:2,title:"✨考研的意义何在✨",slug:"✨考研的意义何在✨",children:[{level:3,title:"此篇随笔仅纪录个人对考研的看法，真实性及时效性有待考量",slug:"此篇随笔仅纪录个人对考研的看法-真实性及时效性有待考量",children:[]},{level:3,title:"在你眼中的考研...😁",slug:"在你眼中的考研-😁",children:[]},{level:3,title:"现实中的你读研...😫",slug:"现实中的你读研-😫",children:[]},{level:3,title:"当然有人说他愿意混三年换来一张文凭...😑",slug:"当然有人说他愿意混三年换来一张文凭-😑",children:[]},{level:3,title:"研究生的正确使用方式🚀",slug:"研究生的正确使用方式🚀",children:[]},{level:3,title:"现实的当头一棒🔨",slug:"现实的当头一棒🔨",children:[]}]},{level:2,title:"共勉！！！",slug:"共勉",children:[]}],path:"/T-zone/no-emo/%E8%80%83%E7%A0%94%E7%9A%84%E6%84%8F%E4%B9%89%E4%BD%95%E5%9C%A8.html",pathLocale:"/",extraFields:[]},{title:"马克思为什么是对的？",headers:[{level:2,title:"✨马克思为什么是对的？✨",slug:"✨马克思为什么是对的-✨",children:[{level:3,title:"人性论",slug:"人性论",children:[]},{level:3,title:"资本主义性质",slug:"资本主义性质",children:[]},{level:3,title:"剩余价值理论",slug:"剩余价值理论",children:[]},{level:3,title:"资本主义如何控制我们",slug:"资本主义如何控制我们",children:[]},{level:3,title:"消费主义",slug:"消费主义",children:[]}]}],path:"/T-zone/no-emo/%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E5%AF%B9%E7%9A%84%EF%BC%9F.html",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/404.html",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/about/",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/mood/",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/link/",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/tag/",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/archive/",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/aurora-coze/",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/aurora-register/",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/photo/",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/next-mood/",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/aurora-music/",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/aurora-archive/",pathLocale:"/",extraFields:[]}]},5220:(n,e,s)=>{s.d(e,{H:()=>a});const a={base:"/",lang:"zh-CN",title:"💕(｡･∀･)ﾉﾞ嗨~Tang_ct's Blog",description:"",head:[["script",{src:"https://at.alicdn.com/t/font_2849934_v6y652peian.js"}],["link",{href:"/avatar.jpg",rel:"icon"}],["link",{rel:"stylesheet",type:"text/css",href:"//at.alicdn.com/t/font_2932340_r7zitafg82.css"}],["script",{src:"//at.alicdn.com/t/font_3164191_5b5y2by9sfr.js"}],["link",{rel:"stylesheet",type:"text/css",href:"//at.alicdn.com/t/font_3164191_pnt931owhb.css"}]],locales:{}}},2232:(n,e,s)=>{s.d(e,{f:()=>a});const a={navbar:[{text:"关于本站",link:"about.md",iconClass:"aurora-navbar-si-glyph-game-1"},{text:"自我介绍",link:"myself.md",iconClass:"aurora-navbar-si-glyph-billiard-ball"},{text:"Github",link:"https://github.com/Tangctt",iconClass:"icon-github"},{text:"CSDN",link:"https://blog.csdn.net/Tang__CT",iconClass:"icon-csdn"},{text:"网站推荐",iconClass:"aurora-navbar-si-glyph-glass-water",children:[{text:"Music",children:[{text:"MyFreeMp3",link:"http://tools.liumingye.cn/music/?page=searchPage"},{text:"Lazy-Music",link:"http://www.eggvod.cn/music/"}]},{text:"Video",children:[{text:"(゜-゜)つロ-bilibili",link:"https://www.bilibili.com/"},{text:"PianKu",link:"https://www.pianku.li/"},{text:"Youtube",link:"https://www.youtube.com/"}]},{text:"Search",children:[{text:"Baidu",link:"https://www.baidu.com/"},{text:"Google",link:"https://www.google.com/"}]},{text:"Collection",children:[{text:"Ujuji",link:"https://ujuji.com/"},{text:"XZJS",link:"https://www.xiaozhongjishu.com/"}]},{text:"English",children:[{text:"BBC Learning-English",link:"https://www.bbc.co.uk/learningenglish/"},{text:"TEDEd",link:"https://ed.ted.com/"},{text:"Engoo",link:"https://engoo.com/"}]},{text:"Games",children:[{text:"Battle City",link:"http://game.wangscaler.com/"},{text:"小霸王",link:"https://www.yikm.net/"}]}]},{text:"Vue",iconClass:"icon-logo-vue",children:[{text:"基础(○｀ 3′○)",children:[{text:"vue组件生命周期",link:"/Vue/vue组件生命周期.md"},{text:"通过nwtwork的ip访问",link:"/Vue/通过network的ip访问.md"},{text:"Vue组件间常用传参方式",link:"/Vue/Vue组件间常用传参方式.md"},{text:"Vue路由传参",link:"/Vue/Vue路由传参.md"},{text:"Cookie&LocalStorage&SessionStorage",link:"/Vue/Cookie&LocalStorage&SessionStorage.md"}]}]},{text:"Javascript",iconClass:"icon-socialjavascript",children:[{text:"基础(○｀ 3′○)",children:[{text:"null和undefined区别",link:"/Javascript/null和undefined区别.md"}]},{text:"Node.js",children:[{text:"Node.js两种调用Mongodb方法",link:"/Javascript/Node.js两种调用Mongodb方法.md"},{text:"访问node-express中static静态文件",link:"/Javascript/访问node-express中static静态文件.md"},{text:"GET与POST方法的区别",link:"/Javascript/GET与POST方法的区别.md"}]}]},{text:"Debug",iconClass:"icon-bug-fill",children:[{text:"前端(ಥ _ ಥ)",children:[{text:"页面空白",link:"/Debug/Vue项目页面空白.md"},{text:"node-sass",link:"/Debug/css预处理器node-sass安装出错.md"}]}]},{text:"Other",iconClass:"icon-other",children:[{text:"ABAQUS",children:[{text:"Simulation Platform",link:"/Other/ABAQUS/Simulation platform.md"},{text:"ABAQUS二次开发中的Mask掩码方式索引",link:"/Other/ABAQUS/ABAQUS二次开发中的Mask掩码方式索引.md"}]},{text:"Python",children:[{text:"命令行执行python脚本的传参方式",link:"/Other/Python/命令行执行python脚本的传参方式.md"}]}]},{text:"T-zone",iconClass:"icon-qqkongjian",children:[{text:"浮生若梦",children:[{text:"浮生一记(1)-选择",link:"/T-zone/life/浮生一记(1)-选择.md"}]},{text:"朝花夕拾",children:[{text:"16-11-27^南山公园",link:"/16-11-27^南山公园.md"}]},{text:"No-Emo..",children:[{text:"考研的意义何在",link:"/T-zone/no-emo/考研的意义何在.md"},{text:"马克思为什么是对的？",link:"/T-zone/no-emo/马克思为什么是对的？.md"}]}]}],darkMode:!1,repo:"https://github.com/qsyyke/vuepress-theme-aurora",repoIconClass:"aurora-navbar-github",docsRepo:"https://github.com/qsyyke/aurora-docs",githubActions:!0,docsBranch:"main",repoLabel:"Aurora-theme",editLink:!0,editLinkText:"edit",lastUpdated:!0,lastUpdatedText:"lastTime",logoColor:"#2c3e50",showFont:"程",heroImg:"/avatar.jpg",logo:"/avatar.jpg",lazyLoadingImg:"https://ooszy.cco.vin/img/blog-public/ljz.gif",homePageLazyLoadingImg:"https://ooszy.cco.vin/img/blog-note/aurora-loading.gif?name=chuchen",customRandomSay:!1,customRandomValue:"花有重开日，人无再少年",socials:[{aHref:"tencent://message/?uin=670992207",isHome:!0,show:!0,sidebar:!0,symbol:"#icon-qq"},{aHref:"/ico/wechat.png",isHome:!0,show:!0,symbol:"#icon-weixin",sidebar:!0},{aHref:"https://blog.csdn.net/Tang__CT",isHome:!0,show:!0,sidebar:!0,symbol:"#icon-wap_toolbar_csdn"},{aHref:"https://steamcommunity.com/profiles/76561198360443596/",isHome:!0,show:!0,sidebar:!0,symbol:"#icon-steam"},{aHref:"https://space.bilibili.com/289516537",isHome:!0,show:!0,sidebar:!0,symbol:"#icon-bilibili-1"},{aHref:"https://weibo.com/u/3310331011",isHome:!0,show:!0,symbol:"#icon-shejiaotubiao-06",sidebar:!0},{aHref:"https://www.xiaohongshu.com/user/profile/566a4ad5f53ee05be1ef5264?xhsshare=CopyLink&appuid=5e5f76d800000000010029df&apptime=1643265497",isHome:!0,show:!0,symbol:"#icon-xiaohongshu",sidebar:!0}],logoTitle:"Tangct's Blog",headTitle:"this is headTitle",description:"vuepress-theme-Aurora是一款简洁，美观，功能强大的静态主题",keyword:"vuepress主题,vuepress theme,生活琐事,二次元博客,简约博客,博客主题,静态主题",slideTime:3e5,randomSaw:"https://international.v1.hitokoto.cn/?c=b&max_length=45",randomSawQuery:"hitokoto",method:"get",randomColor:["#ffcad4","#d8e2dc","#8d99ae","#b8f2e6","#84c7d0","#aed9e0","#00b4d8","#caf0f8","#fbc4ab","#fdc5f5","#84dcc6","#a9def9","#fcf6bd","#f0a6ca","#b9faf8","#42a5f5","#ff9800","#b39ddb","#6d45bb","#b388ff","#1565c0","#26c6da","#5e548e","#90f1ef","#5b5f97","#bbe6e4","#42bfdd","#72ddf7","#8093f1","#9ed8d8","#7ea8be","#ef90b3","#b892ef","#c0b9dd","#c0d9dd","#75c9c8","#ded9e2","#b5e2fa","#62b6cb","#5fa8d3","#0fa3b1","#b5e2fa","#5fa8d3","#62b6cb","#b892ff"],maxFontColorArr:8,fontColor:["#2c3e50","#42a5f5","#8093f1","#FF6EC7","#FF7F00","#8FBC8F","#EAADEA","#3299CC","#CDCDCD","#CC3299","#FF7F00","#2F4F4F"],fontFamily:["-apple-system","hlt","tzt","sst","lf","xsf","lsf","cgt"],footer:["Copyright © 2022 by Tangct All Rights Reserved.","<a target='_blank' href='http://beian.miit.gov.cn/' style='display:inline-block;text-decoration:none;height:20px;line-height:20px;'><img src='' style='float:left;'/><p style='float:left;height:20px;line-height:20px;margin: 0px 0px 0px 5px;'>苏ICP备2022004865号</p></a>"],isShowFooter:!0,isShowThemeCopyright:!0,isShowRunTime:!0,startRunTime:"2/2/2022 22:22:22",prefixRuntime:"小破站已运行",recommendPageLength:30,recommendNoTitle:"`╮(￣▽￣)╭`",tagNoTitle:"暂时还没有标题哟",mood:"青衫烟雨客",isFitter:!0,defaultBorderRadius:10,defaultOpacity:.6,isHomePageFollow:!1,defaultBlur:1,split:"~",donate:{donateImg:["https://ooszy.cco.vin/img/blog-public/wxpay.png","https://ooszy.cco.vin/img/blog-public/zfbpay.jpg"],articlePage:!1,aboutPage:!1,donateProduct:[{name:"奶茶",img:"https://ooszy.cco.vin/img/blog-public/nc.jpeg",price:18,prefix:"$"},{name:"全味奶茶",img:"https://ooszy.cco.vin/img/blog-note/image-20210911233612031.png?",price:11,prefix:"￥"}],donateList:[{name:"初尘",msg:"主题太棒了",img:"https://ooszy.cco.vin/img/blog-public/nc.jpeg",price:7,prefix:"￥"}]},comment:{showComment:!1,serverURL:"https://aurora-local-7hrjb6mp8-qsyyke.vercel.app/",emojis:["https://cdn.jsdelivr.net/gh/walinejs/emojis@1.0.0/alus","https://cdn.jsdelivr.net/gh/walinejs/emojis@1.0.0/bilibili","https://cdn.jsdelivr.net/gh/walinejs/emojis@1.0.0/tieba","https://cdn.jsdelivr.net/gh/walinejs/emojis@1.0.0/weibo"],avatar:"monsterid"},poster:{description:"Welcome to Tangct's blog！",author:"Tangct",preBlog:"Aurora",suffixBlog:" theme",avatar:"/avatar.jpg"},showOnlineMood:!0,showMoodEdit:!1,addMood:{siteName:"localhost:8080",appId:"q4LlYVTTk2r39sNrJr7BL9A6p",appKey:"VxezWTppppyX2LTx4TUK8w6e2"},customTopImg:{custom:!0,page:["/bg/1.png","/bg/2.jpg","/bg/3.jpg","/bg/4.jpg","/bg/5.jpg","/bg/6.png","/bg/7.png","/bg/8.jpg","/bg/9.jpg","/bg/10.jpg","/bg/11.jpg","/bg/12.jpg","/bg/13.png","/bg/14.png","/bg/15.png","/bg/16.png","/bg/17.jpg","/bg/18.png","/bg/19.jpg","/bg/20.jpg","/bg/21.png","/bg/22.jpg","/bg/23.jpg","/bg/24.jpg","/bg/25.png","/bg/26.jpg","/bg/27.png","/bg/28.jpg","/bg/29.png","/bg/30.jpg","/bg/31.png","/bg/32.png","/bg/33.png","/bg/34.jpg","/bg/35.png","/bg/36.jpg","/bg/37.png","/bg/38.jpg","/bg/39.jpg","/bg/40.jpg","/bg/41.jpg","/bg/42.jpg"],friend:["https://picoss.cco.vin/animate/wall/669.png","https://picoss.cco.vin/animate/wall/5332.png"],tag:["https://picoss.cco.vin/animate/wall/763311.png"],mood:["https://picoss.cco.vin/animate/wall/5849.png"]},homeWps:["/bg/1.png","/bg/2.jpg","/bg/3.jpg","/bg/4.jpg","/bg/5.jpg","/bg/6.png","/bg/7.png","/bg/8.jpg","/bg/9.jpg","/bg/10.jpg","/bg/11.jpg","/bg/12.jpg","/bg/13.png","/bg/14.png","/bg/15.png","/bg/16.png","/bg/17.jpg","/bg/18.png","/bg/19.jpg","/bg/20.jpg","/bg/21.png","/bg/22.jpg","/bg/23.jpg","/bg/24.jpg","/bg/25.png","/bg/26.jpg","/bg/27.png","/bg/28.jpg","/bg/29.png","/bg/30.jpg","/bg/31.png","/bg/32.png","/bg/33.png","/bg/34.jpg","/bg/35.png","/bg/36.jpg","/bg/37.png","/bg/38.jpg","/bg/39.jpg","/bg/40.jpg","/bg/41.jpg","/bg/42.jpg"],homeWpsMobile:["/bg/a.png","/bg/b.png","/bg/c.jpg","/bg/d.jpg","/bg/e.jpg","/bg/f.jpg","/bg/g.jpg","/bg/h.jpg","/bg/i.png","/bg/j.png","/bg/k.png","/bg/l.jng","/bg/m.jng","/bg/n.jpeg","/bg/o.jng","/bg/p.jng","/bg/q.jng","/bg/r.jng","/bg/s.jng","/bg/t.jng","/bg/u.jng"],pageSize:3,githubUrl:"https://github.com/Tangctt",latestPageSize:4,showHomePageImg:!1,sidebarCatalogLevel:3,homePageImgApi:"https://api.ixiaowai.cn/api/api.php",mobileCutText:"Aurora",sidebarTag:"categories",showAddMood:!0,articleH2Icon:"🌸",articleH3Icon:"🐳",articleH4Icon:"⛄",sidebarAvatar:"/avatar.jpg",sugCountPerMin:300,showRecommend:!0,articlePagination:!0,global:{sidebar:{showStatus:!0,perData:!1,social:!1,friendLink:!0,navbar:!1,latestPage:!0,message:!1,tag:!0,siteData:!1},footer:!1},excludePath:["/footer.html","/v1.3.0/","/plugin/","/node.html","/style.html"],categoriesIncludeFolderName:!0,wave:{showWave:!0},bubble:{show:!0,bubbleNumber:.14,bubbleAlpha:.6,alphaChangeSpeed:1e-5,size:.4,sizeChangeSpeed:2e-4,riseSpeed:.4,color:"255,255,255"},leanCloud:{appId:"2A2Dyd2AffrnldhwftlEddVn-MdYXbMMI",appKey:"qHYTbb91iOPLelyC9lpbXxLH",masterKey:"eUwfvS3luIPnPiHS5SpEhDYr"},showPageMeta:!1,randomSayApi:{method:"GET",urlApi:"https://v1.hitokoto.cn/?encode=text&c=a"},afDianUrl:"https://afdian.net/@qsyyke",homeTopText:"Top",sidebarDesc:"✨✨Welcome to Tang_ct's Blog~!🎨🎨I'm in the second year of my master's degree and my major is🎓 mechanical engineering (｡･∀･)ﾉ~💕",locales:{"/":{selectLanguageName:"English"}},selectLanguageText:"Languages",selectLanguageAriaLabel:"Select language",sidebar:"auto",sidebarDepth:2,contributors:!0,contributorsText:"Contributors",notFound:["There's nothing here.","How did we get here?","That's a Four-Oh-Four.","Looks like we've got some broken links."],backToHome:"Take me home",openInNewWindow:"open in new window"}},4125:(n,e,s)=>{s.d(e,{Z:()=>a});const a=[{data:{key:"v-690f92a4",path:"/16-11-27%5E%E5%8D%97%E5%B1%B1%E5%85%AC%E5%9B%AD.html",title:"16-11-27=>南山公园",lang:"zh-CN",frontmatter:{date:"2022/4/8 10:18",coverUrl:"/pic/12.jpg",stick:!1,keyword:"朝花夕拾",description:"朝花夕拾",title:"16-11-27=>南山公园",tag:["朝花夕拾"],categories:["朝花夕拾"]},excerpt:"",headers:[{level:2,title:"🍂16-11-27=>南山公园🍂",slug:"🍂16-11-27-南山公园🍂",children:[]}],git:{updatedTime:null,contributors:[]}},key:"v-690f92a4",path:"/16-11-27%5E%E5%8D%97%E5%B1%B1%E5%85%AC%E5%9B%AD.html",title:"16-11-27=>南山公园",lang:"zh-CN",frontmatter:{date:"2022/4/8 10:18",coverUrl:"/pic/12.jpg",stick:!1,keyword:"朝花夕拾",description:"朝花夕拾",title:"16-11-27=>南山公园",tag:["朝花夕拾"],categories:["朝花夕拾"]},excerpt:"",headers:[{level:2,title:"🍂16-11-27=>南山公园🍂",slug:"🍂16-11-27-南山公园🍂",children:[]}],content:'\r\n## 🍂16-11-27=>南山公园🍂\r\n\r\n> 2016年11月27日，宿舍六人南山公园秋游\r\n\r\n<div align=center>\r\n<img src="pic/story-1.jpg" width="76%" height="100%">\r\n</div>\r\n\r\n> 记得是某个课程的老师推荐我们去南山公园走走，我们便挑了个周末的上午出发\r\n- 那天天气很好，非常适合出去游玩\r\n- 我们吹了一路的牛，其乐融融\r\n- 正经的老王还放Tokyo-hot给我们听\r\n\r\n> 那时的我们还很懵懂，对他乡大学的一切充满好奇\r\n- 搞笑的小伟牛，贪玩的阿虎\r\n- 猥琐的老王，单纯的小柯\r\n- 老实的键哥，爱吹牛的我\r\n\r\n> 那时的我们也很天真，糊糊涂涂地过着每一天\r\n- 每天除了上课就是心无杂念的各种玩\r\n- 逃课、睡懒觉、打游戏无所不能\r\n- 无忧无虑的生活，很开心...\r\n\r\n**谨以此纪念2016-11-27上午，悠闲的南山公园六人行**',contentRendered:'<h2 id="🍂16-11-27-南山公园🍂" tabindex="-1"><a class="header-anchor" href="#🍂16-11-27-南山公园🍂" aria-hidden="true">#</a> 🍂16-11-27=&gt;南山公园🍂</h2>\n<blockquote>\n<p>2016年11月27日，宿舍六人南山公园秋游</p>\n</blockquote>\n<div align=center>\n<img src="pic/story-1.jpg" width="76%" height="100%">\n</div>\n<blockquote>\n<p>记得是某个课程的老师推荐我们去南山公园走走，我们便挑了个周末的上午出发</p>\n</blockquote>\n<ul>\n<li>那天天气很好，非常适合出去游玩</li>\n<li>我们吹了一路的牛，其乐融融</li>\n<li>正经的老王还放Tokyo-hot给我们听</li>\n</ul>\n<blockquote>\n<p>那时的我们还很懵懂，对他乡大学的一切充满好奇</p>\n</blockquote>\n<ul>\n<li>搞笑的小伟牛，贪玩的阿虎</li>\n<li>猥琐的老王，单纯的小柯</li>\n<li>老实的键哥，爱吹牛的我</li>\n</ul>\n<blockquote>\n<p>那时的我们也很天真，糊糊涂涂地过着每一天</p>\n</blockquote>\n<ul>\n<li>每天除了上课就是心无杂念的各种玩</li>\n<li>逃课、睡懒觉、打游戏无所不能</li>\n<li>无忧无虑的生活，很开心...</li>\n</ul>\n<p><strong>谨以此纪念2016-11-27上午，悠闲的南山公园六人行</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/16-11-27^南山公园.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"16-11-27^南山公园",filePath:"C:/Users/67099/Desktop/blog-demo/docs/16-11-27^南山公园.md",filePathRelative:"16-11-27^南山公园.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/16-11-27^南山公园.html.vue",componentFilePathRelative:"pages/16-11-27^南山公园.html.vue",componentFileChunkName:"v-690f92a4",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/16-11-27^南山公园.html.js",dataFilePathRelative:"pages/16-11-27^南山公园.html.js",dataFileChunkName:"v-690f92a4",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/16-11-27^南山公园.html",htmlFilePathRelative:"16-11-27^南山公园.html"},{data:{key:"v-22a39d25",path:"/about.html",title:"Introduction of the site",lang:"zh-CN",frontmatter:{date:"2022/4/2 23:10",coverUrl:"/pic/2.jpg",stick:!0,keyword:"Aurora,Introduction,theme,site",description:"Introduction of the site",title:"Introduction of the site",tag:["Aurora","Introduction","Theme","Site"],categories:["Introduction","Aurora","theme"]},excerpt:"",headers:[{level:2,title:"✨Introduction of the site✨",slug:"✨introduction-of-the-site✨",children:[]},{level:2,title:"Feature",slug:"feature",children:[]},{level:2,title:"Quick start",slug:"quick-start",children:[{level:3,title:"Node安装",slug:"node安装",children:[]},{level:3,title:"安装CLI",slug:"安装cli",children:[]},{level:3,title:"创建博客",slug:"创建博客",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-22a39d25",path:"/about.html",title:"Introduction of the site",lang:"zh-CN",frontmatter:{date:"2022/4/2 23:10",coverUrl:"/pic/2.jpg",stick:!0,keyword:"Aurora,Introduction,theme,site",description:"Introduction of the site",title:"Introduction of the site",tag:["Aurora","Introduction","Theme","Site"],categories:["Introduction","Aurora","theme"]},excerpt:"",headers:[{level:2,title:"✨Introduction of the site✨",slug:"✨introduction-of-the-site✨",children:[]},{level:2,title:"Feature",slug:"feature",children:[]},{level:2,title:"Quick start",slug:"quick-start",children:[{level:3,title:"Node安装",slug:"node安装",children:[]},{level:3,title:"安装CLI",slug:"安装cli",children:[]},{level:3,title:"创建博客",slug:"创建博客",children:[]}]}],content:'\n## ✨Introduction of the site✨\n\n\n[Demo](http://aurora.xcye.xyz/)A vuepress-based animation blog theme, simple, beautiful, multi-color, multiple custom functions, providing article poster sharing, talk, photo album, comment and other features\n\n> 一款基于vuepress的动漫类博客主题，简洁，漂亮，多色彩，多种自定义功能，提供文章海报分享，说说，相册，评论，侧边栏，自动生成文章侧边栏等特色功能\n\n<a href="https://www.npmjs.com/package/vuepress-theme-aurora"><img alt="npm" src="https://img.shields.io/npm/v/vuepress-theme-aurora"></a>![npm](https://img.shields.io/npm/dw/vuepress-theme-aurora)<a href="https://github.com/qsyyke/vuepress-theme-aurora"><img alt="GitHub Repo stars" src="https://img.shields.io/github/stars/qsyyke/vuepress-theme-aurora?style=social"></a>\n\n## Feature\n\n- **简洁美观** 细节精致，界面简约漂亮，毛玻璃效果\n- **开箱即用** 下载便可直接使用\n- **自动生成文章侧边栏** 自动为文章所在目录下的所有md文件生成侧边栏文章目录 ，不用在为文章侧边栏而烦恼\n- **图片懒加载** 为文章所有图片，首页文章列表加入懒加载效果，支持自定义占位符，大大提升页面加载速度\n- **海报分享** 自动为文章生成海报分享功能，支持自定义海报样式\n- **SEO** 自定义keyword，description或者主题自动生成keyword，description，提升搜索引擎收录\n- **多种功能** 文章海报分享，赞赏，文章分类，友情链接，心情说说，相册，评论，图片懒加载，自动生成文章目录...\n- **高度自定义** 提供多个组件和主题配置文件进行自定义，除了部分页面布局文字之外，页面都是可定制的\n- `自定义页脚` 支持自定义页脚\n- **文章置顶** 首页文章置顶功能\n- **移除默认主题的侧边栏** 移除默认主题侧边栏，新侧边栏更加美观，并且在侧边栏上加入多个模块，如文章信息，最新文章，友情链接等等 \n- **社交图标** 全部采用阿里图标，所有图标都是经过精心挑选，并且图标修改非常简单\n- **阅读体验** 切换背景，修改字体，颜色，毛玻璃效果，圆角，透明度控制\n- **动漫背景** 所有页面背景都使用动漫图片，同样也可以使用自己的背景图\n- **搜索** 文章搜索功能\n- **随机一言打字机** 首页或者其他位置，通过打字机效果展示随机一言或者自定义语句\n- **自适应** 为手机端和PC端都做了适配\n- **vuepress** 依赖于vuepress，一个静态博客框架，支持几乎所有的vuepress特性\n\n**....**\n\n## Quick start\n\n### Node安装\n\n运行环境需要依赖`node`，如果你未安装`node`，请先安装node，我安装的版本为`v14.17.3`\n\n> 安装node可查看[Node 安装](https://aurora.xcye.xyz/node.html)\n\n### 安装CLI\n\n- npm\n\n  ```sh\n  npm i vuepress-theme-cli -g\n  ```\n\n- yarn\n\n  ```sh\n  yarn global vuepress-theme-cli\n  ```\n\n\n\n### 创建博客\n\n待脚手架cli安装成功之后，进入cmd中\n\n\n在命令行处输入下面命令\n\n```sh\naurora blog-demo\n```\n\n> `blog-demo`是你的博客文件件名称，会自动创建以此名字命名的文件夹\n\n\n\n::: tip\n\n如果提示\n\n```sh\n\'aurora\' 不是内部或外部命令，也不是可运行的程序\n或批处理文件。\n```\n\n请看[这里](https://aurora.xcye.xyz/issue/cli-issue.md)\n\n:::\n\n\n\n\n> 这个过程大概几秒，取决于你的网速，待安装成功之后，你会发现在当前目录下，多了一个目录\n\n\n> 然后进入此`demo-blog`目录中，使用命令`npm install`或者`yarn install`安装所需的依赖，待依赖安装成功之后，使用`npm run dev`或者`yarn dev`启动博客\n\n\n\n\n\n> 运行成功之后，会出现一个地址，你只需要在浏览器中，输入这个地址，就可以看到主页面\n\n\n::: tip\n\n恭喜你，到这里，你已经安装成功了，接下来便可以尽情书写博客和修改配置(`上图展示出来的效果是默认配置，你可以更改`)\n\n\n:::\n\n\n',contentRendered:'<h2 id="✨introduction-of-the-site✨" tabindex="-1"><a class="header-anchor" href="#✨introduction-of-the-site✨" aria-hidden="true">#</a> ✨Introduction of the site✨</h2>\n<p><a href="http://aurora.xcye.xyz/" target="_blank" rel="noopener noreferrer">Demo<ExternalLinkIcon/></a>A vuepress-based animation blog theme, simple, beautiful, multi-color, multiple custom functions, providing article poster sharing, talk, photo album, comment and other features</p>\n<blockquote>\n<p>一款基于vuepress的动漫类博客主题，简洁，漂亮，多色彩，多种自定义功能，提供文章海报分享，说说，相册，评论，侧边栏，自动生成文章侧边栏等特色功能</p>\n</blockquote>\n<p><a href="https://www.npmjs.com/package/vuepress-theme-aurora"><img alt="npm" src="https://img.shields.io/npm/v/vuepress-theme-aurora"></a><img src="https://ooszy.cco.vin/img/blog-public/ljz.gif" alt="npm" originSrc="https://img.shields.io/npm/dw/vuepress-theme-aurora" data="aurora"><a href="https://github.com/qsyyke/vuepress-theme-aurora"><img alt="GitHub Repo stars" src="https://img.shields.io/github/stars/qsyyke/vuepress-theme-aurora?style=social"></a></p>\n<h2 id="feature" tabindex="-1"><a class="header-anchor" href="#feature" aria-hidden="true">#</a> Feature</h2>\n<ul>\n<li><strong>简洁美观</strong> 细节精致，界面简约漂亮，毛玻璃效果</li>\n<li><strong>开箱即用</strong> 下载便可直接使用</li>\n<li><strong>自动生成文章侧边栏</strong> 自动为文章所在目录下的所有md文件生成侧边栏文章目录 ，不用在为文章侧边栏而烦恼</li>\n<li><strong>图片懒加载</strong> 为文章所有图片，首页文章列表加入懒加载效果，支持自定义占位符，大大提升页面加载速度</li>\n<li><strong>海报分享</strong> 自动为文章生成海报分享功能，支持自定义海报样式</li>\n<li><strong>SEO</strong> 自定义keyword，description或者主题自动生成keyword，description，提升搜索引擎收录</li>\n<li><strong>多种功能</strong> 文章海报分享，赞赏，文章分类，友情链接，心情说说，相册，评论，图片懒加载，自动生成文章目录...</li>\n<li><strong>高度自定义</strong> 提供多个组件和主题配置文件进行自定义，除了部分页面布局文字之外，页面都是可定制的</li>\n<li><code>自定义页脚</code> 支持自定义页脚</li>\n<li><strong>文章置顶</strong> 首页文章置顶功能</li>\n<li><strong>移除默认主题的侧边栏</strong> 移除默认主题侧边栏，新侧边栏更加美观，并且在侧边栏上加入多个模块，如文章信息，最新文章，友情链接等等</li>\n<li><strong>社交图标</strong> 全部采用阿里图标，所有图标都是经过精心挑选，并且图标修改非常简单</li>\n<li><strong>阅读体验</strong> 切换背景，修改字体，颜色，毛玻璃效果，圆角，透明度控制</li>\n<li><strong>动漫背景</strong> 所有页面背景都使用动漫图片，同样也可以使用自己的背景图</li>\n<li><strong>搜索</strong> 文章搜索功能</li>\n<li><strong>随机一言打字机</strong> 首页或者其他位置，通过打字机效果展示随机一言或者自定义语句</li>\n<li><strong>自适应</strong> 为手机端和PC端都做了适配</li>\n<li><strong>vuepress</strong> 依赖于vuepress，一个静态博客框架，支持几乎所有的vuepress特性</li>\n</ul>\n<p><strong>....</strong></p>\n<h2 id="quick-start" tabindex="-1"><a class="header-anchor" href="#quick-start" aria-hidden="true">#</a> Quick start</h2>\n<h3 id="node安装" tabindex="-1"><a class="header-anchor" href="#node安装" aria-hidden="true">#</a> Node安装</h3>\n<p>运行环境需要依赖<code>node</code>，如果你未安装<code>node</code>，请先安装node，我安装的版本为<code>v14.17.3</code></p>\n<blockquote>\n<p>安装node可查看<a href="https://aurora.xcye.xyz/node.html" target="_blank" rel="noopener noreferrer">Node 安装<ExternalLinkIcon/></a></p>\n</blockquote>\n<h3 id="安装cli" tabindex="-1"><a class="header-anchor" href="#安装cli" aria-hidden="true">#</a> 安装CLI</h3>\n<ul>\n<li>\n<p>npm</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> i vuepress-theme-cli -g\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n<li>\n<p>yarn</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">yarn</span> global vuepress-theme-cli\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n</ul>\n<h3 id="创建博客" tabindex="-1"><a class="header-anchor" href="#创建博客" aria-hidden="true">#</a> 创建博客</h3>\n<p>待脚手架cli安装成功之后，进入cmd中</p>\n<p>在命令行处输入下面命令</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>aurora blog-demo\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p><code>blog-demo</code>是你的博客文件件名称，会自动创建以此名字命名的文件夹</p>\n</blockquote>\n<div class="custom-container tip"><p class="custom-container-title">TIP</p>\n<p>如果提示</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token string">\'aurora\'</span> 不是内部或外部命令，也不是可运行的程序\n或批处理文件。\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>请看<a href="https://aurora.xcye.xyz/issue/cli-issue.md" target="_blank" rel="noopener noreferrer">这里<ExternalLinkIcon/></a></p>\n</div>\n<blockquote>\n<p>这个过程大概几秒，取决于你的网速，待安装成功之后，你会发现在当前目录下，多了一个目录</p>\n</blockquote>\n<blockquote>\n<p>然后进入此<code>demo-blog</code>目录中，使用命令<code>npm install</code>或者<code>yarn install</code>安装所需的依赖，待依赖安装成功之后，使用<code>npm run dev</code>或者<code>yarn dev</code>启动博客</p>\n</blockquote>\n<blockquote>\n<p>运行成功之后，会出现一个地址，你只需要在浏览器中，输入这个地址，就可以看到主页面</p>\n</blockquote>\n<div class="custom-container tip"><p class="custom-container-title">TIP</p>\n<p>恭喜你，到这里，你已经安装成功了，接下来便可以尽情书写博客和修改配置(<code>上图展示出来的效果是默认配置，你可以更改</code>)</p>\n</div>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/about.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"about",filePath:"C:/Users/67099/Desktop/blog-demo/docs/about.md",filePathRelative:"about.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/about.html.vue",componentFilePathRelative:"pages/about.html.vue",componentFileChunkName:"v-22a39d25",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/about.html.js",dataFilePathRelative:"pages/about.html.js",dataFileChunkName:"v-22a39d25",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/about.html",htmlFilePathRelative:"about.html"},{data:{key:"v-b1714770",path:"/myself.html",title:"Self-Introduction",lang:"zh-CN",frontmatter:{date:"2022/4/10 11:32",coverUrl:"/pic/1.jpg",stick:!0,keyword:"Self-Introduction",description:"Self-Introduction",title:"Self-Introduction",tag:["Myself","Introduction"],categories:["Self-Introduction"]},excerpt:"",headers:[{level:2,title:"🎈✨🎉Welcome!🎉✨🎈",slug:"🎈✨🎉welcome-🎉✨🎈",children:[]},{level:2,title:"Self-Introduction",slug:"self-introduction",children:[]},{level:2,title:"Hobbies",slug:"hobbies",children:[{level:3,title:"踢球踢球⚽！！！",slug:"踢球踢球⚽",children:[]},{level:3,title:"骑车骑车🚲！！！",slug:"骑车骑车🚲",children:[]},{level:3,title:"Gaming🎮！！！",slug:"gaming🎮",children:[]}]},{level:2,title:"Stories",slug:"stories",children:[]},{level:2,title:"Wishes",slug:"wishes",children:[{level:3,title:"小目标（努力实现🥳）",slug:"小目标-努力实现🥳",children:[]},{level:3,title:"大梦想（想想就好🤔）",slug:"大梦想-想想就好🤔",children:[]}]},{level:2,title:"My treasure",slug:"my-treasure",children:[]},{level:2,title:"Travel timeline",slug:"travel-timeline",children:[{level:3,title:"校园时光，一去不复返",slug:"校园时光-一去不复返",children:[]},{level:3,title:"长沙",slug:"长沙",children:[]},{level:3,title:"南昌",slug:"南昌",children:[]},{level:3,title:"无锡",slug:"无锡",children:[]},{level:3,title:"上海",slug:"上海",children:[]},{level:3,title:"PPMT",slug:"ppmt",children:[]},{level:3,title:"南京",slug:"南京",children:[]},{level:3,title:"深圳",slug:"深圳",children:[]}]},{level:2,title:"To be continue...",slug:"to-be-continue",children:[]}],git:{updatedTime:null,contributors:[]}},key:"v-b1714770",path:"/myself.html",title:"Self-Introduction",lang:"zh-CN",frontmatter:{date:"2022/4/10 11:32",coverUrl:"/pic/1.jpg",stick:!0,keyword:"Self-Introduction",description:"Self-Introduction",title:"Self-Introduction",tag:["Myself","Introduction"],categories:["Self-Introduction"]},excerpt:"",headers:[{level:2,title:"🎈✨🎉Welcome!🎉✨🎈",slug:"🎈✨🎉welcome-🎉✨🎈",children:[]},{level:2,title:"Self-Introduction",slug:"self-introduction",children:[]},{level:2,title:"Hobbies",slug:"hobbies",children:[{level:3,title:"踢球踢球⚽！！！",slug:"踢球踢球⚽",children:[]},{level:3,title:"骑车骑车🚲！！！",slug:"骑车骑车🚲",children:[]},{level:3,title:"Gaming🎮！！！",slug:"gaming🎮",children:[]}]},{level:2,title:"Stories",slug:"stories",children:[]},{level:2,title:"Wishes",slug:"wishes",children:[{level:3,title:"小目标（努力实现🥳）",slug:"小目标-努力实现🥳",children:[]},{level:3,title:"大梦想（想想就好🤔）",slug:"大梦想-想想就好🤔",children:[]}]},{level:2,title:"My treasure",slug:"my-treasure",children:[]},{level:2,title:"Travel timeline",slug:"travel-timeline",children:[{level:3,title:"校园时光，一去不复返",slug:"校园时光-一去不复返",children:[]},{level:3,title:"长沙",slug:"长沙",children:[]},{level:3,title:"南昌",slug:"南昌",children:[]},{level:3,title:"无锡",slug:"无锡",children:[]},{level:3,title:"上海",slug:"上海",children:[]},{level:3,title:"PPMT",slug:"ppmt",children:[]},{level:3,title:"南京",slug:"南京",children:[]},{level:3,title:"深圳",slug:"深圳",children:[]}]},{level:2,title:"To be continue...",slug:"to-be-continue",children:[]}],content:'\r\n## 🎈✨🎉Welcome!🎉✨🎈\r\n\r\n\r\n\r\nWelcome to Tangct\'s blog, where I show my learning notes and process. Here, you can learn some technology stacks and facets about front-end, as well as relevant notes of my school scientific research projects. Visit my [GitHub](https://github.com/Tangctt) and [CSDN](https://blog.csdn.net/Tang__CT) to learn more about the project source code and learning notes.\r\n> 欢迎来到我的博客，这里展示了我的学习笔记和学习过程。在这里，你可以看到关于前端的一些技术栈和面经，同时还有我在校科研项目的相关笔记。欢迎访问我的[Github](https://github.com/Tangctt)和[CSDN](https://blog.csdn.net/Tang__CT)，以了解更多项目源码及学习笔记。\r\n\r\n## Self-Introduction\r\n- **来自江苏无锡，98年属虎，双鱼座男生**\r\n- **目前在读研，辣鸡本科，牛马专业**\r\n- **热爱生活，乐观向上，喜欢吹牛**\r\n- **前端小白，正在努力学习中...**\r\n- **🥇互联网冲浪金牌选手**\r\n- **🐤宇宙一级潜在鸽王**\r\n- **🤐资深话题终结者**\r\n- **🦉退役熬夜选手**\r\n- **...**\r\n\r\n\r\n## Hobbies\r\n### 踢球踢球⚽！！！\r\n- **人菜瘾大，还总是受伤**\r\n- **坚持最久的爱好了属于是**\r\n- **逃课踢、下雨踢、下雪也踢**\r\n\r\n- **不知道这个爱好能不能坚持下去**\r\n\r\n\r\n\r\n### 骑车骑车🚲！！！\r\n- **曾梦想仗剑走天涯**\r\n- **来一场说走就走的旅行**\r\n- **长途、短途、上坡、越野...**\r\n- **自从有了山地车，一切就变得简单了**\r\n- **穿过峡谷，翻过雪山，路过无人的戈壁滩**\r\n  \r\n- **曾经最热爱的运动，也是最充满回忆的，不知以后能否拾起...**\r\n\r\n\r\n### Gaming🎮！！！\r\n- **重度游戏爱好者了**\r\n- **啥都爱玩，几乎不挑食**\r\n- **端游手游、王者吃鸡、鹅厂“大作”**\r\n- **战地、刺客信条、COD、Far Cry系列**\r\n- **3A、FPS、RPG、独立、休闲、竞技体育...**\r\n\r\n- **我不能没有游戏 ，就像西方不能没有耶路撒冷😂**\r\n\r\n\r\n\r\n## Stories\r\n#### 足球生涯⚽\r\n\r\n> 本科四年期间，每天不是去踢球，就是在去踢球的路上，也因此结识了一些“狐朋狗友”。可如今，随着一年接一年的毕业季，大家都已分道扬镳，有的去工作，有的读研，还有的报效祖国。\r\n\r\n<div align=center>\r\n<img src="pic/myself-2.jpg" width="76%" height="100%">\r\n</div>\r\n\r\n> 花有重开日，人无再少年。曾经一起踢球的绿茵场换了一波又一波的同学，我们存在过的痕迹也渐渐消失。九院的球场没了我们依旧很热闹，这片土地也在无时无刻上演着我们的故事。\r\n\r\n<div align=center>\r\n<img src="pic/myself-1.jpg" width="76%" height="100%">\r\n</div>\r\n\r\n- **谨以此纪念那些年一起踢球、一起欢乐、一起陪我度过我大学足球时光的兄弟们**\r\n\r\n#### 拉萨之旅🚲\r\n\r\n> 一场说走就走的旅行，源于对骑行的热爱，对自由的向往，和对远方的幻想。\r\n\r\n> G318-成都=>拉萨，总里程2155KM，历时22天，翻越12座海拔4000+的雪山...\r\n\r\n<div>\r\n<img src = "pic/myself-3.jpeg"  width = "48%"  ><img src = "pic/myself-4.jpeg"  width = "48%" align = right>\r\n</div>\r\n\r\n> 一路上虽历经风雨、高反等诸多困难，可还是敌不过世界最美景观大道带给我们的视觉冲击和心灵震撼。\r\n\r\n<div>\r\n<img src = "pic/myself-5.jpg"  width = "48%"  ><img src = "pic/myself-6.jpeg"  width = "48%" align = right>\r\n</div>\r\n\r\n> 禾尼的草原、然乌的阳光、米堆的冰川、拉萨的夕阳，是去过一次就一定想去第二次的地方，现在依然清晰地印在我的脑海之中。\r\n\r\n<div>\r\n<img src = "pic/myself-7.jpg"  width = "48%"  ><img src = "pic/myself-8.jpeg"  width = "48%" align = right>\r\n</div>\r\n\r\n> 当看到布达拉宫，一切皆释然，故事也随之戛然而止...\r\n\r\n<div>\r\n<img src = "pic/myself-9.jpeg"  width = "48%"  ><img src = "pic/myself-10.jpg"  width = "48%" align = right>\r\n</div>\r\n\r\n- **怀念那段梦幻的时光、自由骑行的我们，和令人流连忘返的拉萨之旅**\r\n\r\n\r\n## Wishes\r\n\r\n### 小目标（努力实现🥳）\r\n\r\n- **一切一切的前提，顺利毕业！！！**\r\n- **努力学习！成为前端大佬！**\r\n- **找到称心如意的工作**\r\n- **和小胡一起奋斗💑**\r\n\r\n- **赚钱、赚钱...**\r\n\r\n### 大梦想（想想就好🤔）\r\n\r\n- **拥有一个大大的房子**\r\n- **游遍祖国大好河山**\r\n\r\n- **财务自由...**\r\n\r\n``` python\r\n做人一定要有梦想，不然跟咸鱼有什么区别？\r\n就算做咸鱼，也要做最咸的那条！\r\n                                        ——星爷\r\n```\r\n\r\n\r\n\r\n## My treasure\r\n\r\n> 一个可爱且善良的女孩，陪我度过了大部分大学时光，在一起四年多了\r\n\r\n> 不用去怀疑她对我的感情，真诚、纯粹、就宛如山楂树之恋一般\r\n\r\n> 她很喜欢逛小红书，也喜欢潮玩盲盒PPMT，还喜欢和我聊天\r\n\r\n> 她喜欢四字弟弟YYQX，那个万千姐姐粉的顶流小鲜肉\r\n\r\n> 如果让我选择一个我最信任的人，那非她莫属了\r\n\r\n> 她最喜欢做的，是和她喜欢的人一起去旅游\r\n\r\n> 一起走遍大江南北，看尽五湖四海\r\n\r\n> 只要和她在一起我就非常开心\r\n\r\n> 我们要一直走下去呀💖...\r\n\r\n## Travel timeline\r\n\r\n### 校园时光，一去不复返\r\n\r\n> 无忧无虑的校园生活，阳光、草地、操场、你我\r\n\r\n<div>\r\n<img src = "pic/myself-11.jpeg"  width = "48%"  ><img src = "pic/myself-12.jpg"  width = "48%" align = right>\r\n</div>\r\n\r\n### 长沙\r\n\r\n> 细雨蒙蒙的橘子洲，坐在IFS上的Kaws\r\n\r\n<div>\r\n<img src = "pic/myself-13.jpeg"  width = "48%"  ><img src = "pic/myself-14.jpeg"  width = "48%" align = right>\r\n</div>\r\n\r\n### 南昌\r\n\r\n> 绿地双子塔，卢塞恩小镇\r\n\r\n<div>\r\n<img src = "pic/myself-15.jpeg"  width = "48%"  ><img src = "pic/myself-16.jpeg"  width = "48%" align = right>\r\n</div>\r\n\r\n### 无锡\r\n\r\n> 锡惠公园、灵山大佛\r\n\r\n<div>\r\n<img src = "pic/myself-17.jpeg"  width = "48%"  ><img src = "pic/myself-18.jpeg"  width = "48%" align = right>\r\n</div>\r\n\r\n### 上海\r\n\r\n> 拥挤的外滩，多抓鱼的试衣镜\r\n\r\n<div>\r\n<img src = "pic/myself-19.jpeg"  width = "48%"  ><img src = "pic/myself-20.jpeg"  width = "48%" align = right>\r\n</div>\r\n\r\n### PPMT\r\n\r\n> 竟然抽到了隐藏款“痛车”！太激动啦🎉！！！\r\n\r\n<div>\r\n<img src = "pic/myself-21.jpeg"  width = "48%"  ><img src = "pic/myself-22.jpeg"  width = "48%" align = right>\r\n</div>\r\n\r\n### 南京\r\n\r\n> 鸡鸣寺，钟山风景区\r\n\r\n<div>\r\n<img src = "pic/myself-23.jpg"  width = "48%"  ><img src = "pic/myself-24.jpg"  width = "48%" align = right>\r\n</div>\r\n\r\n### 深圳\r\n\r\n> 欢乐港湾摩天轮🎡，飞机溜溜球🛫\r\n\r\n<div>\r\n<img src = "pic/myself-25.jpg"  width = "48%"  ><img src = "pic/myself-26.jpg"  width = "48%" align = right>\r\n</div>\r\n\r\n- **未完待续...**\r\n\r\n\r\n\r\n## To be continue...\r\n\r\n``` python\r\n往事不可追，来者犹可忆\r\n                             ——《论语》\r\n```\r\n\r\n\r\n\r\n',contentRendered:'<h2 id="🎈✨🎉welcome-🎉✨🎈" tabindex="-1"><a class="header-anchor" href="#🎈✨🎉welcome-🎉✨🎈" aria-hidden="true">#</a> 🎈✨🎉Welcome!🎉✨🎈</h2>\n<p>Welcome to Tangct\'s blog, where I show my learning notes and process. Here, you can learn some technology stacks and facets about front-end, as well as relevant notes of my school scientific research projects. Visit my <a href="https://github.com/Tangctt" target="_blank" rel="noopener noreferrer">GitHub<ExternalLinkIcon/></a> and <a href="https://blog.csdn.net/Tang__CT" target="_blank" rel="noopener noreferrer">CSDN<ExternalLinkIcon/></a> to learn more about the project source code and learning notes.</p>\n<blockquote>\n<p>欢迎来到我的博客，这里展示了我的学习笔记和学习过程。在这里，你可以看到关于前端的一些技术栈和面经，同时还有我在校科研项目的相关笔记。欢迎访问我的<a href="https://github.com/Tangctt" target="_blank" rel="noopener noreferrer">Github<ExternalLinkIcon/></a>和<a href="https://blog.csdn.net/Tang__CT" target="_blank" rel="noopener noreferrer">CSDN<ExternalLinkIcon/></a>，以了解更多项目源码及学习笔记。</p>\n</blockquote>\n<h2 id="self-introduction" tabindex="-1"><a class="header-anchor" href="#self-introduction" aria-hidden="true">#</a> Self-Introduction</h2>\n<ul>\n<li><strong>来自江苏无锡，98年属虎，双鱼座男生</strong></li>\n<li><strong>目前在读研，辣鸡本科，牛马专业</strong></li>\n<li><strong>热爱生活，乐观向上，喜欢吹牛</strong></li>\n<li><strong>前端小白，正在努力学习中...</strong></li>\n<li><strong>🥇互联网冲浪金牌选手</strong></li>\n<li><strong>🐤宇宙一级潜在鸽王</strong></li>\n<li><strong>🤐资深话题终结者</strong></li>\n<li><strong>🦉退役熬夜选手</strong></li>\n<li><strong>...</strong></li>\n</ul>\n<h2 id="hobbies" tabindex="-1"><a class="header-anchor" href="#hobbies" aria-hidden="true">#</a> Hobbies</h2>\n<h3 id="踢球踢球⚽" tabindex="-1"><a class="header-anchor" href="#踢球踢球⚽" aria-hidden="true">#</a> 踢球踢球⚽！！！</h3>\n<ul>\n<li>\n<p><strong>人菜瘾大，还总是受伤</strong></p>\n</li>\n<li>\n<p><strong>坚持最久的爱好了属于是</strong></p>\n</li>\n<li>\n<p><strong>逃课踢、下雨踢、下雪也踢</strong></p>\n</li>\n<li>\n<p><strong>不知道这个爱好能不能坚持下去</strong></p>\n</li>\n</ul>\n<h3 id="骑车骑车🚲" tabindex="-1"><a class="header-anchor" href="#骑车骑车🚲" aria-hidden="true">#</a> 骑车骑车🚲！！！</h3>\n<ul>\n<li>\n<p><strong>曾梦想仗剑走天涯</strong></p>\n</li>\n<li>\n<p><strong>来一场说走就走的旅行</strong></p>\n</li>\n<li>\n<p><strong>长途、短途、上坡、越野...</strong></p>\n</li>\n<li>\n<p><strong>自从有了山地车，一切就变得简单了</strong></p>\n</li>\n<li>\n<p><strong>穿过峡谷，翻过雪山，路过无人的戈壁滩</strong></p>\n</li>\n<li>\n<p><strong>曾经最热爱的运动，也是最充满回忆的，不知以后能否拾起...</strong></p>\n</li>\n</ul>\n<h3 id="gaming🎮" tabindex="-1"><a class="header-anchor" href="#gaming🎮" aria-hidden="true">#</a> Gaming🎮！！！</h3>\n<ul>\n<li>\n<p><strong>重度游戏爱好者了</strong></p>\n</li>\n<li>\n<p><strong>啥都爱玩，几乎不挑食</strong></p>\n</li>\n<li>\n<p><strong>端游手游、王者吃鸡、鹅厂“大作”</strong></p>\n</li>\n<li>\n<p><strong>战地、刺客信条、COD、Far Cry系列</strong></p>\n</li>\n<li>\n<p><strong>3A、FPS、RPG、独立、休闲、竞技体育...</strong></p>\n</li>\n<li>\n<p><strong>我不能没有游戏 ，就像西方不能没有耶路撒冷😂</strong></p>\n</li>\n</ul>\n<h2 id="stories" tabindex="-1"><a class="header-anchor" href="#stories" aria-hidden="true">#</a> Stories</h2>\n<h4 id="足球生涯⚽" tabindex="-1"><a class="header-anchor" href="#足球生涯⚽" aria-hidden="true">#</a> 足球生涯⚽</h4>\n<blockquote>\n<p>本科四年期间，每天不是去踢球，就是在去踢球的路上，也因此结识了一些“狐朋狗友”。可如今，随着一年接一年的毕业季，大家都已分道扬镳，有的去工作，有的读研，还有的报效祖国。</p>\n</blockquote>\n<div align=center>\n<img src="pic/myself-2.jpg" width="76%" height="100%">\n</div>\n<blockquote>\n<p>花有重开日，人无再少年。曾经一起踢球的绿茵场换了一波又一波的同学，我们存在过的痕迹也渐渐消失。九院的球场没了我们依旧很热闹，这片土地也在无时无刻上演着我们的故事。</p>\n</blockquote>\n<div align=center>\n<img src="pic/myself-1.jpg" width="76%" height="100%">\n</div>\n<ul>\n<li><strong>谨以此纪念那些年一起踢球、一起欢乐、一起陪我度过我大学足球时光的兄弟们</strong></li>\n</ul>\n<h4 id="拉萨之旅🚲" tabindex="-1"><a class="header-anchor" href="#拉萨之旅🚲" aria-hidden="true">#</a> 拉萨之旅🚲</h4>\n<blockquote>\n<p>一场说走就走的旅行，源于对骑行的热爱，对自由的向往，和对远方的幻想。</p>\n</blockquote>\n<blockquote>\n<p>G318-成都=&gt;拉萨，总里程2155KM，历时22天，翻越12座海拔4000+的雪山...</p>\n</blockquote>\n<div>\n<img src = "pic/myself-3.jpeg"  width = "48%"  ><img src = "pic/myself-4.jpeg"  width = "48%" align = right>\n</div>\n<blockquote>\n<p>一路上虽历经风雨、高反等诸多困难，可还是敌不过世界最美景观大道带给我们的视觉冲击和心灵震撼。</p>\n</blockquote>\n<div>\n<img src = "pic/myself-5.jpg"  width = "48%"  ><img src = "pic/myself-6.jpeg"  width = "48%" align = right>\n</div>\n<blockquote>\n<p>禾尼的草原、然乌的阳光、米堆的冰川、拉萨的夕阳，是去过一次就一定想去第二次的地方，现在依然清晰地印在我的脑海之中。</p>\n</blockquote>\n<div>\n<img src = "pic/myself-7.jpg"  width = "48%"  ><img src = "pic/myself-8.jpeg"  width = "48%" align = right>\n</div>\n<blockquote>\n<p>当看到布达拉宫，一切皆释然，故事也随之戛然而止...</p>\n</blockquote>\n<div>\n<img src = "pic/myself-9.jpeg"  width = "48%"  ><img src = "pic/myself-10.jpg"  width = "48%" align = right>\n</div>\n<ul>\n<li><strong>怀念那段梦幻的时光、自由骑行的我们，和令人流连忘返的拉萨之旅</strong></li>\n</ul>\n<h2 id="wishes" tabindex="-1"><a class="header-anchor" href="#wishes" aria-hidden="true">#</a> Wishes</h2>\n<h3 id="小目标-努力实现🥳" tabindex="-1"><a class="header-anchor" href="#小目标-努力实现🥳" aria-hidden="true">#</a> 小目标（努力实现🥳）</h3>\n<ul>\n<li>\n<p><strong>一切一切的前提，顺利毕业！！！</strong></p>\n</li>\n<li>\n<p><strong>努力学习！成为前端大佬！</strong></p>\n</li>\n<li>\n<p><strong>找到称心如意的工作</strong></p>\n</li>\n<li>\n<p><strong>和小胡一起奋斗💑</strong></p>\n</li>\n<li>\n<p><strong>赚钱、赚钱...</strong></p>\n</li>\n</ul>\n<h3 id="大梦想-想想就好🤔" tabindex="-1"><a class="header-anchor" href="#大梦想-想想就好🤔" aria-hidden="true">#</a> 大梦想（想想就好🤔）</h3>\n<ul>\n<li>\n<p><strong>拥有一个大大的房子</strong></p>\n</li>\n<li>\n<p><strong>游遍祖国大好河山</strong></p>\n</li>\n<li>\n<p><strong>财务自由...</strong></p>\n</li>\n</ul>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>做人一定要有梦想，不然跟咸鱼有什么区别？\n就算做咸鱼，也要做最咸的那条！\n                                        ——星爷\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="my-treasure" tabindex="-1"><a class="header-anchor" href="#my-treasure" aria-hidden="true">#</a> My treasure</h2>\n<blockquote>\n<p>一个可爱且善良的女孩，陪我度过了大部分大学时光，在一起四年多了</p>\n</blockquote>\n<blockquote>\n<p>不用去怀疑她对我的感情，真诚、纯粹、就宛如山楂树之恋一般</p>\n</blockquote>\n<blockquote>\n<p>她很喜欢逛小红书，也喜欢潮玩盲盒PPMT，还喜欢和我聊天</p>\n</blockquote>\n<blockquote>\n<p>她喜欢四字弟弟YYQX，那个万千姐姐粉的顶流小鲜肉</p>\n</blockquote>\n<blockquote>\n<p>如果让我选择一个我最信任的人，那非她莫属了</p>\n</blockquote>\n<blockquote>\n<p>她最喜欢做的，是和她喜欢的人一起去旅游</p>\n</blockquote>\n<blockquote>\n<p>一起走遍大江南北，看尽五湖四海</p>\n</blockquote>\n<blockquote>\n<p>只要和她在一起我就非常开心</p>\n</blockquote>\n<blockquote>\n<p>我们要一直走下去呀💖...</p>\n</blockquote>\n<h2 id="travel-timeline" tabindex="-1"><a class="header-anchor" href="#travel-timeline" aria-hidden="true">#</a> Travel timeline</h2>\n<h3 id="校园时光-一去不复返" tabindex="-1"><a class="header-anchor" href="#校园时光-一去不复返" aria-hidden="true">#</a> 校园时光，一去不复返</h3>\n<blockquote>\n<p>无忧无虑的校园生活，阳光、草地、操场、你我</p>\n</blockquote>\n<div>\n<img src = "pic/myself-11.jpeg"  width = "48%"  ><img src = "pic/myself-12.jpg"  width = "48%" align = right>\n</div>\n<h3 id="长沙" tabindex="-1"><a class="header-anchor" href="#长沙" aria-hidden="true">#</a> 长沙</h3>\n<blockquote>\n<p>细雨蒙蒙的橘子洲，坐在IFS上的Kaws</p>\n</blockquote>\n<div>\n<img src = "pic/myself-13.jpeg"  width = "48%"  ><img src = "pic/myself-14.jpeg"  width = "48%" align = right>\n</div>\n<h3 id="南昌" tabindex="-1"><a class="header-anchor" href="#南昌" aria-hidden="true">#</a> 南昌</h3>\n<blockquote>\n<p>绿地双子塔，卢塞恩小镇</p>\n</blockquote>\n<div>\n<img src = "pic/myself-15.jpeg"  width = "48%"  ><img src = "pic/myself-16.jpeg"  width = "48%" align = right>\n</div>\n<h3 id="无锡" tabindex="-1"><a class="header-anchor" href="#无锡" aria-hidden="true">#</a> 无锡</h3>\n<blockquote>\n<p>锡惠公园、灵山大佛</p>\n</blockquote>\n<div>\n<img src = "pic/myself-17.jpeg"  width = "48%"  ><img src = "pic/myself-18.jpeg"  width = "48%" align = right>\n</div>\n<h3 id="上海" tabindex="-1"><a class="header-anchor" href="#上海" aria-hidden="true">#</a> 上海</h3>\n<blockquote>\n<p>拥挤的外滩，多抓鱼的试衣镜</p>\n</blockquote>\n<div>\n<img src = "pic/myself-19.jpeg"  width = "48%"  ><img src = "pic/myself-20.jpeg"  width = "48%" align = right>\n</div>\n<h3 id="ppmt" tabindex="-1"><a class="header-anchor" href="#ppmt" aria-hidden="true">#</a> PPMT</h3>\n<blockquote>\n<p>竟然抽到了隐藏款“痛车”！太激动啦🎉！！！</p>\n</blockquote>\n<div>\n<img src = "pic/myself-21.jpeg"  width = "48%"  ><img src = "pic/myself-22.jpeg"  width = "48%" align = right>\n</div>\n<h3 id="南京" tabindex="-1"><a class="header-anchor" href="#南京" aria-hidden="true">#</a> 南京</h3>\n<blockquote>\n<p>鸡鸣寺，钟山风景区</p>\n</blockquote>\n<div>\n<img src = "pic/myself-23.jpg"  width = "48%"  ><img src = "pic/myself-24.jpg"  width = "48%" align = right>\n</div>\n<h3 id="深圳" tabindex="-1"><a class="header-anchor" href="#深圳" aria-hidden="true">#</a> 深圳</h3>\n<blockquote>\n<p>欢乐港湾摩天轮🎡，飞机溜溜球🛫</p>\n</blockquote>\n<div>\n<img src = "pic/myself-25.jpg"  width = "48%"  ><img src = "pic/myself-26.jpg"  width = "48%" align = right>\n</div>\n<ul>\n<li><strong>未完待续...</strong></li>\n</ul>\n<h2 id="to-be-continue" tabindex="-1"><a class="header-anchor" href="#to-be-continue" aria-hidden="true">#</a> To be continue...</h2>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>往事不可追，来者犹可忆\n                             ——《论语》\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/myself.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"myself",filePath:"C:/Users/67099/Desktop/blog-demo/docs/myself.md",filePathRelative:"myself.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/myself.html.vue",componentFilePathRelative:"pages/myself.html.vue",componentFileChunkName:"v-b1714770",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/myself.html.js",dataFilePathRelative:"pages/myself.html.js",dataFileChunkName:"v-b1714770",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/myself.html",htmlFilePathRelative:"myself.html"},{data:{key:"v-58298250",path:"/Javascript/GET%E4%B8%8EPOST%E6%96%B9%E6%B3%95%E7%9A%84%E5%8C%BA%E5%88%AB.html",title:"GET与POST方法的区别",lang:"zh-CN",frontmatter:{date:"2022/5/2 20:08",coverUrl:"/pic/8.jpg",stick:!1,keyword:"Get,Post,方法",description:"GET与POST方法的区别",title:"GET与POST方法的区别",tag:["Get","Post","方法"],categories:["Get","Post","方法"]},excerpt:"",headers:[{level:2,title:"✨GET与POST方法的区别✨",slug:"✨get与post方法的区别✨",children:[{level:3,title:"GET",slug:"get",children:[]},{level:3,title:"POST",slug:"post",children:[]},{level:3,title:"GET与POST的区别",slug:"get与post的区别",children:[]},{level:3,title:"在以下情况中使用POST请求",slug:"在以下情况中使用post请求",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-58298250",path:"/Javascript/GET%E4%B8%8EPOST%E6%96%B9%E6%B3%95%E7%9A%84%E5%8C%BA%E5%88%AB.html",title:"GET与POST方法的区别",lang:"zh-CN",frontmatter:{date:"2022/5/2 20:08",coverUrl:"/pic/8.jpg",stick:!1,keyword:"Get,Post,方法",description:"GET与POST方法的区别",title:"GET与POST方法的区别",tag:["Get","Post","方法"],categories:["Get","Post","方法"]},excerpt:"",headers:[{level:2,title:"✨GET与POST方法的区别✨",slug:"✨get与post方法的区别✨",children:[{level:3,title:"GET",slug:"get",children:[]},{level:3,title:"POST",slug:"post",children:[]},{level:3,title:"GET与POST的区别",slug:"get与post的区别",children:[]},{level:3,title:"在以下情况中使用POST请求",slug:"在以下情况中使用post请求",children:[]}]}],content:"\r\n\r\n## ✨GET与POST方法的区别✨\r\n\r\n### GET\r\n- 一般用于从服务器上获取数组，使用URL传递参数，对所发送信息的数量也有限制，一般在2000个字符\r\n\r\n### POST\r\n- 一般用于服务器上数据的修改/传送，对所发送信息的数量没有限制\r\n\r\n> GET方式需要使用`Request.QueryString`来取得变量的值，而POST方式通过`Request.Form`来获取变量的值。也就是说，GET是通过地址栏来传值，而POST是通过提交表单来传值。\r\n\r\n### GET与POST的区别\r\n\r\n1. GET提交的数据会放在URL之后，以？分割URL和传输数据，参数之间以&相连，如`EditPosts.aspx?name=test1&id=123456.`。POST方法是把提交的数据放在HTTP包的Body中\r\n2. GET提交的数据大小有限制，最多只能由2K字节（因为浏览器对URL的长度有限制），而POST方法提交的数据没有限制\r\n3. GET方式需要使用`Request.QueryString`来取得变量的值，而POST方式通过`Request.Form`来获取变量的值。\r\n4. GET方式提交数据，会带来安全问题，比如一个登录界面，通过GET方式提交数据时，用户名和密码将出现在URL上，如果页面可以被缓存或者其他人可以访问这台机器，就可以从历史记录获得该用户的账号和密码。\r\n\r\n### 在以下情况中使用POST请求\r\n1. 无法使用缓存文件（更新服务器上的文件或数据库）\r\n2. 向服务器发送大量数据（POST没有数据量限制）\r\n3. 发送包含未知字符的用户输入时，POST比GET更稳定也更可靠\r\n   ",contentRendered:'<h2 id="✨get与post方法的区别✨" tabindex="-1"><a class="header-anchor" href="#✨get与post方法的区别✨" aria-hidden="true">#</a> ✨GET与POST方法的区别✨</h2>\n<h3 id="get" tabindex="-1"><a class="header-anchor" href="#get" aria-hidden="true">#</a> GET</h3>\n<ul>\n<li>一般用于从服务器上获取数组，使用URL传递参数，对所发送信息的数量也有限制，一般在2000个字符</li>\n</ul>\n<h3 id="post" tabindex="-1"><a class="header-anchor" href="#post" aria-hidden="true">#</a> POST</h3>\n<ul>\n<li>一般用于服务器上数据的修改/传送，对所发送信息的数量没有限制</li>\n</ul>\n<blockquote>\n<p>GET方式需要使用<code>Request.QueryString</code>来取得变量的值，而POST方式通过<code>Request.Form</code>来获取变量的值。也就是说，GET是通过地址栏来传值，而POST是通过提交表单来传值。</p>\n</blockquote>\n<h3 id="get与post的区别" tabindex="-1"><a class="header-anchor" href="#get与post的区别" aria-hidden="true">#</a> GET与POST的区别</h3>\n<ol>\n<li>GET提交的数据会放在URL之后，以？分割URL和传输数据，参数之间以&amp;相连，如<code>EditPosts.aspx?name=test1&amp;id=123456.</code>。POST方法是把提交的数据放在HTTP包的Body中</li>\n<li>GET提交的数据大小有限制，最多只能由2K字节（因为浏览器对URL的长度有限制），而POST方法提交的数据没有限制</li>\n<li>GET方式需要使用<code>Request.QueryString</code>来取得变量的值，而POST方式通过<code>Request.Form</code>来获取变量的值。</li>\n<li>GET方式提交数据，会带来安全问题，比如一个登录界面，通过GET方式提交数据时，用户名和密码将出现在URL上，如果页面可以被缓存或者其他人可以访问这台机器，就可以从历史记录获得该用户的账号和密码。</li>\n</ol>\n<h3 id="在以下情况中使用post请求" tabindex="-1"><a class="header-anchor" href="#在以下情况中使用post请求" aria-hidden="true">#</a> 在以下情况中使用POST请求</h3>\n<ol>\n<li>无法使用缓存文件（更新服务器上的文件或数据库）</li>\n<li>向服务器发送大量数据（POST没有数据量限制）</li>\n<li>发送包含未知字符的用户输入时，POST比GET更稳定也更可靠</li>\n</ol>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Javascript/GET与POST方法的区别.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"GET与POST方法的区别",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Javascript/GET与POST方法的区别.md",filePathRelative:"Javascript/GET与POST方法的区别.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Javascript/GET与POST方法的区别.html.vue",componentFilePathRelative:"pages/Javascript/GET与POST方法的区别.html.vue",componentFileChunkName:"v-58298250",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Javascript/GET与POST方法的区别.html.js",dataFilePathRelative:"pages/Javascript/GET与POST方法的区别.html.js",dataFileChunkName:"v-58298250",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Javascript/GET与POST方法的区别.html",htmlFilePathRelative:"Javascript/GET与POST方法的区别.html"},{data:{key:"v-18e4ba4c",path:"/Javascript/Node.js%E4%B8%A4%E7%A7%8D%E8%B0%83%E7%94%A8Mongodb%E6%96%B9%E6%B3%95.html",title:"Node.js两种调用Mongodb方法",lang:"zh-CN",frontmatter:{date:"2022/4/9 20:08",coverUrl:"/pic/8.jpg",stick:!1,keyword:"Node.js,Mongodb,方法",description:"Node.js两种调用Mongodb方法",title:"Node.js两种调用Mongodb方法",tag:["Node.js","Mongodb","方法"],categories:["Node.js","Mondodb","方法"]},excerpt:"",headers:[{level:2,title:"✨Node.js两种调用Mongodb方法✨",slug:"✨node-js两种调用mongodb方法✨",children:[{level:3,title:"方法一：MongoClient",slug:"方法一-mongoclient",children:[]},{level:3,title:"方法二：Mongoose",slug:"方法二-mongoose",children:[]},{level:3,title:"new Object",slug:"new-object",children:[]},{level:3,title:"使用案例",slug:"使用案例",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-18e4ba4c",path:"/Javascript/Node.js%E4%B8%A4%E7%A7%8D%E8%B0%83%E7%94%A8Mongodb%E6%96%B9%E6%B3%95.html",title:"Node.js两种调用Mongodb方法",lang:"zh-CN",frontmatter:{date:"2022/4/9 20:08",coverUrl:"/pic/8.jpg",stick:!1,keyword:"Node.js,Mongodb,方法",description:"Node.js两种调用Mongodb方法",title:"Node.js两种调用Mongodb方法",tag:["Node.js","Mongodb","方法"],categories:["Node.js","Mondodb","方法"]},excerpt:"",headers:[{level:2,title:"✨Node.js两种调用Mongodb方法✨",slug:"✨node-js两种调用mongodb方法✨",children:[{level:3,title:"方法一：MongoClient",slug:"方法一-mongoclient",children:[]},{level:3,title:"方法二：Mongoose",slug:"方法二-mongoose",children:[]},{level:3,title:"new Object",slug:"new-object",children:[]},{level:3,title:"使用案例",slug:"使用案例",children:[]}]}],content:"\r\n\r\n## ✨Node.js两种调用Mongodb方法✨\r\n### 方法一：MongoClient\r\n#### 介绍\r\n- MongoClient是Mongodb官方提供的Node.js驱动，继承于mongo类（现在mongo模块被淘汰了），对MongoDB的操作和在mongo shell中几乎一致\r\n- 虽然已经不是Node.js操作 MongoDB的首选库了，但还是很值得学习的。目前Node.js操作 MongoDB的首选库是Mongoose\r\n#### 创建链接：\r\n```javascript \r\nvar MongoClient = require('mongodb').MongoClient;\r\nvar url = \"mongodb://localhost:27017/runoob\";//mongodb默认地址\r\n \r\nMongoClient.connect(url, function(err, db) {\r\n  if (err) throw err;\r\n  console.log(\"数据库已创建!\");\r\n  db.close();\r\n});\r\n```\r\n### 方法二：Mongoose\r\n#### 介绍\r\n- Mongoose是MongoDB的一个对象模型工具，是基于node-mongodb-native开发的MongoDB的nodejs驱动，也目前是Node.js操作 MongoDB的首选库。\r\n- Mongoose 是一个让我们可以通过Node来操作MongoDB数据库的一个模块\r\n- Mongoose 是一个对象文档模型（ODM）库，它是对Node原生的MongoDB模块进行了进一步的优化封装\r\n- 大多数情况下，他被用来把结构化的模式应用到一个MongoDB集合，并提供了验证和类型装换等好处\r\n- 基于MongoDB驱动，通过关系型数据库的思想来实现非关系型数据库\r\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2b129b0bcfe84a9aa6e021b8d606e00b.png#pic_center)\r\n#### 基础概念\r\n1. Schema：模型类的骨架，通过Schema可以生成模型类，通过模型类可以生成文档。\r\n2. 每一个Schema对应MongoDB中的一个集合。Schema定义了集合中文档的字段格式。mongoose 出于可维护性和易用性的目的定义Schema来限定文档结构，但是MongoDB没有这个限制，也就是说MongoDB的文档无论什么结构都可以存储\r\n3. Model：由Schema产生的构造器，具有属性和行为。Modal的每一个实例就是MongoDB的一个文档。\r\n4. Instance：Model的实例，通过new Model()得到，也就是MongoDB的一个文档。\r\n5. Mongoose是MongoDB的一个对象模型工具，也就是说Mongoose是通过操作对象模型来操作MongoDB的，而Schema是模型类的骨架，换言之，Mongoose 的一切始于 Schema。\r\n### new Object\r\n- Schema（模式对象）\r\n\t——Schema 对象定义约束了数据库中的文档结构\r\n- Model\r\n\t——Model 对象作为集合中的所有文档的表示，相当于MongoDB中的collection，它的每一个实例就是一个document文档\r\n- Document\r\n\t——Document表示集合中的具体文档，相当于collection中的一个具体文档\r\n- 关系：Schema生成Model，Model创造Document\r\n#### 简单使用\r\n前提：安装MongoDB，Nodejs\r\n\r\n1. 下载安装Mongoose\r\n\r\n\t```\r\n\tnpm i mongoose --save\r\n\t```\r\n2. 项目中引入mongoose\r\n\t```\r\n\tvar mongoose = require(‘mongoose’)\r\n\t```\r\n3. 连接MongoDB数据库\r\n\t```\r\n\tmongoose.connect(‘mongodb://数据库ip地址 : 端口号( 默认端口27017可以省略 )/数据库名’)\r\n\t```\r\n\t##### 数据库连接状态\r\n\t1. connect()返回的是一个待定状态，在mongoose中有一个属性叫 connection 用来表示数据库的连接\r\n\r\n\t2. 通过监视该对象可以用来监听数据库的连接与断开\r\n\r\n\t3.  数据库连接成功事件\r\n\t\t```\r\n\t\tmongoose.connection.once(‘open’ , () => {})\r\n\t\t```\r\n\t4. 数据库断开事件\r\n\t\t```\r\n\t\tmongoose.connection.once(‘close’ , () => {})\r\n\t\t```\r\n4. 创建Schema（模式）对象\r\n\t```\r\n\tvar stuSchema = new Schema({})\r\n\t```\r\n\t1.  通过Schema创建Model\r\n\t2. Model 代表的是数据库中的集合，通过Model才能对数据库进行操作\r\n5. 映射\r\n\t```\r\n\tvar stuModel = mongoose.model(‘student’,stuSchema)\r\n\t```\r\n\t##### 参数\r\n \t1. 要映射的集合名\r\n \t2. 创建的约束（Schema对象）\r\n6. 通过映射返回的值对数据库进行增、删、改、查\r\n7. 断开数据库连接（一般不使用）\r\n\t```\r\n\tmongoose.disconnect()\r\n\t```\r\n### 使用案例\r\n```javascript\r\nvar mongoose = require('mongoose')\r\nvar Schema = mongoose.Schema;\r\n//连接数据库\r\nmongoose.connect('mongodb://localhost:27017/student',{\r\n    useNewUrlParser: true \r\n})\r\n\r\n//监听数据库连接状态\r\nmongoose.connection.once('open',()=>{\r\n    console.log('数据库连接成功……')\r\n})\r\nmongoose.connection.once('close',()=>{\r\n    console.log('数据库断开……')\r\n})\r\n\r\n//创建Schema对象（约束）\r\nvar stuSchema = new Schema({\r\n    name: String,\r\n    age: Number,\r\n    gender:{\r\n        type: String,\r\n        default:'male'\r\n    },\r\n    addr: String\r\n})\r\n\r\n//将stuSchema映射到一个MongoDB collection并定义这个文档的构成\r\nvar stuModle = mongoose.model('student',stuSchema)\r\n\r\n//向student数据库中插入数据\r\nstuModle.create({\r\n    name:\"小明\",\r\n    age:\"20\",\r\n    addr:\"天津\"\r\n},(err,docs)=>{\r\n    if(!err){\r\n        console.log('插入成功'+docs)\r\n    }\r\n})\r\n/*\r\n* 控制台结果：\r\n* 数据库连接成功……\r\n* 插入成功{\r\n*   gender: 'male',\r\n*   _id: 6017a189372ece49089d79c7,\r\n*   name: '小明',\r\n*   age: 20,\r\n*  addr: '天津',\r\n*   __v: 0\r\n* }\r\n*/\r\n/*\r\n* 数据库结果：\r\n* | _id                      | gender | name | age  | addr | __v  |\r\n* | ------------------------ | ------ | ---- | ---- | ---- | ---- |\r\n* | 6017a189372ece49089d79c7 | male   | 小明  | 20   |  天津 | 0    |\r\n*/\r\n```\r\n##### Mongoose优点\r\n- 为文档创建模式结构（Schema），也可以说是约束\r\n- 对模型中的对象/文档进行验证\r\n- 数据可以通过类型装换装换为对象模型\r\n- 可以使用中间件来应用业务逻辑挂钩\r\n- 相比MongoDB驱动更容易",contentRendered:'<h2 id="✨node-js两种调用mongodb方法✨" tabindex="-1"><a class="header-anchor" href="#✨node-js两种调用mongodb方法✨" aria-hidden="true">#</a> ✨Node.js两种调用Mongodb方法✨</h2>\n<h3 id="方法一-mongoclient" tabindex="-1"><a class="header-anchor" href="#方法一-mongoclient" aria-hidden="true">#</a> 方法一：MongoClient</h3>\n<h4 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h4>\n<ul>\n<li>MongoClient是Mongodb官方提供的Node.js驱动，继承于mongo类（现在mongo模块被淘汰了），对MongoDB的操作和在mongo shell中几乎一致</li>\n<li>虽然已经不是Node.js操作 MongoDB的首选库了，但还是很值得学习的。目前Node.js操作 MongoDB的首选库是Mongoose</li>\n</ul>\n<h4 id="创建链接" tabindex="-1"><a class="header-anchor" href="#创建链接" aria-hidden="true">#</a> 创建链接：</h4>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">var</span> MongoClient <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mongodb\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>MongoClient<span class="token punctuation">;</span>\n<span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token string">"mongodb://localhost:27017/runoob"</span><span class="token punctuation">;</span><span class="token comment">//mongodb默认地址</span>\n \nMongoClient<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> db</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"数据库已创建!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  db<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="方法二-mongoose" tabindex="-1"><a class="header-anchor" href="#方法二-mongoose" aria-hidden="true">#</a> 方法二：Mongoose</h3>\n<h4 id="介绍-1" tabindex="-1"><a class="header-anchor" href="#介绍-1" aria-hidden="true">#</a> 介绍</h4>\n<ul>\n<li>Mongoose是MongoDB的一个对象模型工具，是基于node-mongodb-native开发的MongoDB的nodejs驱动，也目前是Node.js操作 MongoDB的首选库。</li>\n<li>Mongoose 是一个让我们可以通过Node来操作MongoDB数据库的一个模块</li>\n<li>Mongoose 是一个对象文档模型（ODM）库，它是对Node原生的MongoDB模块进行了进一步的优化封装</li>\n<li>大多数情况下，他被用来把结构化的模式应用到一个MongoDB集合，并提供了验证和类型装换等好处</li>\n<li>基于MongoDB驱动，通过关系型数据库的思想来实现非关系型数据库\n<img src="https://ooszy.cco.vin/img/blog-public/ljz.gif" alt="在这里插入图片描述" originSrc="https://img-blog.csdnimg.cn/2b129b0bcfe84a9aa6e021b8d606e00b.png#pic_center" data="aurora"></li>\n</ul>\n<h4 id="基础概念" tabindex="-1"><a class="header-anchor" href="#基础概念" aria-hidden="true">#</a> 基础概念</h4>\n<ol>\n<li>Schema：模型类的骨架，通过Schema可以生成模型类，通过模型类可以生成文档。</li>\n<li>每一个Schema对应MongoDB中的一个集合。Schema定义了集合中文档的字段格式。mongoose 出于可维护性和易用性的目的定义Schema来限定文档结构，但是MongoDB没有这个限制，也就是说MongoDB的文档无论什么结构都可以存储</li>\n<li>Model：由Schema产生的构造器，具有属性和行为。Modal的每一个实例就是MongoDB的一个文档。</li>\n<li>Instance：Model的实例，通过new Model()得到，也就是MongoDB的一个文档。</li>\n<li>Mongoose是MongoDB的一个对象模型工具，也就是说Mongoose是通过操作对象模型来操作MongoDB的，而Schema是模型类的骨架，换言之，Mongoose 的一切始于 Schema。</li>\n</ol>\n<h3 id="new-object" tabindex="-1"><a class="header-anchor" href="#new-object" aria-hidden="true">#</a> new Object</h3>\n<ul>\n<li>Schema（模式对象）\n——Schema 对象定义约束了数据库中的文档结构</li>\n<li>Model\n——Model 对象作为集合中的所有文档的表示，相当于MongoDB中的collection，它的每一个实例就是一个document文档</li>\n<li>Document\n——Document表示集合中的具体文档，相当于collection中的一个具体文档</li>\n<li>关系：Schema生成Model，Model创造Document</li>\n</ul>\n<h4 id="简单使用" tabindex="-1"><a class="header-anchor" href="#简单使用" aria-hidden="true">#</a> 简单使用</h4>\n<p>前提：安装MongoDB，Nodejs</p>\n<ol>\n<li>\n<p>下载安装Mongoose</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>npm i mongoose --save\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n<li>\n<p>项目中引入mongoose</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>var mongoose = require(‘mongoose’)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n<li>\n<p>连接MongoDB数据库</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>mongoose.connect(‘mongodb://数据库ip地址 : 端口号( 默认端口27017可以省略 )/数据库名’)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h5 id="数据库连接状态" tabindex="-1"><a class="header-anchor" href="#数据库连接状态" aria-hidden="true">#</a> 数据库连接状态</h5>\n<ol>\n<li>\n<p>connect()返回的是一个待定状态，在mongoose中有一个属性叫 connection 用来表示数据库的连接</p>\n</li>\n<li>\n<p>通过监视该对象可以用来监听数据库的连接与断开</p>\n</li>\n<li>\n<p>数据库连接成功事件</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>mongoose.connection.once(‘open’ , () => {})\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n<li>\n<p>数据库断开事件</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>mongoose.connection.once(‘close’ , () => {})\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n</ol>\n</li>\n<li>\n<p>创建Schema（模式）对象</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>var stuSchema = new Schema({})\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol>\n<li>通过Schema创建Model</li>\n<li>Model 代表的是数据库中的集合，通过Model才能对数据库进行操作</li>\n</ol>\n</li>\n<li>\n<p>映射</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>var stuModel = mongoose.model(‘student’,stuSchema)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h5 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h5>\n<ol>\n<li>要映射的集合名</li>\n<li>创建的约束（Schema对象）</li>\n</ol>\n</li>\n<li>\n<p>通过映射返回的值对数据库进行增、删、改、查</p>\n</li>\n<li>\n<p>断开数据库连接（一般不使用）</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>mongoose.disconnect()\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n</ol>\n<h3 id="使用案例" tabindex="-1"><a class="header-anchor" href="#使用案例" aria-hidden="true">#</a> 使用案例</h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">var</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mongoose\'</span><span class="token punctuation">)</span>\n<span class="token keyword">var</span> Schema <span class="token operator">=</span> mongoose<span class="token punctuation">.</span>Schema<span class="token punctuation">;</span>\n<span class="token comment">//连接数据库</span>\nmongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">\'mongodb://localhost:27017/student\'</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">useNewUrlParser</span><span class="token operator">:</span> <span class="token boolean">true</span> \n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">//监听数据库连接状态</span>\nmongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">\'open\'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'数据库连接成功……\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\nmongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">\'close\'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'数据库断开……\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">//创建Schema对象（约束）</span>\n<span class="token keyword">var</span> stuSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> String<span class="token punctuation">,</span>\n    <span class="token literal-property property">age</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>\n    <span class="token literal-property property">gender</span><span class="token operator">:</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>\n        <span class="token keyword">default</span><span class="token operator">:</span><span class="token string">\'male\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">addr</span><span class="token operator">:</span> String\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">//将stuSchema映射到一个MongoDB collection并定义这个文档的构成</span>\n<span class="token keyword">var</span> stuModle <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">\'student\'</span><span class="token punctuation">,</span>stuSchema<span class="token punctuation">)</span>\n\n<span class="token comment">//向student数据库中插入数据</span>\nstuModle<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">"小明"</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token string">"20"</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">addr</span><span class="token operator">:</span><span class="token string">"天津"</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>docs</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">{</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'插入成功\'</span><span class="token operator">+</span>docs<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">/*\n* 控制台结果：\n* 数据库连接成功……\n* 插入成功{\n*   gender: \'male\',\n*   _id: 6017a189372ece49089d79c7,\n*   name: \'小明\',\n*   age: 20,\n*  addr: \'天津\',\n*   __v: 0\n* }\n*/</span>\n<span class="token comment">/*\n* 数据库结果：\n* | _id                      | gender | name | age  | addr | __v  |\n* | ------------------------ | ------ | ---- | ---- | ---- | ---- |\n* | 6017a189372ece49089d79c7 | male   | 小明  | 20   |  天津 | 0    |\n*/</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br></div></div><h5 id="mongoose优点" tabindex="-1"><a class="header-anchor" href="#mongoose优点" aria-hidden="true">#</a> Mongoose优点</h5>\n<ul>\n<li>为文档创建模式结构（Schema），也可以说是约束</li>\n<li>对模型中的对象/文档进行验证</li>\n<li>数据可以通过类型装换装换为对象模型</li>\n<li>可以使用中间件来应用业务逻辑挂钩</li>\n<li>相比MongoDB驱动更容易</li>\n</ul>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Javascript/Node.js两种调用Mongodb方法.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"Node.js两种调用Mongodb方法",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Javascript/Node.js两种调用Mongodb方法.md",filePathRelative:"Javascript/Node.js两种调用Mongodb方法.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Javascript/Node.js两种调用Mongodb方法.html.vue",componentFilePathRelative:"pages/Javascript/Node.js两种调用Mongodb方法.html.vue",componentFileChunkName:"v-18e4ba4c",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Javascript/Node.js两种调用Mongodb方法.html.js",dataFilePathRelative:"pages/Javascript/Node.js两种调用Mongodb方法.html.js",dataFileChunkName:"v-18e4ba4c",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Javascript/Node.js两种调用Mongodb方法.html",htmlFilePathRelative:"Javascript/Node.js两种调用Mongodb方法.html"},{data:{key:"v-bb61501a",path:"/Javascript/null%E5%92%8Cundefined%E5%8C%BA%E5%88%AB.html",title:"null和undefined区别",lang:"zh-CN",frontmatter:{date:"2022/3/2 14:15",coverUrl:"/pic/8.jpg",stick:!1,keyword:"javascript,undefined",description:"null和undefined区别",title:"null和undefined区别",tag:["javascript","undefined"],categories:["javascript","undefined"]},excerpt:"",headers:[{level:2,title:"✨null和undefined区别✨",slug:"✨null和undefined区别✨",children:[{level:3,title:"Undefined类型只有一个值，即undefined。当声明的变量还未被初始化时，变量的默认值为undefined。",slug:"undefined类型只有一个值-即undefined。当声明的变量还未被初始化时-变量的默认值为undefined。",children:[]},{level:3,title:"Null类型也只有一个值，即null。null用来表示尚未存在的对象，常用来表示函数企图返回一个不存在的对象。",slug:"null类型也只有一个值-即null。null用来表示尚未存在的对象-常用来表示函数企图返回一个不存在的对象。",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-bb61501a",path:"/Javascript/null%E5%92%8Cundefined%E5%8C%BA%E5%88%AB.html",title:"null和undefined区别",lang:"zh-CN",frontmatter:{date:"2022/3/2 14:15",coverUrl:"/pic/8.jpg",stick:!1,keyword:"javascript,undefined",description:"null和undefined区别",title:"null和undefined区别",tag:["javascript","undefined"],categories:["javascript","undefined"]},excerpt:"",headers:[{level:2,title:"✨null和undefined区别✨",slug:"✨null和undefined区别✨",children:[{level:3,title:"Undefined类型只有一个值，即undefined。当声明的变量还未被初始化时，变量的默认值为undefined。",slug:"undefined类型只有一个值-即undefined。当声明的变量还未被初始化时-变量的默认值为undefined。",children:[]},{level:3,title:"Null类型也只有一个值，即null。null用来表示尚未存在的对象，常用来表示函数企图返回一个不存在的对象。",slug:"null类型也只有一个值-即null。null用来表示尚未存在的对象-常用来表示函数企图返回一个不存在的对象。",children:[]}]}],content:"\r\n\r\n\r\n## ✨null和undefined区别✨\r\n\r\n\r\n### Undefined类型只有一个值，即undefined。当声明的变量还未被初始化时，变量的默认值为undefined。\r\n> 用法：\r\n\t变量被声明了，但没有赋值时，就等于undefined。\r\n\t调用函数时，应该提供的参数没有提供，该参数等于undefined。\r\n\t对象没有赋值的属性，该属性的值为undefined。\r\n\t函数没有返回值时，默认返回undefined。\r\n\r\n### Null类型也只有一个值，即null。null用来表示尚未存在的对象，常用来表示函数企图返回一个不存在的对象。\r\n> 用法：\r\n\t作为函数的参数，表示该函数的参数不是对象。\r\n\t作为对象原型链的终点。\r\n",contentRendered:'<h2 id="✨null和undefined区别✨" tabindex="-1"><a class="header-anchor" href="#✨null和undefined区别✨" aria-hidden="true">#</a> ✨null和undefined区别✨</h2>\n<h3 id="undefined类型只有一个值-即undefined。当声明的变量还未被初始化时-变量的默认值为undefined。" tabindex="-1"><a class="header-anchor" href="#undefined类型只有一个值-即undefined。当声明的变量还未被初始化时-变量的默认值为undefined。" aria-hidden="true">#</a> Undefined类型只有一个值，即undefined。当声明的变量还未被初始化时，变量的默认值为undefined。</h3>\n<blockquote>\n<p>用法：\n变量被声明了，但没有赋值时，就等于undefined。\n调用函数时，应该提供的参数没有提供，该参数等于undefined。\n对象没有赋值的属性，该属性的值为undefined。\n函数没有返回值时，默认返回undefined。</p>\n</blockquote>\n<h3 id="null类型也只有一个值-即null。null用来表示尚未存在的对象-常用来表示函数企图返回一个不存在的对象。" tabindex="-1"><a class="header-anchor" href="#null类型也只有一个值-即null。null用来表示尚未存在的对象-常用来表示函数企图返回一个不存在的对象。" aria-hidden="true">#</a> Null类型也只有一个值，即null。null用来表示尚未存在的对象，常用来表示函数企图返回一个不存在的对象。</h3>\n<blockquote>\n<p>用法：\n作为函数的参数，表示该函数的参数不是对象。\n作为对象原型链的终点。</p>\n</blockquote>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Javascript/null和undefined区别.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"null和undefined区别",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Javascript/null和undefined区别.md",filePathRelative:"Javascript/null和undefined区别.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Javascript/null和undefined区别.html.vue",componentFilePathRelative:"pages/Javascript/null和undefined区别.html.vue",componentFileChunkName:"v-bb61501a",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Javascript/null和undefined区别.html.js",dataFilePathRelative:"pages/Javascript/null和undefined区别.html.js",dataFileChunkName:"v-bb61501a",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Javascript/null和undefined区别.html",htmlFilePathRelative:"Javascript/null和undefined区别.html"},{data:{key:"v-6382c4c6",path:"/Javascript/%E8%AE%BF%E9%97%AEnode-express%E4%B8%ADstatic%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6.html",title:"访问node-express中static静态文件",lang:"zh-CN",frontmatter:{date:"2022/4/19 20:08",coverUrl:"/pic/8.jpg",stick:!1,keyword:"Node.js,express,静态",description:"访问node-express中static静态文件",title:"访问node-express中static静态文件",tag:["Node.js","express","静态"],categories:["Node.js","express","静态"]},excerpt:"",headers:[{level:2,title:"✨访问node-express中static静态文件✨",slug:"✨访问node-express中static静态文件✨",children:[{level:3,title:"应用场合",slug:"应用场合",children:[]},{level:3,title:"解决方法",slug:"解决方法",children:[]},{level:3,title:"示例",slug:"示例",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-6382c4c6",path:"/Javascript/%E8%AE%BF%E9%97%AEnode-express%E4%B8%ADstatic%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6.html",title:"访问node-express中static静态文件",lang:"zh-CN",frontmatter:{date:"2022/4/19 20:08",coverUrl:"/pic/8.jpg",stick:!1,keyword:"Node.js,express,静态",description:"访问node-express中static静态文件",title:"访问node-express中static静态文件",tag:["Node.js","express","静态"],categories:["Node.js","express","静态"]},excerpt:"",headers:[{level:2,title:"✨访问node-express中static静态文件✨",slug:"✨访问node-express中static静态文件✨",children:[{level:3,title:"应用场合",slug:"应用场合",children:[]},{level:3,title:"解决方法",slug:"解决方法",children:[]},{level:3,title:"示例",slug:"示例",children:[]}]}],content:"\r\n\r\n## ✨访问node-express中static静态文件✨\r\n\r\n### 应用场合\r\n- 在项目中需要使用到`node express`框架进行中间件开发、\r\n- 使用`express`托管静态文件或开放其它静态文件\r\n\r\n### 解决方法\r\n> 通过`express`内置的`express.static`方法可以方便地托管静态文件，例如图片、CSS、JavaScript文件等\r\n> 将静态资源文件所在目录作为参数传递给`express.static`中间件就可以提供静态资源文件的访问\r\n\r\n### 示例\r\n\r\n1. express框架下运行以下代码\r\n```javascript\r\n#注意格式\r\napp.use('/public',express.static('public'));//将文件设置成静态\r\n\r\n#若需要开发其它静态文件，则不需要'/public'路径\r\napp.use(express.static('Simulation_Result'))\r\n```\r\n\r\n2. 在项目中访问静态文件地址即可\r\n\r\n```javascript\r\n     let _PicUrl = [\r\n        \"http://127.0.0.1:5678/S-1.png\",\r\n        \"http://127.0.0.1:5678/S-2.png\"\r\n     ]\r\n```\r\n**注意：静态文件的路径为express中间件设置，端口号必须为后端端口号。若访问了错误的路径或者端口号，则页面为空白**",contentRendered:'<h2 id="✨访问node-express中static静态文件✨" tabindex="-1"><a class="header-anchor" href="#✨访问node-express中static静态文件✨" aria-hidden="true">#</a> ✨访问node-express中static静态文件✨</h2>\n<h3 id="应用场合" tabindex="-1"><a class="header-anchor" href="#应用场合" aria-hidden="true">#</a> 应用场合</h3>\n<ul>\n<li>在项目中需要使用到<code>node express</code>框架进行中间件开发、</li>\n<li>使用<code>express</code>托管静态文件或开放其它静态文件</li>\n</ul>\n<h3 id="解决方法" tabindex="-1"><a class="header-anchor" href="#解决方法" aria-hidden="true">#</a> 解决方法</h3>\n<blockquote>\n<p>通过<code>express</code>内置的<code>express.static</code>方法可以方便地托管静态文件，例如图片、CSS、JavaScript文件等\n将静态资源文件所在目录作为参数传递给<code>express.static</code>中间件就可以提供静态资源文件的访问</p>\n</blockquote>\n<h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h3>\n<ol>\n<li>express框架下运行以下代码</li>\n</ol>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code>#注意格式\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">\'/public\'</span><span class="token punctuation">,</span>express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span><span class="token string">\'public\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将文件设置成静态</span>\n\n#若需要开发其它静态文件，则不需要<span class="token string">\'/public\'</span>路径\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span><span class="token string">\'Simulation_Result\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="2">\n<li>在项目中访问静态文件地址即可</li>\n</ol>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code>     <span class="token keyword">let</span> _PicUrl <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token string">"http://127.0.0.1:5678/S-1.png"</span><span class="token punctuation">,</span>\n        <span class="token string">"http://127.0.0.1:5678/S-2.png"</span>\n     <span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>注意：静态文件的路径为express中间件设置，端口号必须为后端端口号。若访问了错误的路径或者端口号，则页面为空白</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Javascript/访问node-express中static静态文件.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"访问node-express中static静态文件",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Javascript/访问node-express中static静态文件.md",filePathRelative:"Javascript/访问node-express中static静态文件.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Javascript/访问node-express中static静态文件.html.vue",componentFilePathRelative:"pages/Javascript/访问node-express中static静态文件.html.vue",componentFileChunkName:"v-6382c4c6",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Javascript/访问node-express中static静态文件.html.js",dataFilePathRelative:"pages/Javascript/访问node-express中static静态文件.html.js",dataFileChunkName:"v-6382c4c6",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Javascript/访问node-express中static静态文件.html",htmlFilePathRelative:"Javascript/访问node-express中static静态文件.html"},{data:{key:"v-e6a0db48",path:"/Debug/css%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8node-sass%E5%AE%89%E8%A3%85%E5%87%BA%E9%94%99.html",title:"css预处理器node-sass安装出错",lang:"zh-CN",frontmatter:{date:"2022/4/19 14:10",coverUrl:"/pic/5.jpg",stick:!1,keyword:"node-sass,debug",description:"css预处理器node-sass安装出错",title:"css预处理器node-sass安装出错",tag:["node-sass","debug"],categories:["node-sass","debug"]},excerpt:"",headers:[{level:2,title:"✨css预处理器node-sass安装出错✨",slug:"✨css预处理器node-sass安装出错✨",children:[{level:3,title:"在npm i 后发现项目跑不起来，报错node-sass包安装失败、找不到或版本问题",slug:"在npm-i-后发现项目跑不起来-报错node-sass包安装失败、找不到或版本问题",children:[]},{level:3,title:"经过一系列的实验，最终发现是node的版本问题",slug:"经过一系列的实验-最终发现是node的版本问题",children:[]},{level:3,title:"降低node版本即可",slug:"降低node版本即可",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-e6a0db48",path:"/Debug/css%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8node-sass%E5%AE%89%E8%A3%85%E5%87%BA%E9%94%99.html",title:"css预处理器node-sass安装出错",lang:"zh-CN",frontmatter:{date:"2022/4/19 14:10",coverUrl:"/pic/5.jpg",stick:!1,keyword:"node-sass,debug",description:"css预处理器node-sass安装出错",title:"css预处理器node-sass安装出错",tag:["node-sass","debug"],categories:["node-sass","debug"]},excerpt:"",headers:[{level:2,title:"✨css预处理器node-sass安装出错✨",slug:"✨css预处理器node-sass安装出错✨",children:[{level:3,title:"在npm i 后发现项目跑不起来，报错node-sass包安装失败、找不到或版本问题",slug:"在npm-i-后发现项目跑不起来-报错node-sass包安装失败、找不到或版本问题",children:[]},{level:3,title:"经过一系列的实验，最终发现是node的版本问题",slug:"经过一系列的实验-最终发现是node的版本问题",children:[]},{level:3,title:"降低node版本即可",slug:"降低node版本即可",children:[]}]}],content:"\r\n\r\n\r\n\r\n\r\n\r\n## ✨css预处理器`node-sass`安装出错✨\r\n\r\n```\r\nModule build failed (from ./node_modules/sass-loader/lib/loader.js):\r\nError: Cannot find module 'node-sass'\r\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:636:15)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:562:25)\r\n    at Module.require (internal/modules/cjs/loader.js:692:17)\r\n    at require (internal/modules/cjs/helpers.js:25:18)\r\n```\r\n\r\n### 在`npm i` 后发现项目跑不起来，报错`node-sass`包安装失败、找不到或版本问题\r\n- 网上大多数的解决办法是直接安装对应版本的`node-sass`包\r\n- 或修改config文件中的`node-sass`包版本后再`npm i`\r\n\r\n### 经过一系列的实验，最终发现是node的版本问题\r\n- 新版本的`node`在`npm i`时，无法安装老版本的`node-sass`\r\n- 如果安装的新版本的`node-saaa`，项目跑不起来\r\n- 只能降低node的版本，新版本采用的是16...，老版本则是14...\r\n\r\n### 降低`node`版本即可",contentRendered:'<h2 id="✨css预处理器node-sass安装出错✨" tabindex="-1"><a class="header-anchor" href="#✨css预处理器node-sass安装出错✨" aria-hidden="true">#</a> ✨css预处理器<code>node-sass</code>安装出错✨</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>Module build failed (from ./node_modules/sass-loader/lib/loader.js):\nError: Cannot find module \'node-sass\'\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:636:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:562:25)\n    at Module.require (internal/modules/cjs/loader.js:692:17)\n    at require (internal/modules/cjs/helpers.js:25:18)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="在npm-i-后发现项目跑不起来-报错node-sass包安装失败、找不到或版本问题" tabindex="-1"><a class="header-anchor" href="#在npm-i-后发现项目跑不起来-报错node-sass包安装失败、找不到或版本问题" aria-hidden="true">#</a> 在<code>npm i</code> 后发现项目跑不起来，报错<code>node-sass</code>包安装失败、找不到或版本问题</h3>\n<ul>\n<li>网上大多数的解决办法是直接安装对应版本的<code>node-sass</code>包</li>\n<li>或修改config文件中的<code>node-sass</code>包版本后再<code>npm i</code></li>\n</ul>\n<h3 id="经过一系列的实验-最终发现是node的版本问题" tabindex="-1"><a class="header-anchor" href="#经过一系列的实验-最终发现是node的版本问题" aria-hidden="true">#</a> 经过一系列的实验，最终发现是node的版本问题</h3>\n<ul>\n<li>新版本的<code>node</code>在<code>npm i</code>时，无法安装老版本的<code>node-sass</code></li>\n<li>如果安装的新版本的<code>node-saaa</code>，项目跑不起来</li>\n<li>只能降低node的版本，新版本采用的是16...，老版本则是14...</li>\n</ul>\n<h3 id="降低node版本即可" tabindex="-1"><a class="header-anchor" href="#降低node版本即可" aria-hidden="true">#</a> 降低<code>node</code>版本即可</h3>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Debug/css预处理器node-sass安装出错.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"css预处理器node-sass安装出错",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Debug/css预处理器node-sass安装出错.md",filePathRelative:"Debug/css预处理器node-sass安装出错.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Debug/css预处理器node-sass安装出错.html.vue",componentFilePathRelative:"pages/Debug/css预处理器node-sass安装出错.html.vue",componentFileChunkName:"v-e6a0db48",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Debug/css预处理器node-sass安装出错.html.js",dataFilePathRelative:"pages/Debug/css预处理器node-sass安装出错.html.js",dataFileChunkName:"v-e6a0db48",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Debug/css预处理器node-sass安装出错.html",htmlFilePathRelative:"Debug/css预处理器node-sass安装出错.html"},{data:{key:"v-9a49e110",path:"/Debug/Vue%E9%A1%B9%E7%9B%AE%E9%A1%B5%E9%9D%A2%E7%A9%BA%E7%99%BD.html",title:"Vue项目页面空白",lang:"zh-CN",frontmatter:{date:"2022/3/1 22:20",coverUrl:"/pic/5.jpg",stick:!1,keyword:"Vue,路由,配置",description:"Vue项目页面空白",title:"Vue项目页面空白",tag:["Vue","路由","配置"],categories:["Vue","路由","配置"]},excerpt:"",headers:[{level:2,title:"✨Vue项目页面空白✨",slug:"✨vue项目页面空白✨",children:[{level:3,title:"问题描述：",slug:"问题描述",children:[]},{level:3,title:"解决办法：",slug:"解决办法",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-9a49e110",path:"/Debug/Vue%E9%A1%B9%E7%9B%AE%E9%A1%B5%E9%9D%A2%E7%A9%BA%E7%99%BD.html",title:"Vue项目页面空白",lang:"zh-CN",frontmatter:{date:"2022/3/1 22:20",coverUrl:"/pic/5.jpg",stick:!1,keyword:"Vue,路由,配置",description:"Vue项目页面空白",title:"Vue项目页面空白",tag:["Vue","路由","配置"],categories:["Vue","路由","配置"]},excerpt:"",headers:[{level:2,title:"✨Vue项目页面空白✨",slug:"✨vue项目页面空白✨",children:[{level:3,title:"问题描述：",slug:"问题描述",children:[]},{level:3,title:"解决办法：",slug:"解决办法",children:[]}]}],content:"\r\n\r\n\r\n## ✨Vue项目页面空白✨\r\n\r\n\r\n### 问题描述：\r\n项目地址打开，页面为空白\r\n\r\n### 解决办法：\r\n检查路由配置\r\n1. 因不小心改了路由配置，导致初始路由错误\r\n错误示范：\r\n~~~javascript\r\nconst routes = [\r\n  {\r\n    path: '/main_page',\t\t\t\t\t# 此处的初始路由错误，应该为空\t\t\r\n    name: 'main_page',\t\t\t\t\t# 如果/main_page已开发，就不会出现白屏，会显示/mainpage内容\t\t\t\r\n    component: main_page,\r\n    \r\n  }\r\n]\r\n~~~\r\n\r\n2. 修改路由配置\r\n正确示范：\r\n~~~javascript\r\nconst routes = [\r\n  {\r\n    path: '/',\t\t\t\t\t\t\r\n    name: 'main_page',\t\t\t\t\t\t\t\t\r\n    component: main_page,\r\n    \r\n  }\r\n]\r\n~~~\r\n3.访问地址\r\nLocal:   http://localhost:8080/\r\n页面成功跳转到首页\r\n",contentRendered:'<h2 id="✨vue项目页面空白✨" tabindex="-1"><a class="header-anchor" href="#✨vue项目页面空白✨" aria-hidden="true">#</a> ✨Vue项目页面空白✨</h2>\n<h3 id="问题描述" tabindex="-1"><a class="header-anchor" href="#问题描述" aria-hidden="true">#</a> 问题描述：</h3>\n<p>项目地址打开，页面为空白</p>\n<h3 id="解决办法" tabindex="-1"><a class="header-anchor" href="#解决办法" aria-hidden="true">#</a> 解决办法：</h3>\n<p>检查路由配置</p>\n<ol>\n<li>因不小心改了路由配置，导致初始路由错误\n错误示范：</li>\n</ol>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">\'/main_page\'</span><span class="token punctuation">,</span>\t\t\t\t\t# 此处的初始路由错误，应该为空\t\t\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'main_page\'</span><span class="token punctuation">,</span>\t\t\t\t\t# 如果<span class="token operator">/</span>main_page已开发，就不会出现白屏，会显示<span class="token operator">/</span>mainpage内容\t\t\t\n    <span class="token literal-property property">component</span><span class="token operator">:</span> main_page<span class="token punctuation">,</span>\n    \n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ol start="2">\n<li>修改路由配置\n正确示范：</li>\n</ol>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">\'/\'</span><span class="token punctuation">,</span>\t\t\t\t\t\t\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'main_page\'</span><span class="token punctuation">,</span>\t\t\t\t\t\t\t\t\n    <span class="token literal-property property">component</span><span class="token operator">:</span> main_page<span class="token punctuation">,</span>\n    \n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>3.访问地址\nLocal:   http://localhost:8080/\n页面成功跳转到首页</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Debug/Vue项目页面空白.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"Vue项目页面空白",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Debug/Vue项目页面空白.md",filePathRelative:"Debug/Vue项目页面空白.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Debug/Vue项目页面空白.html.vue",componentFilePathRelative:"pages/Debug/Vue项目页面空白.html.vue",componentFileChunkName:"v-9a49e110",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Debug/Vue项目页面空白.html.js",dataFilePathRelative:"pages/Debug/Vue项目页面空白.html.js",dataFileChunkName:"v-9a49e110",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Debug/Vue项目页面空白.html",htmlFilePathRelative:"Debug/Vue项目页面空白.html"},{data:{key:"v-6b9f561e",path:"/Vue/Cookie-LocalStorage-SessionStorage.html",title:"Cookie、LocalStorage、SessionStorage的异同",lang:"zh-CN",frontmatter:{date:"2022/5/4 14:10",coverUrl:"/pic/7.jpg",stick:!1,keyword:"Cookie,LocalStorage,SessionStorage",description:"Cookie、LocalStorage、SessionStorage的异同",title:"Cookie、LocalStorage、SessionStorage的异同",tag:["Cookie","LocalStorage","SessionStorage"],categories:["Cookie","LocalStorage","SessionStorage"]},excerpt:"",headers:[{level:2,title:"✨Cookie、LocalStorage、SessionStorage的异同✨",slug:"✨cookie、localstorage、sessionstorage的异同✨",children:[{level:3,title:"基本概念",slug:"基本概念",children:[]},{level:3,title:"Cookie与Session的区别",slug:"cookie与session的区别",children:[]},{level:3,title:"Cookie、LocalStorage、SessionStorage的异同",slug:"cookie、localstorage、sessionstorage的异同",children:[]},{level:3,title:"LocalStorage与SessionStorage的API",slug:"localstorage与sessionstorage的api",children:[]},{level:3,title:"应用场景",slug:"应用场景",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-6b9f561e",path:"/Vue/Cookie-LocalStorage-SessionStorage.html",title:"Cookie、LocalStorage、SessionStorage的异同",lang:"zh-CN",frontmatter:{date:"2022/5/4 14:10",coverUrl:"/pic/7.jpg",stick:!1,keyword:"Cookie,LocalStorage,SessionStorage",description:"Cookie、LocalStorage、SessionStorage的异同",title:"Cookie、LocalStorage、SessionStorage的异同",tag:["Cookie","LocalStorage","SessionStorage"],categories:["Cookie","LocalStorage","SessionStorage"]},excerpt:"",headers:[{level:2,title:"✨Cookie、LocalStorage、SessionStorage的异同✨",slug:"✨cookie、localstorage、sessionstorage的异同✨",children:[{level:3,title:"基本概念",slug:"基本概念",children:[]},{level:3,title:"Cookie与Session的区别",slug:"cookie与session的区别",children:[]},{level:3,title:"Cookie、LocalStorage、SessionStorage的异同",slug:"cookie、localstorage、sessionstorage的异同",children:[]},{level:3,title:"LocalStorage与SessionStorage的API",slug:"localstorage与sessionstorage的api",children:[]},{level:3,title:"应用场景",slug:"应用场景",children:[]}]}],content:"\r\n\r\n## ✨Cookie、LocalStorage、SessionStorage的异同✨\r\n\r\n### 基本概念\r\n- Cookie 的大小限制为4kb左右，主要作用是保存登录信息，比如登录某个网站时候看到“记住密码”，一般都是通过在 Cookie 中存入一段辨别用户身份的数据来实现的\r\n- LocalStorage 和 sessionStorage 都是 HTML5 标准中新加入的技术，主要用来做本地存储，但是二者保存数据的生命周期不同\r\n- Session 是“会话”的意思，sessionStorage 只是可以将一部分数据在当前会话中保存下来，刷新页面数据依旧存在，但当页面关闭后，sessionStorage 中的数据就会被清空。而 LocalStorage 存储的数据除非被清除，否者永远存在本地\r\n\r\n\r\n### Cookie与Session的区别\r\n\r\n- cookie数据存放在浏览器中，session数据存放在服务器上\r\n- cookie是不安全的，别人可以分析存放在本地的cookie并进行cookie诈骗，考虑到安全性能，应尽量使用session\r\n- session会在一定时间内保存在服务器上。当访问增多时，会比较占用服务器的性能。考虑到服务性能，应尽量使用cookie\r\n- 单个cookie保存的数据不能超过4k，很多浏览器都限制一个站点最多保存20个cookie\r\n\r\n> cookie和session都用来存储用户信息，cookie存放于客户端有可能被窃取，所以cookie一般用来存放不敏感的信息，比如用户设置的网站主题，敏感的信息用session存储，比如用户的登录信息\r\n\r\n### Cookie、LocalStorage、SessionStorage的异同\r\n- HTML5中提出了webStorage的概念，webStorage包括sessionStorage和localStorage，只为了保存数据，不会与服务器进行通信\r\n- cookie,localStorage,sessionStorage都是在客户端保存数据，存储数据的类型：字符串\r\n- webStorage不会随着HTTP header发送到服务器端，所以安全性相对来说比cookie高，不必担心截获\r\n- 生命周期不同（见后文），localStorage要手动清除，sessionStorage在浏览器关闭后清除\r\n\r\n![](https://img-blog.csdnimg.cn/16ab8f69dfa94df28e0a796896d122f6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVGFuZ2N0dA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center)\r\n\r\n### LocalStorage与SessionStorage的API\r\n```javascript\r\nxxxxxStorage.setItem('key',value)\r\n// 接收一个键和值作为参数，把键值对添加到存储中\r\n// 如果键名存在，则更新其对应的值。\r\n\r\nxxxxxStorage.getItem('key')\r\n// 接收一个键名作为参数，返回键名对应的值\r\n\r\nxxxxxStorage.removeItem('key')\r\n// 接收一个键名作为参数，并把该键名从存储中删除\r\n\r\nxxxxxStorage.clear()\r\n// 清空存储中的所有数据\r\n\r\n// 注意：只能存储字符串，不能存储对象、JSON等其他数据格式\r\n\r\n// 存储对象时，需要通过JSON.stringify()将对象转化为字符串\r\nlocalStorage.setItem(key,JSON.stringify(data))\r\n// 取出对象时，需要通过JSON.parse()将字符串转化为对象\r\nJSON.parse(localStorage.getItem(key))\r\n```\r\n\r\n### 应用场景\r\n\r\n- 因为考虑到每个 HTTP 请求都会带着 Cookie 的信息，所以 Cookie 当然是能精简就精简，比较常用的一个应用场景就是判断用户是否登录。\r\n- 针对登录过的用户，服务器端会在他登录时往 Cookie 中插入一段加密过的唯一辨识单一用户的辨识码，下次只要读取这个值就可以判断当前用户是否登录啦\r\n- Localstorage常用于长期登录，适合长期保存在本地的数据，比如用户信息\r\n- Sessionstorage常用于敏感账号一次性登陆，如关闭当前页面再次打开页面就要重新登陆\r\n\r\n",contentRendered:'<h2 id="✨cookie、localstorage、sessionstorage的异同✨" tabindex="-1"><a class="header-anchor" href="#✨cookie、localstorage、sessionstorage的异同✨" aria-hidden="true">#</a> ✨Cookie、LocalStorage、SessionStorage的异同✨</h2>\n<h3 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念" aria-hidden="true">#</a> 基本概念</h3>\n<ul>\n<li>Cookie 的大小限制为4kb左右，主要作用是保存登录信息，比如登录某个网站时候看到“记住密码”，一般都是通过在 Cookie 中存入一段辨别用户身份的数据来实现的</li>\n<li>LocalStorage 和 sessionStorage 都是 HTML5 标准中新加入的技术，主要用来做本地存储，但是二者保存数据的生命周期不同</li>\n<li>Session 是“会话”的意思，sessionStorage 只是可以将一部分数据在当前会话中保存下来，刷新页面数据依旧存在，但当页面关闭后，sessionStorage 中的数据就会被清空。而 LocalStorage 存储的数据除非被清除，否者永远存在本地</li>\n</ul>\n<h3 id="cookie与session的区别" tabindex="-1"><a class="header-anchor" href="#cookie与session的区别" aria-hidden="true">#</a> Cookie与Session的区别</h3>\n<ul>\n<li>cookie数据存放在浏览器中，session数据存放在服务器上</li>\n<li>cookie是不安全的，别人可以分析存放在本地的cookie并进行cookie诈骗，考虑到安全性能，应尽量使用session</li>\n<li>session会在一定时间内保存在服务器上。当访问增多时，会比较占用服务器的性能。考虑到服务性能，应尽量使用cookie</li>\n<li>单个cookie保存的数据不能超过4k，很多浏览器都限制一个站点最多保存20个cookie</li>\n</ul>\n<blockquote>\n<p>cookie和session都用来存储用户信息，cookie存放于客户端有可能被窃取，所以cookie一般用来存放不敏感的信息，比如用户设置的网站主题，敏感的信息用session存储，比如用户的登录信息</p>\n</blockquote>\n<h3 id="cookie、localstorage、sessionstorage的异同" tabindex="-1"><a class="header-anchor" href="#cookie、localstorage、sessionstorage的异同" aria-hidden="true">#</a> Cookie、LocalStorage、SessionStorage的异同</h3>\n<ul>\n<li>HTML5中提出了webStorage的概念，webStorage包括sessionStorage和localStorage，只为了保存数据，不会与服务器进行通信</li>\n<li>cookie,localStorage,sessionStorage都是在客户端保存数据，存储数据的类型：字符串</li>\n<li>webStorage不会随着HTTP header发送到服务器端，所以安全性相对来说比cookie高，不必担心截获</li>\n<li>生命周期不同（见后文），localStorage要手动清除，sessionStorage在浏览器关闭后清除</li>\n</ul>\n<p><img src="https://ooszy.cco.vin/img/blog-public/ljz.gif" alt="" originSrc="https://img-blog.csdnimg.cn/16ab8f69dfa94df28e0a796896d122f6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVGFuZ2N0dA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" data="aurora"></p>\n<h3 id="localstorage与sessionstorage的api" tabindex="-1"><a class="header-anchor" href="#localstorage与sessionstorage的api" aria-hidden="true">#</a> LocalStorage与SessionStorage的API</h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code>xxxxxStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">\'key\'</span><span class="token punctuation">,</span>value<span class="token punctuation">)</span>\n<span class="token comment">// 接收一个键和值作为参数，把键值对添加到存储中</span>\n<span class="token comment">// 如果键名存在，则更新其对应的值。</span>\n\nxxxxxStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">\'key\'</span><span class="token punctuation">)</span>\n<span class="token comment">// 接收一个键名作为参数，返回键名对应的值</span>\n\nxxxxxStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">\'key\'</span><span class="token punctuation">)</span>\n<span class="token comment">// 接收一个键名作为参数，并把该键名从存储中删除</span>\n\nxxxxxStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token comment">// 清空存储中的所有数据</span>\n\n<span class="token comment">// 注意：只能存储字符串，不能存储对象、JSON等其他数据格式</span>\n\n<span class="token comment">// 存储对象时，需要通过JSON.stringify()将对象转化为字符串</span>\nlocalStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">// 取出对象时，需要通过JSON.parse()将字符串转化为对象</span>\n<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="应用场景" tabindex="-1"><a class="header-anchor" href="#应用场景" aria-hidden="true">#</a> 应用场景</h3>\n<ul>\n<li>因为考虑到每个 HTTP 请求都会带着 Cookie 的信息，所以 Cookie 当然是能精简就精简，比较常用的一个应用场景就是判断用户是否登录。</li>\n<li>针对登录过的用户，服务器端会在他登录时往 Cookie 中插入一段加密过的唯一辨识单一用户的辨识码，下次只要读取这个值就可以判断当前用户是否登录啦</li>\n<li>Localstorage常用于长期登录，适合长期保存在本地的数据，比如用户信息</li>\n<li>Sessionstorage常用于敏感账号一次性登陆，如关闭当前页面再次打开页面就要重新登陆</li>\n</ul>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Vue/Cookie-LocalStorage-SessionStorage.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"Cookie-LocalStorage-SessionStorage",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Vue/Cookie-LocalStorage-SessionStorage.md",filePathRelative:"Vue/Cookie-LocalStorage-SessionStorage.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Vue/Cookie-LocalStorage-SessionStorage.html.vue",componentFilePathRelative:"pages/Vue/Cookie-LocalStorage-SessionStorage.html.vue",componentFileChunkName:"v-6b9f561e",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Vue/Cookie-LocalStorage-SessionStorage.html.js",dataFilePathRelative:"pages/Vue/Cookie-LocalStorage-SessionStorage.html.js",dataFileChunkName:"v-6b9f561e",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Vue/Cookie-LocalStorage-SessionStorage.html",htmlFilePathRelative:"Vue/Cookie-LocalStorage-SessionStorage.html"},{data:{key:"v-36024825",path:"/Vue/vue%E7%BB%84%E4%BB%B6%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html",title:"vue组件声明周期",lang:"zh-CN",frontmatter:{date:"2022/3/2 14:10",coverUrl:"/pic/7.jpg",stick:!1,keyword:"Vue,组件,生命周期",description:"vue组件声明周期",title:"vue组件声明周期",tag:["Vue","组件","生命周期"],categories:["Vue","组件","生命周期"]},excerpt:"",headers:[{level:2,title:"✨vue组件声明周期✨",slug:"✨vue组件声明周期✨",children:[{level:3,title:"单组件声明周期图",slug:"单组件声明周期图",children:[]},{level:3,title:"父子组件生命周期图",slug:"父子组件生命周期图",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-36024825",path:"/Vue/vue%E7%BB%84%E4%BB%B6%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html",title:"vue组件声明周期",lang:"zh-CN",frontmatter:{date:"2022/3/2 14:10",coverUrl:"/pic/7.jpg",stick:!1,keyword:"Vue,组件,生命周期",description:"vue组件声明周期",title:"vue组件声明周期",tag:["Vue","组件","生命周期"],categories:["Vue","组件","生命周期"]},excerpt:"",headers:[{level:2,title:"✨vue组件声明周期✨",slug:"✨vue组件声明周期✨",children:[{level:3,title:"单组件声明周期图",slug:"单组件声明周期图",children:[]},{level:3,title:"父子组件生命周期图",slug:"父子组件生命周期图",children:[]}]}],content:"\r\n\r\n## ✨vue组件声明周期✨\r\n\r\n\r\n### 单组件声明周期图\r\n```\r\n挂载： beforeCreate => created => beforeMount => mounted\r\n更新： beforeUpdate => updated\r\n销毁： beforeDestroy => destroyed\r\n```\r\n\r\n### 父子组件生命周期图\r\n```\r\n挂载： parent beforeCreate => parent created => parent beforeMount => child beforeCreate => child created => child beforeMount => child mounted => parent mounted\r\n更新： parent beforeUpdate => child beforeUpdate => child updated => parent updated\r\n销毁： parent beforeDestroy => child beforeDestroy => child destroyed => parent destroyed\r\n```\r\n\r\n> 从以上能够看出：\r\n挂载时，子组件是在父组件before mount后开始挂载，并且子组件先mounted，父组件随后\r\n更新时，子组件是在父组件before update后开始更新，子组件先于父组件更新\r\n销毁时，子组件是在父组件before destroy后开始销毁，并且是子组件先销毁，父组件随后。\r\n",contentRendered:'<h2 id="✨vue组件声明周期✨" tabindex="-1"><a class="header-anchor" href="#✨vue组件声明周期✨" aria-hidden="true">#</a> ✨vue组件声明周期✨</h2>\n<h3 id="单组件声明周期图" tabindex="-1"><a class="header-anchor" href="#单组件声明周期图" aria-hidden="true">#</a> 单组件声明周期图</h3>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>挂载： beforeCreate => created => beforeMount => mounted\n更新： beforeUpdate => updated\n销毁： beforeDestroy => destroyed\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="父子组件生命周期图" tabindex="-1"><a class="header-anchor" href="#父子组件生命周期图" aria-hidden="true">#</a> 父子组件生命周期图</h3>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>挂载： parent beforeCreate => parent created => parent beforeMount => child beforeCreate => child created => child beforeMount => child mounted => parent mounted\n更新： parent beforeUpdate => child beforeUpdate => child updated => parent updated\n销毁： parent beforeDestroy => child beforeDestroy => child destroyed => parent destroyed\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote>\n<p>从以上能够看出：\n挂载时，子组件是在父组件before mount后开始挂载，并且子组件先mounted，父组件随后\n更新时，子组件是在父组件before update后开始更新，子组件先于父组件更新\n销毁时，子组件是在父组件before destroy后开始销毁，并且是子组件先销毁，父组件随后。</p>\n</blockquote>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Vue/vue组件生命周期.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"vue组件生命周期",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Vue/vue组件生命周期.md",filePathRelative:"Vue/vue组件生命周期.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Vue/vue组件生命周期.html.vue",componentFilePathRelative:"pages/Vue/vue组件生命周期.html.vue",componentFileChunkName:"v-36024825",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Vue/vue组件生命周期.html.js",dataFilePathRelative:"pages/Vue/vue组件生命周期.html.js",dataFileChunkName:"v-36024825",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Vue/vue组件生命周期.html",htmlFilePathRelative:"Vue/vue组件生命周期.html"},{data:{key:"v-a796ac14",path:"/Vue/Vue%E7%BB%84%E4%BB%B6%E9%97%B4%E5%B8%B8%E7%94%A8%E4%BC%A0%E5%8F%82%E6%96%B9%E5%BC%8F.html",title:"Vue组件间常用传参方式",lang:"zh-CN",frontmatter:{date:"2022/5/2 14:10",coverUrl:"/pic/7.jpg",stick:!1,keyword:"Vue,组件,传参",description:"Vue组件间常用传参方式",title:"Vue组件间常用传参方式",tag:["Vue","组件","传参"],categories:["Vue","组件","传参"]},excerpt:"",headers:[{level:2,title:"✨Vue组件间常用传参方式✨",slug:"✨vue组件间常用传参方式✨",children:[{level:3,title:"1. props、emit（最常用的父子通讯方式）",slug:"_1-props、emit-最常用的父子通讯方式",children:[]},{level:3,title:"2. 事件总线EventBus（常用任意两个组件之间的通讯）",slug:"_2-事件总线eventbus-常用任意两个组件之间的通讯",children:[]},{level:3,title:"3.Vuex状态管理（vue的核心插件，用于任意组件的任意通讯，需注意刷新后有可能vuex数据会丢失）",slug:"_3-vuex状态管理-vue的核心插件-用于任意组件的任意通讯-需注意刷新后有可能vuex数据会丢失",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-a796ac14",path:"/Vue/Vue%E7%BB%84%E4%BB%B6%E9%97%B4%E5%B8%B8%E7%94%A8%E4%BC%A0%E5%8F%82%E6%96%B9%E5%BC%8F.html",title:"Vue组件间常用传参方式",lang:"zh-CN",frontmatter:{date:"2022/5/2 14:10",coverUrl:"/pic/7.jpg",stick:!1,keyword:"Vue,组件,传参",description:"Vue组件间常用传参方式",title:"Vue组件间常用传参方式",tag:["Vue","组件","传参"],categories:["Vue","组件","传参"]},excerpt:"",headers:[{level:2,title:"✨Vue组件间常用传参方式✨",slug:"✨vue组件间常用传参方式✨",children:[{level:3,title:"1. props、emit（最常用的父子通讯方式）",slug:"_1-props、emit-最常用的父子通讯方式",children:[]},{level:3,title:"2. 事件总线EventBus（常用任意两个组件之间的通讯）",slug:"_2-事件总线eventbus-常用任意两个组件之间的通讯",children:[]},{level:3,title:"3.Vuex状态管理（vue的核心插件，用于任意组件的任意通讯，需注意刷新后有可能vuex数据会丢失）",slug:"_3-vuex状态管理-vue的核心插件-用于任意组件的任意通讯-需注意刷新后有可能vuex数据会丢失",children:[]}]}],content:"\r\n\r\n## ✨Vue组件间常用传参方式✨\r\n\r\n### 1. props、emit（最常用的父子通讯方式）\r\n\r\n#### 父传子\r\n\r\n> 父组件传入属性，子组件通过`props`接收，就可以在内部`this.XXX`的方式使用\r\n\r\n```javascript\r\n// 父组件\r\n<hello-world msg=\"hello world!\"><hello-world>\r\n\r\n// 子组件\r\n<div>{{msg}}</div>\r\n\r\nprops：['msg']\r\n```\r\n#### 子传父\r\n\r\n> 子组件`$emit`（事件名，传递的参数）向外弹出一个自定义事件，在父组件中监听子组件的自定义事件，同时也能获取子组件传出来的参数\r\n\r\n```javascript\r\n//\t子组件\r\n<input v-model=\"username\" @change=\"setUser\">\r\n\r\nreturn {\r\n    username:'tct'\r\n}\r\n\r\nmethods：{\r\n  \tsetUser(){\r\n  \t\tthis.$emit('transferUser', username)\r\n  \t}\r\n}\r\n\r\n//\t父组件\r\n<hello-world @transferUser=\"getUser\"><hello-world>\r\n\r\nreturn {\r\n    user:''\r\n}\r\n\r\n\r\nmethods：{\r\n  \tgetUser(msg){\r\n  \t\tthis.user = msg\r\n  \t}\r\n}\r\n```\r\n\r\n### 2. 事件总线`EventBus`（常用任意两个组件之间的通讯）\r\n\r\n> 原理：注册的事件存起来，等触发事件时再调用。定义一个类去处理事件，并挂载到Vue实例的this上即可注册和触发事件，也可拓展一些事件管理\r\n\r\n```javascript\r\nclass Bus {\r\n  constructor () {\r\n    this.callbackList = {}\r\n  }\r\n\r\n  $on (name, callback) {\r\n    // 注册事件\r\n    this.callbackList[name] ? this.callbackList[name].push(callback) : (this.callbackList[name] = [callback])\r\n  }\r\n\r\n  $emit (name, args) {\r\n    // 触发事件\r\n    if (this.callbackList[name]) {\r\n      this.callbackList[name].forEach(cb => cb(args))\r\n    }\r\n  }\r\n}\r\n\r\nVue.prototype.$bus = new Bus()\r\n\r\n// 任意两个组件中\r\n// 组件一：在组件的 mounted() 去注册事件\r\nthis.$bus.$on('confirm', handleConfirm)\r\n\r\n// 组件二：触发事件(如：点击事件后执行触发事件即可)\r\nthis.$bus.$emit('confirm', list)\r\n```\r\n\r\n### 3.Vuex状态管理（vue的核心插件，用于任意组件的任意通讯，需注意刷新后有可能vuex数据会丢失）\r\n\r\n- 创建全局唯一的状态管理仓库`store`,有同步`mutations`、异步`actions`的方式去管理数据，有缓存数据`getters`，还能分成各个模块`modules`易于维护，详细使用见[Vuex官方文档](https://vuex.vuejs.org/zh/)",contentRendered:'<h2 id="✨vue组件间常用传参方式✨" tabindex="-1"><a class="header-anchor" href="#✨vue组件间常用传参方式✨" aria-hidden="true">#</a> ✨Vue组件间常用传参方式✨</h2>\n<h3 id="_1-props、emit-最常用的父子通讯方式" tabindex="-1"><a class="header-anchor" href="#_1-props、emit-最常用的父子通讯方式" aria-hidden="true">#</a> 1. props、emit（最常用的父子通讯方式）</h3>\n<h4 id="父传子" tabindex="-1"><a class="header-anchor" href="#父传子" aria-hidden="true">#</a> 父传子</h4>\n<blockquote>\n<p>父组件传入属性，子组件通过<code>props</code>接收，就可以在内部<code>this.XXX</code>的方式使用</p>\n</blockquote>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// 父组件</span>\n<span class="token operator">&lt;</span>hello<span class="token operator">-</span>world msg<span class="token operator">=</span><span class="token string">"hello world!"</span><span class="token operator">></span><span class="token operator">&lt;</span>hello<span class="token operator">-</span>world<span class="token operator">></span>\n\n<span class="token comment">// 子组件</span>\n<span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span>msg<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n\nprops：<span class="token punctuation">[</span><span class="token string">\'msg\'</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="子传父" tabindex="-1"><a class="header-anchor" href="#子传父" aria-hidden="true">#</a> 子传父</h4>\n<blockquote>\n<p>子组件<code>$emit</code>（事件名，传递的参数）向外弹出一个自定义事件，在父组件中监听子组件的自定义事件，同时也能获取子组件传出来的参数</p>\n</blockquote>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">//\t子组件</span>\n<span class="token operator">&lt;</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"username"</span> @change<span class="token operator">=</span><span class="token string">"setUser"</span><span class="token operator">></span>\n\n<span class="token keyword">return</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">username</span><span class="token operator">:</span><span class="token string">\'tct\'</span>\n<span class="token punctuation">}</span>\n\nmethods：<span class="token punctuation">{</span>\n  \t<span class="token function">setUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  \t\t<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">\'transferUser\'</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span>\n  \t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//\t父组件</span>\n<span class="token operator">&lt;</span>hello<span class="token operator">-</span>world @transferUser<span class="token operator">=</span><span class="token string">"getUser"</span><span class="token operator">></span><span class="token operator">&lt;</span>hello<span class="token operator">-</span>world<span class="token operator">></span>\n\n<span class="token keyword">return</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">user</span><span class="token operator">:</span><span class="token string">\'\'</span>\n<span class="token punctuation">}</span>\n\n\nmethods：<span class="token punctuation">{</span>\n  \t<span class="token function">getUser</span><span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  \t\t<span class="token keyword">this</span><span class="token punctuation">.</span>user <span class="token operator">=</span> msg\n  \t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h3 id="_2-事件总线eventbus-常用任意两个组件之间的通讯" tabindex="-1"><a class="header-anchor" href="#_2-事件总线eventbus-常用任意两个组件之间的通讯" aria-hidden="true">#</a> 2. 事件总线<code>EventBus</code>（常用任意两个组件之间的通讯）</h3>\n<blockquote>\n<p>原理：注册的事件存起来，等触发事件时再调用。定义一个类去处理事件，并挂载到Vue实例的this上即可注册和触发事件，也可拓展一些事件管理</p>\n</blockquote>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Bus</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>callbackList <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">$on</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 注册事件</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>callbackList<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span>callbackList<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>callbackList<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>callback<span class="token punctuation">]</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">$emit</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 触发事件</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>callbackList<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>callbackList<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">cb</span> <span class="token operator">=></span> <span class="token function">cb</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$bus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 任意两个组件中</span>\n<span class="token comment">// 组件一：在组件的 mounted() 去注册事件</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">\'confirm\'</span><span class="token punctuation">,</span> handleConfirm<span class="token punctuation">)</span>\n\n<span class="token comment">// 组件二：触发事件(如：点击事件后执行触发事件即可)</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">\'confirm\'</span><span class="token punctuation">,</span> list<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h3 id="_3-vuex状态管理-vue的核心插件-用于任意组件的任意通讯-需注意刷新后有可能vuex数据会丢失" tabindex="-1"><a class="header-anchor" href="#_3-vuex状态管理-vue的核心插件-用于任意组件的任意通讯-需注意刷新后有可能vuex数据会丢失" aria-hidden="true">#</a> 3.Vuex状态管理（vue的核心插件，用于任意组件的任意通讯，需注意刷新后有可能vuex数据会丢失）</h3>\n<ul>\n<li>创建全局唯一的状态管理仓库<code>store</code>,有同步<code>mutations</code>、异步<code>actions</code>的方式去管理数据，有缓存数据<code>getters</code>，还能分成各个模块<code>modules</code>易于维护，详细使用见<a href="https://vuex.vuejs.org/zh/" target="_blank" rel="noopener noreferrer">Vuex官方文档<ExternalLinkIcon/></a></li>\n</ul>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Vue/Vue组件间常用传参方式.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"Vue组件间常用传参方式",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Vue/Vue组件间常用传参方式.md",filePathRelative:"Vue/Vue组件间常用传参方式.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Vue/Vue组件间常用传参方式.html.vue",componentFilePathRelative:"pages/Vue/Vue组件间常用传参方式.html.vue",componentFileChunkName:"v-a796ac14",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Vue/Vue组件间常用传参方式.html.js",dataFilePathRelative:"pages/Vue/Vue组件间常用传参方式.html.js",dataFileChunkName:"v-a796ac14",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Vue/Vue组件间常用传参方式.html",htmlFilePathRelative:"Vue/Vue组件间常用传参方式.html"},{data:{key:"v-ba03ecda",path:"/Vue/Vue%E8%B7%AF%E7%94%B1%E4%BC%A0%E5%8F%82.html",title:"Vue路由传参",lang:"zh-CN",frontmatter:{date:"2022/5/3 14:10",coverUrl:"/pic/7.jpg",stick:!1,keyword:"Vue,路由,传参",description:"Vue路由传参",title:"Vue路由传参",tag:["Vue","路由","传参"],categories:["Vue","路由","传参"]},excerpt:"",headers:[{level:2,title:"✨Vue路由传参✨",slug:"✨vue路由传参✨",children:[{level:3,title:"方式一：配置动态路由",slug:"方式一-配置动态路由",children:[]},{level:3,title:"方式二：通过query属性传值",slug:"方式二-通过query属性传值",children:[]},{level:3,title:"方式三：通过params属性传值",slug:"方式三-通过params属性传值",children:[]},{level:3,title:"query和params传参的区别",slug:"query和params传参的区别",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-ba03ecda",path:"/Vue/Vue%E8%B7%AF%E7%94%B1%E4%BC%A0%E5%8F%82.html",title:"Vue路由传参",lang:"zh-CN",frontmatter:{date:"2022/5/3 14:10",coverUrl:"/pic/7.jpg",stick:!1,keyword:"Vue,路由,传参",description:"Vue路由传参",title:"Vue路由传参",tag:["Vue","路由","传参"],categories:["Vue","路由","传参"]},excerpt:"",headers:[{level:2,title:"✨Vue路由传参✨",slug:"✨vue路由传参✨",children:[{level:3,title:"方式一：配置动态路由",slug:"方式一-配置动态路由",children:[]},{level:3,title:"方式二：通过query属性传值",slug:"方式二-通过query属性传值",children:[]},{level:3,title:"方式三：通过params属性传值",slug:"方式三-通过params属性传值",children:[]},{level:3,title:"query和params传参的区别",slug:"query和params传参的区别",children:[]}]}],content:"\r\n\r\n\r\n## ✨Vue路由传参✨\r\n\r\n### 方式一：配置动态路由\r\n\r\n- 页面刷新，参数不会消失\r\n- URL路径中会显示传递的参数\r\n\r\n```java\r\n// 1. 路由配置文件中配置动态路由\r\n{\r\n     path: '/detail/:id',\r\n     name: 'Detail',\r\n     component: Detail\r\n }\r\n   \r\n   \r\n//2. 使用，跳转时页面\r\nvar id = 1;\r\nthis.$router.push('/detail/' + id)\r\n//url形式： http://192.169.3.198/detail/1\r\n \r\n//3. 跳转后页面获取参数\r\nthis.$route.params.id\r\n```\r\n\r\n### 方式二：通过`query`属性传值\r\n\r\n- 使用`path`来匹配路由\r\n- 页面刷新，参数不会消失\r\n- `query`类似`get`，跳转之后页面的url后面会拼接参数，类似`?id=1`\r\n- **目标组件在`create`生命周期中，通过`this.$route`接受**\r\n\r\n```javascript\r\n//1. 路由配置文件\r\n{\r\n    path: '/detail',\r\n    name: 'Detail',\r\n    component: Detail\r\n}\r\n   \r\n//2. 跳转时页面\r\nthis.$router.push({\r\n  path: '/detail',\r\n  query: {\r\n    name: '张三'，\r\n    id: 1,\r\n  }\r\n})\r\n//url形式： http://192.169.3.198/detail?id=1&name='张三'\r\n \r\n//3. 跳转后页面获取参数对象（create生命周期）\r\nthis.$route.query\r\n```\r\n\r\n### 方式三：通过`params`属性传值\r\n\r\n- **目标组件在`create`生命周期中，通过`this.$route`接受**\r\n- 通过路由属性中的`name`来确定匹配的路由\r\n- 密文传参，页面不再url地址上显示\r\n- 缺点：刷新页面后，参数就消失了\r\n\r\n```javascript\r\n//1. 路由配置文件\r\n{\r\n     path: '/detail',\r\n     name: 'Detail',\r\n     component: Detail\r\n   }\r\n   \r\n//2. 跳转时页面\r\nthis.$router.push({\r\n  name: 'Detail',\r\n  params: {\r\n    name: '张三'，\r\n    id: 1,\r\n  }\r\n})\r\n \r\n//3. 跳转后页面获取参数对象（create生命周期）\r\nthis.$route.params\r\n```\r\n\r\n### `query`和`params`传参的区别\r\n\r\n1. `params`传参必须使用命名路由的方式传参\r\n2. `params`传参不会显示在地址栏上，会保存在内存中，刷新就会丢失，可以配合本地存储进行使用\r\n3. `query`的参数会显示在地址栏上，不会消失\r\n",contentRendered:'<h2 id="✨vue路由传参✨" tabindex="-1"><a class="header-anchor" href="#✨vue路由传参✨" aria-hidden="true">#</a> ✨Vue路由传参✨</h2>\n<h3 id="方式一-配置动态路由" tabindex="-1"><a class="header-anchor" href="#方式一-配置动态路由" aria-hidden="true">#</a> 方式一：配置动态路由</h3>\n<ul>\n<li>页面刷新，参数不会消失</li>\n<li>URL路径中会显示传递的参数</li>\n</ul>\n<div class="language-java ext-java line-numbers-mode"><pre v-pre class="language-java"><code><span class="token comment">// 1. 路由配置文件中配置动态路由</span>\n<span class="token punctuation">{</span>\n     path<span class="token operator">:</span> \'<span class="token operator">/</span>detail<span class="token operator">/</span><span class="token operator">:</span>id\'<span class="token punctuation">,</span>\n     name<span class="token operator">:</span> <span class="token char">\'Detail\'</span><span class="token punctuation">,</span>\n     component<span class="token operator">:</span> <span class="token class-name">Detail</span>\n <span class="token punctuation">}</span>\n   \n   \n<span class="token comment">//2. 使用，跳转时页面</span>\n<span class="token keyword">var</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>\'<span class="token operator">/</span>detail<span class="token operator">/</span>\' <span class="token operator">+</span> id<span class="token punctuation">)</span>\n<span class="token comment">//url形式： http://192.169.3.198/detail/1</span>\n \n<span class="token comment">//3. 跳转后页面获取参数</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="方式二-通过query属性传值" tabindex="-1"><a class="header-anchor" href="#方式二-通过query属性传值" aria-hidden="true">#</a> 方式二：通过<code>query</code>属性传值</h3>\n<ul>\n<li>使用<code>path</code>来匹配路由</li>\n<li>页面刷新，参数不会消失</li>\n<li><code>query</code>类似<code>get</code>，跳转之后页面的url后面会拼接参数，类似<code>?id=1</code></li>\n<li><strong>目标组件在<code>create</code>生命周期中，通过<code>this.$route</code>接受</strong></li>\n</ul>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">//1. 路由配置文件</span>\n<span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">\'/detail\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Detail\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">component</span><span class="token operator">:</span> Detail\n<span class="token punctuation">}</span>\n   \n<span class="token comment">//2. 跳转时页面</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">\'/detail\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'张三\'</span>，\n    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">//url形式： http://192.169.3.198/detail?id=1&amp;name=\'张三\'</span>\n \n<span class="token comment">//3. 跳转后页面获取参数对象（create生命周期）</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>query\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="方式三-通过params属性传值" tabindex="-1"><a class="header-anchor" href="#方式三-通过params属性传值" aria-hidden="true">#</a> 方式三：通过<code>params</code>属性传值</h3>\n<ul>\n<li><strong>目标组件在<code>create</code>生命周期中，通过<code>this.$route</code>接受</strong></li>\n<li>通过路由属性中的<code>name</code>来确定匹配的路由</li>\n<li>密文传参，页面不再url地址上显示</li>\n<li>缺点：刷新页面后，参数就消失了</li>\n</ul>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">//1. 路由配置文件</span>\n<span class="token punctuation">{</span>\n     <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">\'/detail\'</span><span class="token punctuation">,</span>\n     <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Detail\'</span><span class="token punctuation">,</span>\n     <span class="token literal-property property">component</span><span class="token operator">:</span> Detail\n   <span class="token punctuation">}</span>\n   \n<span class="token comment">//2. 跳转时页面</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Detail\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'张三\'</span>，\n    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n \n<span class="token comment">//3. 跳转后页面获取参数对象（create生命周期）</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>params\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="query和params传参的区别" tabindex="-1"><a class="header-anchor" href="#query和params传参的区别" aria-hidden="true">#</a> <code>query</code>和<code>params</code>传参的区别</h3>\n<ol>\n<li><code>params</code>传参必须使用命名路由的方式传参</li>\n<li><code>params</code>传参不会显示在地址栏上，会保存在内存中，刷新就会丢失，可以配合本地存储进行使用</li>\n<li><code>query</code>的参数会显示在地址栏上，不会消失</li>\n</ol>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Vue/Vue路由传参.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"Vue路由传参",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Vue/Vue路由传参.md",filePathRelative:"Vue/Vue路由传参.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Vue/Vue路由传参.html.vue",componentFilePathRelative:"pages/Vue/Vue路由传参.html.vue",componentFileChunkName:"v-ba03ecda",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Vue/Vue路由传参.html.js",dataFilePathRelative:"pages/Vue/Vue路由传参.html.js",dataFileChunkName:"v-ba03ecda",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Vue/Vue路由传参.html",htmlFilePathRelative:"Vue/Vue路由传参.html"},{data:{key:"v-1f086782",path:"/Vue/%E9%80%9A%E8%BF%87network%E7%9A%84ip%E8%AE%BF%E9%97%AE.html",title:"Vue项目通过network的ip地址访问方法",lang:"zh-CN",frontmatter:{date:"2022/4/22 22:10",coverUrl:"/pic/7.jpg",stick:!1,keyword:"Vue,network,Ip",description:"Vue项目通过network的ip地址访问方法",title:"Vue项目通过network的ip地址访问方法",tag:["Vue","Inetwork","Ip"],categories:["Vue","Inetwork","Ip"]},excerpt:"",headers:[{level:2,title:"✨Vue项目通过network的ip地址访问方法✨",slug:"✨vue项目通过network的ip地址访问方法✨",children:[]},{level:2,title:"设置完成之后就可以用ip+端口号的形式来访问项目",slug:"设置完成之后就可以用ip-端口号的形式来访问项目",children:[]},{level:2,title:"在使用network进行局域网访问时注意",slug:"在使用network进行局域网访问时注意",children:[{level:3,title:"设置完成即可使用其它设备在同一局域网下进行访问了",slug:"设置完成即可使用其它设备在同一局域网下进行访问了",children:[]},{level:3,title:"注意：",slug:"注意",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-1f086782",path:"/Vue/%E9%80%9A%E8%BF%87network%E7%9A%84ip%E8%AE%BF%E9%97%AE.html",title:"Vue项目通过network的ip地址访问方法",lang:"zh-CN",frontmatter:{date:"2022/4/22 22:10",coverUrl:"/pic/7.jpg",stick:!1,keyword:"Vue,network,Ip",description:"Vue项目通过network的ip地址访问方法",title:"Vue项目通过network的ip地址访问方法",tag:["Vue","Inetwork","Ip"],categories:["Vue","Inetwork","Ip"]},excerpt:"",headers:[{level:2,title:"✨Vue项目通过network的ip地址访问方法✨",slug:"✨vue项目通过network的ip地址访问方法✨",children:[]},{level:2,title:"设置完成之后就可以用ip+端口号的形式来访问项目",slug:"设置完成之后就可以用ip-端口号的形式来访问项目",children:[]},{level:2,title:"在使用network进行局域网访问时注意",slug:"在使用network进行局域网访问时注意",children:[{level:3,title:"设置完成即可使用其它设备在同一局域网下进行访问了",slug:"设置完成即可使用其它设备在同一局域网下进行访问了",children:[]},{level:3,title:"注意：",slug:"注意",children:[]}]}],content:'\r\n\r\n\r\n\r\n\r\n## ✨Vue项目通过network的ip地址访问方法✨\r\n\r\n1. 在config.js文件中的dev中修改host为0.0.0.0\r\n```javascript\r\n devServer: { // 环境配置\r\n        host: \'0.0.0.0\',\r\n        port: 8080,\r\n        https: false,\r\n        hotOnly: false,\r\n        disableHostCheck: true,\r\n        open: false // 配置自动启动浏览器\r\n\r\n    },\r\n```\r\n\r\n2. 或者在package.json文件下"scripts"的"dev"后面加上–host 0.0.0.0"，如果没有dev就找serve\r\n\r\n```javascript\r\n"scripts": {\r\n    "serve": "vue-cli-service serve --host 0.0.0.0",\r\n    "build": "vue-cli-service build",\r\n    "lint": "vue-cli-service lint"\r\n  },\r\n  ```\r\n## 设置完成之后就可以用ip+端口号的形式来访问项目\r\n\r\n## 在使用network进行局域网访问时注意\r\n- 局域网访问访问需要打开出站、入站规则\r\n- 防火墙默认打开，无法进行network的ip访问，ip为本机在局域网中的地址\r\n- 关闭防火墙（公用网络）和安全软件即可\r\n### 设置完成即可使用其它设备在同一局域网下进行访问了\r\n\r\n### 注意：\r\n- 如果更换了网络状态，ip地址就会发生改变，就不能用旧的ip地址访问，要使用新ip来访问项目\r\n',contentRendered:'<h2 id="✨vue项目通过network的ip地址访问方法✨" tabindex="-1"><a class="header-anchor" href="#✨vue项目通过network的ip地址访问方法✨" aria-hidden="true">#</a> ✨Vue项目通过network的ip地址访问方法✨</h2>\n<ol>\n<li>在config.js文件中的dev中修改host为0.0.0.0</li>\n</ol>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code> <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// 环境配置</span>\n        <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">\'0.0.0.0\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">8080</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">https</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">hotOnly</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">disableHostCheck</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token comment">// 配置自动启动浏览器</span>\n\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ol start="2">\n<li>或者在package.json文件下&quot;scripts&quot;的&quot;dev&quot;后面加上–host 0.0.0.0&quot;，如果没有dev就找serve</li>\n</ol>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token string-property property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string-property property">"serve"</span><span class="token operator">:</span> <span class="token string">"vue-cli-service serve --host 0.0.0.0"</span><span class="token punctuation">,</span>\n    <span class="token string-property property">"build"</span><span class="token operator">:</span> <span class="token string">"vue-cli-service build"</span><span class="token punctuation">,</span>\n    <span class="token string-property property">"lint"</span><span class="token operator">:</span> <span class="token string">"vue-cli-service lint"</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="设置完成之后就可以用ip-端口号的形式来访问项目" tabindex="-1"><a class="header-anchor" href="#设置完成之后就可以用ip-端口号的形式来访问项目" aria-hidden="true">#</a> 设置完成之后就可以用ip+端口号的形式来访问项目</h2>\n<h2 id="在使用network进行局域网访问时注意" tabindex="-1"><a class="header-anchor" href="#在使用network进行局域网访问时注意" aria-hidden="true">#</a> 在使用network进行局域网访问时注意</h2>\n<ul>\n<li>局域网访问访问需要打开出站、入站规则</li>\n<li>防火墙默认打开，无法进行network的ip访问，ip为本机在局域网中的地址</li>\n<li>关闭防火墙（公用网络）和安全软件即可</li>\n</ul>\n<h3 id="设置完成即可使用其它设备在同一局域网下进行访问了" tabindex="-1"><a class="header-anchor" href="#设置完成即可使用其它设备在同一局域网下进行访问了" aria-hidden="true">#</a> 设置完成即可使用其它设备在同一局域网下进行访问了</h3>\n<h3 id="注意" tabindex="-1"><a class="header-anchor" href="#注意" aria-hidden="true">#</a> 注意：</h3>\n<ul>\n<li>如果更换了网络状态，ip地址就会发生改变，就不能用旧的ip地址访问，要使用新ip来访问项目</li>\n</ul>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Vue/通过network的ip访问.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"通过network的ip访问",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Vue/通过network的ip访问.md",filePathRelative:"Vue/通过network的ip访问.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Vue/通过network的ip访问.html.vue",componentFilePathRelative:"pages/Vue/通过network的ip访问.html.vue",componentFileChunkName:"v-1f086782",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Vue/通过network的ip访问.html.js",dataFilePathRelative:"pages/Vue/通过network的ip访问.html.js",dataFileChunkName:"v-1f086782",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Vue/通过network的ip访问.html",htmlFilePathRelative:"Vue/通过network的ip访问.html"},{data:{key:"v-67bdf7e9",path:"/Other/ABAQUS/ABAQUS%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84Mask%E6%8E%A9%E7%A0%81%E6%96%B9%E5%BC%8F%E7%B4%A2%E5%BC%95.html",title:"ABAQUS二次开发中的Mask掩码方式索引",lang:"zh-CN",frontmatter:{date:"2022/4/4 20:08",coverUrl:"/pic/9.jpg",stick:!1,keyword:"ABAQUS,二次开发,Mask掩码，索引",description:"ABAQUS二次开发中的Mask掩码方式索引",title:"ABAQUS二次开发中的Mask掩码方式索引",tag:["ABAQUS","二次开发","Mask掩码，索引"],categories:["ABAQUS","二次开发","Mask掩码，索引"]},excerpt:"",headers:[{level:2,title:"✨ABAQUS二次开发中的Mask掩码方式索引✨",slug:"✨abaqus二次开发中的mask掩码方式索引✨",children:[{level:3,title:"Mask掩码方式索引介绍：",slug:"mask掩码方式索引介绍",children:[]},{level:3,title:"三种索引方式",slug:"三种索引方式",children:[]},{level:3,title:"索引号切换方式",slug:"索引号切换方式",children:[]},{level:3,title:"注意",slug:"注意",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-67bdf7e9",path:"/Other/ABAQUS/ABAQUS%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84Mask%E6%8E%A9%E7%A0%81%E6%96%B9%E5%BC%8F%E7%B4%A2%E5%BC%95.html",title:"ABAQUS二次开发中的Mask掩码方式索引",lang:"zh-CN",frontmatter:{date:"2022/4/4 20:08",coverUrl:"/pic/9.jpg",stick:!1,keyword:"ABAQUS,二次开发,Mask掩码，索引",description:"ABAQUS二次开发中的Mask掩码方式索引",title:"ABAQUS二次开发中的Mask掩码方式索引",tag:["ABAQUS","二次开发","Mask掩码，索引"],categories:["ABAQUS","二次开发","Mask掩码，索引"]},excerpt:"",headers:[{level:2,title:"✨ABAQUS二次开发中的Mask掩码方式索引✨",slug:"✨abaqus二次开发中的mask掩码方式索引✨",children:[{level:3,title:"Mask掩码方式索引介绍：",slug:"mask掩码方式索引介绍",children:[]},{level:3,title:"三种索引方式",slug:"三种索引方式",children:[]},{level:3,title:"索引号切换方式",slug:"索引号切换方式",children:[]},{level:3,title:"注意",slug:"注意",children:[]}]}],content:"\r\n## ✨ABAQUS二次开发中的Mask掩码方式索引✨\r\n\r\n### Mask掩码方式索引介绍：\r\n在做ABAQUS二次开发时，借助rpy文件进行参考，是一个很好的开发方式，但在使用中会发现对一个线、面、体等几何特征索引时，出现的表现方式总是用#号开头的字母数字表示的。\r\n比如：\r\n~~~ python\r\n    f1 = a.instances['Part-rigid-1'].faces\r\n    faces1 = f1.getSequenceFromMask(mask=('[#20]',),)\r\n~~~\r\n其中，getSequenceFromMask方法就是获取Abaqus Cae中选取的线、面、体等几何特征。里面给出的是掩码编码，是为了数据安全的一种掩码，一般不具备通用性，在参数化建模时应尽量避免使用它。\r\n\r\n### 三种索引方式\r\n其实ABAQUS提供了三种对单个对象或者多个对象的索引方式：\r\n1. getSequenceFromMask的方式（默认的方式）\r\n提供掩码数据\r\n2. findAt()+坐标值的方式\r\n提供精确的坐标数据\r\n3. 元素实际索引号的方式\r\n提供精确的单元索引号\r\n\r\n### 索引号切换方式\r\n1. 在命令交互行（Abaqus/CAE最下方）输入以下指令：\r\n```python\r\nsession.journalOptions.setValues(replayGeometry=COORDINATE,recoverGeometry= COORDINATE)\r\n```\r\n这种方式在rpy文件中输出的索引格式为findAt()+坐标值，即第二种方式。\r\n\r\n2. 在命令交互行（Abaqus/CAE最下方）输入以下指令 ：\r\n```python\r\nsession.journalOptions.setValues(replayGeometry=INDEX,recoverGeometry=INDEX\r\n```\r\n该方式会以元素的实际索引号作为对象的索引方式，即第三种方式。\r\n\r\n\r\n### 注意\r\n- 在二次开发参数化建模的脚本过程中，如果模型简单且使用Mask建模不出错的情况下，就可以使用默认的Mask掩码方式（因为使用的Mask掩码没有那么精确，刚好和新的模型选中相同的几何特征）\r\n- 如果使用了Mask掩码方式，需要注意是否会选择错误的几何特性，可能会导致建模错误\r\n- 建议使用第二种findAt()+坐标值的方式来进行索引和参数化建模\r\n- 在做二次开发的时候可以切换一下索引方式，看起来会更方便，索引更准确",contentRendered:'<h2 id="✨abaqus二次开发中的mask掩码方式索引✨" tabindex="-1"><a class="header-anchor" href="#✨abaqus二次开发中的mask掩码方式索引✨" aria-hidden="true">#</a> ✨ABAQUS二次开发中的Mask掩码方式索引✨</h2>\n<h3 id="mask掩码方式索引介绍" tabindex="-1"><a class="header-anchor" href="#mask掩码方式索引介绍" aria-hidden="true">#</a> Mask掩码方式索引介绍：</h3>\n<p>在做ABAQUS二次开发时，借助rpy文件进行参考，是一个很好的开发方式，但在使用中会发现对一个线、面、体等几何特征索引时，出现的表现方式总是用#号开头的字母数字表示的。\n比如：</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>    f1 <span class="token operator">=</span> a<span class="token punctuation">.</span>instances<span class="token punctuation">[</span><span class="token string">\'Part-rigid-1\'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>faces\n    faces1 <span class="token operator">=</span> f1<span class="token punctuation">.</span>getSequenceFromMask<span class="token punctuation">(</span>mask<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">\'[#20]\'</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>其中，getSequenceFromMask方法就是获取Abaqus Cae中选取的线、面、体等几何特征。里面给出的是掩码编码，是为了数据安全的一种掩码，一般不具备通用性，在参数化建模时应尽量避免使用它。</p>\n<h3 id="三种索引方式" tabindex="-1"><a class="header-anchor" href="#三种索引方式" aria-hidden="true">#</a> 三种索引方式</h3>\n<p>其实ABAQUS提供了三种对单个对象或者多个对象的索引方式：</p>\n<ol>\n<li>getSequenceFromMask的方式（默认的方式）\n提供掩码数据</li>\n<li>findAt()+坐标值的方式\n提供精确的坐标数据</li>\n<li>元素实际索引号的方式\n提供精确的单元索引号</li>\n</ol>\n<h3 id="索引号切换方式" tabindex="-1"><a class="header-anchor" href="#索引号切换方式" aria-hidden="true">#</a> 索引号切换方式</h3>\n<ol>\n<li>在命令交互行（Abaqus/CAE最下方）输入以下指令：</li>\n</ol>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>session<span class="token punctuation">.</span>journalOptions<span class="token punctuation">.</span>setValues<span class="token punctuation">(</span>replayGeometry<span class="token operator">=</span>COORDINATE<span class="token punctuation">,</span>recoverGeometry<span class="token operator">=</span> COORDINATE<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>这种方式在rpy文件中输出的索引格式为findAt()+坐标值，即第二种方式。</p>\n<ol start="2">\n<li>在命令交互行（Abaqus/CAE最下方）输入以下指令 ：</li>\n</ol>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>session<span class="token punctuation">.</span>journalOptions<span class="token punctuation">.</span>setValues<span class="token punctuation">(</span>replayGeometry<span class="token operator">=</span>INDEX<span class="token punctuation">,</span>recoverGeometry<span class="token operator">=</span>INDEX\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>该方式会以元素的实际索引号作为对象的索引方式，即第三种方式。</p>\n<h3 id="注意" tabindex="-1"><a class="header-anchor" href="#注意" aria-hidden="true">#</a> 注意</h3>\n<ul>\n<li>在二次开发参数化建模的脚本过程中，如果模型简单且使用Mask建模不出错的情况下，就可以使用默认的Mask掩码方式（因为使用的Mask掩码没有那么精确，刚好和新的模型选中相同的几何特征）</li>\n<li>如果使用了Mask掩码方式，需要注意是否会选择错误的几何特性，可能会导致建模错误</li>\n<li>建议使用第二种findAt()+坐标值的方式来进行索引和参数化建模</li>\n<li>在做二次开发的时候可以切换一下索引方式，看起来会更方便，索引更准确</li>\n</ul>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Other/ABAQUS/ABAQUS二次开发中的Mask掩码方式索引.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"ABAQUS二次开发中的Mask掩码方式索引",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Other/ABAQUS/ABAQUS二次开发中的Mask掩码方式索引.md",filePathRelative:"Other/ABAQUS/ABAQUS二次开发中的Mask掩码方式索引.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Other/ABAQUS/ABAQUS二次开发中的Mask掩码方式索引.html.vue",componentFilePathRelative:"pages/Other/ABAQUS/ABAQUS二次开发中的Mask掩码方式索引.html.vue",componentFileChunkName:"v-67bdf7e9",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Other/ABAQUS/ABAQUS二次开发中的Mask掩码方式索引.html.js",dataFilePathRelative:"pages/Other/ABAQUS/ABAQUS二次开发中的Mask掩码方式索引.html.js",dataFileChunkName:"v-67bdf7e9",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Other/ABAQUS/ABAQUS二次开发中的Mask掩码方式索引.html",htmlFilePathRelative:"Other/ABAQUS/ABAQUS二次开发中的Mask掩码方式索引.html"},{data:{key:"v-09e1915c",path:"/Other/ABAQUS/Simulation%20platform.html",title:"Simulation platform",lang:"zh-CN",frontmatter:{date:"2022/2/2 22:00",coverUrl:"/pic/3.jpg",stick:!0,keyword:"Simulation, platform",description:"Simulation platform",title:"Simulation platform",tag:["Platform","ABAQUS","Simulation"],categories:["Platform","ABAQUS","Simulation"]},excerpt:"",headers:[{level:2,title:"✨基于ABAQUS二次开发的仿真分析平台✨",slug:"✨基于abaqus二次开发的仿真分析平台✨",children:[{level:3,title:"技术栈",slug:"技术栈",children:[]},{level:3,title:"ABAQUS有限元仿真技术",slug:"abaqus有限元仿真技术",children:[]},{level:3,title:"基于ABAQUS的二次开发",slug:"基于abaqus的二次开发",children:[]},{level:3,title:"平台开发",slug:"平台开发",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-09e1915c",path:"/Other/ABAQUS/Simulation%20platform.html",title:"Simulation platform",lang:"zh-CN",frontmatter:{date:"2022/2/2 22:00",coverUrl:"/pic/3.jpg",stick:!0,keyword:"Simulation, platform",description:"Simulation platform",title:"Simulation platform",tag:["Platform","ABAQUS","Simulation"],categories:["Platform","ABAQUS","Simulation"]},excerpt:"",headers:[{level:2,title:"✨基于ABAQUS二次开发的仿真分析平台✨",slug:"✨基于abaqus二次开发的仿真分析平台✨",children:[{level:3,title:"技术栈",slug:"技术栈",children:[]},{level:3,title:"ABAQUS有限元仿真技术",slug:"abaqus有限元仿真技术",children:[]},{level:3,title:"基于ABAQUS的二次开发",slug:"基于abaqus的二次开发",children:[]},{level:3,title:"平台开发",slug:"平台开发",children:[]}]}],content:"\r\n## ✨基于ABAQUS二次开发的仿真分析平台✨\r\n\r\n\r\n1.  **随着近年来计算机领域里程碑式的进步，计算机软件市场的迅速扩张，推出了许多功能强大的计算机仿真软件。ABAQUS有限元仿真分析软件则是其中的翘楚，作为应用广泛、普及率高、分析模块众多且功能强大的有限元仿真分析软件，它不但可以针对模型中的某个具体部件某项性能进行仿真分析，同时还可以对整个模型甚至系统进行多场耦合分析。**\r\n2.  **ABAQUS可以发挥其优秀的仿真计算功能，借助有限元仿真软件对其进行模型设计与分析，得出仿真后的运动情况和各种输出的结果，将仿真计算结果和设计指标进行对比分析，再对模型的结构和关键尺寸进行优化设计，以达到设计要求。**\r\n3. **然而，掌握有限元仿真软件分析流程，需要研究人员投入大量的经历去学习研究，如果让不熟悉有限元软件操作，且对机械设计有许多经验的资深工程师深入学习，则会花费大量时间和经历再仿真软件的基本操作学习上面，导致项目周期增长，非常不利于研发效率的提高。**\r\n4. **因此，以ABAQUS有限元仿真分析软件为例。ABAQUS开放了许多接口并且拥有丰富的接口文档，如果利用其开放的接口开发一个适用于多种仿真需求的仿真分析平台，实现对有限元模型分析条件的自动化设置，数据与结果的自动储存，这对减少冲压成形模具的设计周期，提升研发人员的工作效率，实现研发流程的自动化有着重大的意义。**\r\n\r\n### 技术栈\r\n\r\n- ABAQUS有限元仿真技术\r\n- 基于ABAQUS的二次开发\r\n- 仿真平台：Vue+Node.js+Mongodb\r\n\r\n### ABAQUS有限元仿真技术\r\n- ABAQUS理论基础\r\n- 有限元分析原理\r\n- 有限元仿真操作\r\n\r\n\r\n### 基于ABAQUS的二次开发\r\n\r\n- Python基础\r\n- ABAQUS二次开发理论\r\n- 仿真脚本的二次开发\r\n- 仿真分析功能的实现\r\n\r\n### 平台开发\r\n\r\n> **仿真分析平台的开发主要技术栈：Vue+Node.js+Mongodb**\r\n\r\n#### 平台前端开发\r\n\r\n- 登录页、主页、操作手册页、使用须知页、仿真计算页、结果页\r\n- 后台：仿真数据页、仿真结果页、用户数据页\r\n- 通过Element ui组件库搭建前端页面\r\n- 用户登录、上传信息、下载结果等功能\r\n\r\n#### 平台后端开发\r\n\r\n- 通过Node.js搭建平台后端\r\n- 使用Express框架进行中间件开发\r\n- 后台获取前端数据，运行仿真脚本\r\n- 连接Mongodb数据库，存储仿真数据与结果\r\n- 对仿真数据、结果、用户等数据进行增删改查\r\n\r\n> **平台的操作流程：阅读使用方法=>输入参数=>导入模型=>仿真计算=>查看计算结果=>对比结果=>重复操作**\r\n\r\n- **[平台展示页面](https://tangctt.github.io/simulation-platform/)（去除用户模块，仅供展示），或浏览`https://tangctt.github.io/simulation-platform/`**\r\n\r\n- **更多详细内容与功能仍在开发之中...**\r\n",contentRendered:'<h2 id="✨基于abaqus二次开发的仿真分析平台✨" tabindex="-1"><a class="header-anchor" href="#✨基于abaqus二次开发的仿真分析平台✨" aria-hidden="true">#</a> ✨基于ABAQUS二次开发的仿真分析平台✨</h2>\n<ol>\n<li><strong>随着近年来计算机领域里程碑式的进步，计算机软件市场的迅速扩张，推出了许多功能强大的计算机仿真软件。ABAQUS有限元仿真分析软件则是其中的翘楚，作为应用广泛、普及率高、分析模块众多且功能强大的有限元仿真分析软件，它不但可以针对模型中的某个具体部件某项性能进行仿真分析，同时还可以对整个模型甚至系统进行多场耦合分析。</strong></li>\n<li><strong>ABAQUS可以发挥其优秀的仿真计算功能，借助有限元仿真软件对其进行模型设计与分析，得出仿真后的运动情况和各种输出的结果，将仿真计算结果和设计指标进行对比分析，再对模型的结构和关键尺寸进行优化设计，以达到设计要求。</strong></li>\n<li><strong>然而，掌握有限元仿真软件分析流程，需要研究人员投入大量的经历去学习研究，如果让不熟悉有限元软件操作，且对机械设计有许多经验的资深工程师深入学习，则会花费大量时间和经历再仿真软件的基本操作学习上面，导致项目周期增长，非常不利于研发效率的提高。</strong></li>\n<li><strong>因此，以ABAQUS有限元仿真分析软件为例。ABAQUS开放了许多接口并且拥有丰富的接口文档，如果利用其开放的接口开发一个适用于多种仿真需求的仿真分析平台，实现对有限元模型分析条件的自动化设置，数据与结果的自动储存，这对减少冲压成形模具的设计周期，提升研发人员的工作效率，实现研发流程的自动化有着重大的意义。</strong></li>\n</ol>\n<h3 id="技术栈" tabindex="-1"><a class="header-anchor" href="#技术栈" aria-hidden="true">#</a> 技术栈</h3>\n<ul>\n<li>ABAQUS有限元仿真技术</li>\n<li>基于ABAQUS的二次开发</li>\n<li>仿真平台：Vue+Node.js+Mongodb</li>\n</ul>\n<h3 id="abaqus有限元仿真技术" tabindex="-1"><a class="header-anchor" href="#abaqus有限元仿真技术" aria-hidden="true">#</a> ABAQUS有限元仿真技术</h3>\n<ul>\n<li>ABAQUS理论基础</li>\n<li>有限元分析原理</li>\n<li>有限元仿真操作</li>\n</ul>\n<h3 id="基于abaqus的二次开发" tabindex="-1"><a class="header-anchor" href="#基于abaqus的二次开发" aria-hidden="true">#</a> 基于ABAQUS的二次开发</h3>\n<ul>\n<li>Python基础</li>\n<li>ABAQUS二次开发理论</li>\n<li>仿真脚本的二次开发</li>\n<li>仿真分析功能的实现</li>\n</ul>\n<h3 id="平台开发" tabindex="-1"><a class="header-anchor" href="#平台开发" aria-hidden="true">#</a> 平台开发</h3>\n<blockquote>\n<p><strong>仿真分析平台的开发主要技术栈：Vue+Node.js+Mongodb</strong></p>\n</blockquote>\n<h4 id="平台前端开发" tabindex="-1"><a class="header-anchor" href="#平台前端开发" aria-hidden="true">#</a> 平台前端开发</h4>\n<ul>\n<li>登录页、主页、操作手册页、使用须知页、仿真计算页、结果页</li>\n<li>后台：仿真数据页、仿真结果页、用户数据页</li>\n<li>通过Element ui组件库搭建前端页面</li>\n<li>用户登录、上传信息、下载结果等功能</li>\n</ul>\n<h4 id="平台后端开发" tabindex="-1"><a class="header-anchor" href="#平台后端开发" aria-hidden="true">#</a> 平台后端开发</h4>\n<ul>\n<li>通过Node.js搭建平台后端</li>\n<li>使用Express框架进行中间件开发</li>\n<li>后台获取前端数据，运行仿真脚本</li>\n<li>连接Mongodb数据库，存储仿真数据与结果</li>\n<li>对仿真数据、结果、用户等数据进行增删改查</li>\n</ul>\n<blockquote>\n<p><strong>平台的操作流程：阅读使用方法=&gt;输入参数=&gt;导入模型=&gt;仿真计算=&gt;查看计算结果=&gt;对比结果=&gt;重复操作</strong></p>\n</blockquote>\n<ul>\n<li>\n<p><strong><a href="https://tangctt.github.io/simulation-platform/" target="_blank" rel="noopener noreferrer">平台展示页面<ExternalLinkIcon/></a>（去除用户模块，仅供展示），或浏览<code>https://tangctt.github.io/simulation-platform/</code></strong></p>\n</li>\n<li>\n<p><strong>更多详细内容与功能仍在开发之中...</strong></p>\n</li>\n</ul>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Other/ABAQUS/Simulation platform.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"Simulation platform",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Other/ABAQUS/Simulation platform.md",filePathRelative:"Other/ABAQUS/Simulation platform.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Other/ABAQUS/Simulation platform.html.vue",componentFilePathRelative:"pages/Other/ABAQUS/Simulation platform.html.vue",componentFileChunkName:"v-09e1915c",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Other/ABAQUS/Simulation platform.html.js",dataFilePathRelative:"pages/Other/ABAQUS/Simulation platform.html.js",dataFileChunkName:"v-09e1915c",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Other/ABAQUS/Simulation platform.html",htmlFilePathRelative:"Other/ABAQUS/Simulation platform.html"},{data:{key:"v-d72b840a",path:"/Other/Python/%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%89%A7%E8%A1%8Cpython%E8%84%9A%E6%9C%AC%E7%9A%84%E4%BC%A0%E5%8F%82%E6%96%B9%E5%BC%8F.html",title:"命令行执行Python脚本的传参方式",lang:"zh-CN",frontmatter:{date:"2022/4/24 16:08",coverUrl:"/pic/9.jpg",stick:!1,keyword:"Python,命令行,传参",description:"命令行执行Python脚本的传参方式",title:"命令行执行Python脚本的传参方式",tag:["Python","命令行","传参"],categories:["Python","命令行","传参"]},excerpt:"",headers:[{level:2,title:"✨命令行执行Python脚本的传参方式✨",slug:"✨命令行执行python脚本的传参方式✨",children:[{level:3,title:"应用场景",slug:"应用场景",children:[]},{level:3,title:"方式一",slug:"方式一",children:[]},{level:3,title:"方式二",slug:"方式二",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-d72b840a",path:"/Other/Python/%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%89%A7%E8%A1%8Cpython%E8%84%9A%E6%9C%AC%E7%9A%84%E4%BC%A0%E5%8F%82%E6%96%B9%E5%BC%8F.html",title:"命令行执行Python脚本的传参方式",lang:"zh-CN",frontmatter:{date:"2022/4/24 16:08",coverUrl:"/pic/9.jpg",stick:!1,keyword:"Python,命令行,传参",description:"命令行执行Python脚本的传参方式",title:"命令行执行Python脚本的传参方式",tag:["Python","命令行","传参"],categories:["Python","命令行","传参"]},excerpt:"",headers:[{level:2,title:"✨命令行执行Python脚本的传参方式✨",slug:"✨命令行执行python脚本的传参方式✨",children:[{level:3,title:"应用场景",slug:"应用场景",children:[]},{level:3,title:"方式一",slug:"方式一",children:[]},{level:3,title:"方式二",slug:"方式二",children:[]}]}],content:"\r\n\r\n## ✨命令行执行Python脚本的传参方式✨\r\n\r\n### 应用场景\r\n- 在对ABAQUS进行二次开发时，需要将核心脚本的外部数据传递到脚本内部并执行\r\n- 核心脚本在运行时，可以调用所传递的变量参数\r\n- 命令行执行或者用户子程序执行\r\n\r\n### 方式一\r\n\r\n#### 使用sys.args\r\n\r\n#### 简单示例\r\n```python\r\nimport sys\r\n\r\ndef test_sys_args():\r\n    if len(sys.argv) > 1:\r\n        print(len(sys.argv) - 1)\r\n        print(sys.argv)\r\n    else:\r\n        print('无参数输入')\r\nif __name__ == '__main__':\r\n    test_sys_args()\r\n```\r\n\r\n#### 执行\r\n`python test.py a 1 test`\r\n- 脚本文件名后面的是需要传递的参数\r\n- 其它参数在命令行中传入时需要用空格分开\r\n- 若参数中需要包含“”，则需要使用到转义字符\\进行转义\r\n\r\n#### 输出结果\r\n```python\r\n3\r\n['test.py', 'a', '1', 'test']\r\n```\r\n- 3代表着传递参数的数量\r\n- sys.args实现从程序外部向程序传递参数，它的值是一个列表list，其中保存了通过命令行传递的各个参数\r\n- 输出sys.argv[0],即为第一个参数，是脚本本身\r\n- sys.argv[1]的输出结果为a\r\n\r\n> 所以在二次开发的仿真脚本中，使用子程序进或命令行运行脚本，且需要使用此种方式进行传参时，需要将变量及其参数一并传递，具体使用方式如下\r\n\r\n```python\r\n#执行脚本\r\nchild_process.exec(command val1=1 val2=2 val3=3)\r\n```\r\n\r\n\r\n脚本内部\r\n`sys.argv[1]`输出结果为`val1=1`\r\n- 满足脚本对的变量需求，成功将脚本外的参数传递到脚本内\r\n\r\n\r\n### 方式二\r\n\r\n#### 创建独立脚本参数文件\r\n\r\n- 使用node.js的文本操作`fs`模块\r\n- 在`python`的运行目录下创建单独的变量数据`txt`文件夹\r\n- 先读取变量数据，然后将变量根据格式拼接，最后将其写入单独的文本文件\r\n- 在执行`python`脚本时，只需在脚本中运行目录下的文本文件，就完成了参数的传递工作\r\n\r\n#### 如下所示\r\n\r\n#### node.js后端\r\n```javascript\r\nvar fs = require('fs')\r\n\r\nfs.writeFile('test.txt', _registerMsg, function (err) {\r\n\r\n        if (err) {\r\n            return console.log(err);\r\n        } else {\r\n            // 变量文件创建成功后，执行核心计算脚本\r\n            exec(\"abaqus cae nogui=abaqus.py\", function (error, stdout, stderr) {\r\n                if (stdout.length > 1) {\r\n                    // 计算成功\r\n                    console.log('you offer args:', stdout);\r\n                } else {\r\n                    // 计算失败\r\n                    console.log('you don\\'t offer args');\r\n                }\r\n                if (error) {\r\n                    console.info('stderr : ' + stderr);\r\n                }\r\n            })\r\n\r\n        }\r\n    })\r\n```\r\n> 脚本所需参数已经提前拼接并写入到`_registerMsg`变量中\r\n\r\n#### python脚本\r\n```python\r\nimport io\r\nwith io.open(\"test.txt\", encoding='utf-8') as f:\r\n    code = f.read()\r\nexec(code)\r\n```\r\n> 脚本只需打开同目录下的参数文件并执行，即可将参数传递到脚本中\r\n\r\n#### 两种方式的优缺点\r\n- 第一种方式能够对每个参数进行单独读取，但是也需要进行单独输出\r\n- 当需要传递参数较多时，每次运行脚本都要进行输入，工作量较大\r\n- 第二种方式将参数进行了集成，只需调整脚本中的变量，集合进行参数的修改\r\n- 在面向较多的参数时便于对参数的操作，能够提升效率",contentRendered:'<h2 id="✨命令行执行python脚本的传参方式✨" tabindex="-1"><a class="header-anchor" href="#✨命令行执行python脚本的传参方式✨" aria-hidden="true">#</a> ✨命令行执行Python脚本的传参方式✨</h2>\n<h3 id="应用场景" tabindex="-1"><a class="header-anchor" href="#应用场景" aria-hidden="true">#</a> 应用场景</h3>\n<ul>\n<li>在对ABAQUS进行二次开发时，需要将核心脚本的外部数据传递到脚本内部并执行</li>\n<li>核心脚本在运行时，可以调用所传递的变量参数</li>\n<li>命令行执行或者用户子程序执行</li>\n</ul>\n<h3 id="方式一" tabindex="-1"><a class="header-anchor" href="#方式一" aria-hidden="true">#</a> 方式一</h3>\n<h4 id="使用sys-args" tabindex="-1"><a class="header-anchor" href="#使用sys-args" aria-hidden="true">#</a> 使用sys.args</h4>\n<h4 id="简单示例" tabindex="-1"><a class="header-anchor" href="#简单示例" aria-hidden="true">#</a> 简单示例</h4>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">import</span> sys\n\n<span class="token keyword">def</span> <span class="token function">test_sys_args</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">:</span>\n        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>\n        <span class="token keyword">print</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>\n    <span class="token keyword">else</span><span class="token punctuation">:</span>\n        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">\'无参数输入\'</span><span class="token punctuation">)</span>\n<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">\'__main__\'</span><span class="token punctuation">:</span>\n    test_sys_args<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h4 id="执行" tabindex="-1"><a class="header-anchor" href="#执行" aria-hidden="true">#</a> 执行</h4>\n<p><code>python test.py a 1 test</code></p>\n<ul>\n<li>脚本文件名后面的是需要传递的参数</li>\n<li>其它参数在命令行中传入时需要用空格分开</li>\n<li>若参数中需要包含“”，则需要使用到转义字符\\进行转义</li>\n</ul>\n<h4 id="输出结果" tabindex="-1"><a class="header-anchor" href="#输出结果" aria-hidden="true">#</a> 输出结果</h4>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token number">3</span>\n<span class="token punctuation">[</span><span class="token string">\'test.py\'</span><span class="token punctuation">,</span> <span class="token string">\'a\'</span><span class="token punctuation">,</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span> <span class="token string">\'test\'</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul>\n<li>3代表着传递参数的数量</li>\n<li>sys.args实现从程序外部向程序传递参数，它的值是一个列表list，其中保存了通过命令行传递的各个参数</li>\n<li>输出sys.argv[0],即为第一个参数，是脚本本身</li>\n<li>sys.argv[1]的输出结果为a</li>\n</ul>\n<blockquote>\n<p>所以在二次开发的仿真脚本中，使用子程序进或命令行运行脚本，且需要使用此种方式进行传参时，需要将变量及其参数一并传递，具体使用方式如下</p>\n</blockquote>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token comment">#执行脚本</span>\nchild_process<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span>command val1<span class="token operator">=</span><span class="token number">1</span> val2<span class="token operator">=</span><span class="token number">2</span> val3<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>脚本内部\n<code>sys.argv[1]</code>输出结果为<code>val1=1</code></p>\n<ul>\n<li>满足脚本对的变量需求，成功将脚本外的参数传递到脚本内</li>\n</ul>\n<h3 id="方式二" tabindex="-1"><a class="header-anchor" href="#方式二" aria-hidden="true">#</a> 方式二</h3>\n<h4 id="创建独立脚本参数文件" tabindex="-1"><a class="header-anchor" href="#创建独立脚本参数文件" aria-hidden="true">#</a> 创建独立脚本参数文件</h4>\n<ul>\n<li>使用node.js的文本操作<code>fs</code>模块</li>\n<li>在<code>python</code>的运行目录下创建单独的变量数据<code>txt</code>文件夹</li>\n<li>先读取变量数据，然后将变量根据格式拼接，最后将其写入单独的文本文件</li>\n<li>在执行<code>python</code>脚本时，只需在脚本中运行目录下的文本文件，就完成了参数的传递工作</li>\n</ul>\n<h4 id="如下所示" tabindex="-1"><a class="header-anchor" href="#如下所示" aria-hidden="true">#</a> 如下所示</h4>\n<h4 id="node-js后端" tabindex="-1"><a class="header-anchor" href="#node-js后端" aria-hidden="true">#</a> node.js后端</h4>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'fs\'</span><span class="token punctuation">)</span>\n\nfs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">\'test.txt\'</span><span class="token punctuation">,</span> _registerMsg<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 变量文件创建成功后，执行核心计算脚本</span>\n            <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"abaqus cae nogui=abaqus.py"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>stdout<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token comment">// 计算成功</span>\n                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'you offer args:\'</span><span class="token punctuation">,</span> stdout<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                    <span class="token comment">// 计算失败</span>\n                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'you don\\\'t offer args\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">\'stderr : \'</span> <span class="token operator">+</span> stderr<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><blockquote>\n<p>脚本所需参数已经提前拼接并写入到<code>_registerMsg</code>变量中</p>\n</blockquote>\n<h4 id="python脚本" tabindex="-1"><a class="header-anchor" href="#python脚本" aria-hidden="true">#</a> python脚本</h4>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">import</span> io\n<span class="token keyword">with</span> io<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"test.txt"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">\'utf-8\'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>\n    code <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">exec</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote>\n<p>脚本只需打开同目录下的参数文件并执行，即可将参数传递到脚本中</p>\n</blockquote>\n<h4 id="两种方式的优缺点" tabindex="-1"><a class="header-anchor" href="#两种方式的优缺点" aria-hidden="true">#</a> 两种方式的优缺点</h4>\n<ul>\n<li>第一种方式能够对每个参数进行单独读取，但是也需要进行单独输出</li>\n<li>当需要传递参数较多时，每次运行脚本都要进行输入，工作量较大</li>\n<li>第二种方式将参数进行了集成，只需调整脚本中的变量，集合进行参数的修改</li>\n<li>在面向较多的参数时便于对参数的操作，能够提升效率</li>\n</ul>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Other/Python/命令行执行python脚本的传参方式.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"命令行执行python脚本的传参方式",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Other/Python/命令行执行python脚本的传参方式.md",filePathRelative:"Other/Python/命令行执行python脚本的传参方式.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Other/Python/命令行执行python脚本的传参方式.html.vue",componentFilePathRelative:"pages/Other/Python/命令行执行python脚本的传参方式.html.vue",componentFileChunkName:"v-d72b840a",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Other/Python/命令行执行python脚本的传参方式.html.js",dataFilePathRelative:"pages/Other/Python/命令行执行python脚本的传参方式.html.js",dataFileChunkName:"v-d72b840a",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Other/Python/命令行执行python脚本的传参方式.html",htmlFilePathRelative:"Other/Python/命令行执行python脚本的传参方式.html"},{data:{key:"v-e44ed9cc",path:"/T-zone/life/%E6%B5%AE%E7%94%9F%E4%B8%80%E8%AE%B0(1)-%E9%80%89%E6%8B%A9.html",title:"浮生一记（1）-选择",lang:"zh-CN",frontmatter:{date:"2022/4/10 10:08",coverUrl:"/pic/11.jpg",stick:!1,keyword:"浮生一记，选择",description:"浮生一记（1）-选择",title:"浮生一记（1）-选择",tag:["浮生一记，选择"],categories:["浮生一记，选择"]},excerpt:"",headers:[{level:2,title:"✨浮生一记（1）-选择✨",slug:"✨浮生一记-1-选择✨",children:[{level:3,title:"选择的意义🚥",slug:"选择的意义🚥",children:[]},{level:3,title:"拥有选择🌈",slug:"拥有选择🌈",children:[]},{level:3,title:"如何选择🌠",slug:"如何选择🌠",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-e44ed9cc",path:"/T-zone/life/%E6%B5%AE%E7%94%9F%E4%B8%80%E8%AE%B0(1)-%E9%80%89%E6%8B%A9.html",title:"浮生一记（1）-选择",lang:"zh-CN",frontmatter:{date:"2022/4/10 10:08",coverUrl:"/pic/11.jpg",stick:!1,keyword:"浮生一记，选择",description:"浮生一记（1）-选择",title:"浮生一记（1）-选择",tag:["浮生一记，选择"],categories:["浮生一记，选择"]},excerpt:"",headers:[{level:2,title:"✨浮生一记（1）-选择✨",slug:"✨浮生一记-1-选择✨",children:[{level:3,title:"选择的意义🚥",slug:"选择的意义🚥",children:[]},{level:3,title:"拥有选择🌈",slug:"拥有选择🌈",children:[]},{level:3,title:"如何选择🌠",slug:"如何选择🌠",children:[]}]}],content:"\r\n## ✨浮生一记（1）-选择✨\r\n\r\n### 选择的意义🚥\r\n- 生活中无处不在的各种选择\r\n- 你选择如何度过自己大把的时间\r\n- 你选择值得去做的事和值得交的朋友\r\n- 你选择你想要的生活，选择你要爱的人\r\n\r\n### 拥有选择🌈\r\n> 如果你能选择做某件事，那你已经成功了一半。大多数我们都是被迫做出选择，选择我们不想要的、讨厌的甚至违心的。大多数情况下，我们没有选择的余地，而是随波逐流...\r\n- 拥有选择的权利，已是我们的奢求\r\n- 被迫的选择不是选择，那是妥协\r\n- 向生活低头，便也失去了选择\r\n\r\n``` python\r\n人这一生，能选择的，只有两件事...\r\n这一生怎么爱\r\n这一生怎么活\r\n                                ————王小波\r\n```\r\n\r\n### 如何选择🌠\r\n> 与其说是选择，不如说是放弃，当你做出了某个选择意味着你放弃了其它选择。选择只能有一个，但放弃的有很多。学会放弃才是做出最好选择的第一步\r\n- 你放弃了大城市的欲望生活，必定要降低物质的需求\r\n- 你放弃了小城市的安逸生活，必定要承受工作的压力\r\n- 遵循自己内心的想法，做出不后悔的选择\r\n- 无法选择的事，就随便它去吧...\r\n\r\n\r\n``` py\r\nWhen you have the courage to make a choice, \r\nit's the highlight of your life！🚀🚀🚀\r\n```\r\n\r\n\r\n\r\n\r\n\r\n",contentRendered:'<h2 id="✨浮生一记-1-选择✨" tabindex="-1"><a class="header-anchor" href="#✨浮生一记-1-选择✨" aria-hidden="true">#</a> ✨浮生一记（1）-选择✨</h2>\n<h3 id="选择的意义🚥" tabindex="-1"><a class="header-anchor" href="#选择的意义🚥" aria-hidden="true">#</a> 选择的意义🚥</h3>\n<ul>\n<li>生活中无处不在的各种选择</li>\n<li>你选择如何度过自己大把的时间</li>\n<li>你选择值得去做的事和值得交的朋友</li>\n<li>你选择你想要的生活，选择你要爱的人</li>\n</ul>\n<h3 id="拥有选择🌈" tabindex="-1"><a class="header-anchor" href="#拥有选择🌈" aria-hidden="true">#</a> 拥有选择🌈</h3>\n<blockquote>\n<p>如果你能选择做某件事，那你已经成功了一半。大多数我们都是被迫做出选择，选择我们不想要的、讨厌的甚至违心的。大多数情况下，我们没有选择的余地，而是随波逐流...</p>\n</blockquote>\n<ul>\n<li>拥有选择的权利，已是我们的奢求</li>\n<li>被迫的选择不是选择，那是妥协</li>\n<li>向生活低头，便也失去了选择</li>\n</ul>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>人这一生，能选择的，只有两件事<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n这一生怎么爱\n这一生怎么活\n                                ————王小波\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="如何选择🌠" tabindex="-1"><a class="header-anchor" href="#如何选择🌠" aria-hidden="true">#</a> 如何选择🌠</h3>\n<blockquote>\n<p>与其说是选择，不如说是放弃，当你做出了某个选择意味着你放弃了其它选择。选择只能有一个，但放弃的有很多。学会放弃才是做出最好选择的第一步</p>\n</blockquote>\n<ul>\n<li>你放弃了大城市的欲望生活，必定要降低物质的需求</li>\n<li>你放弃了小城市的安逸生活，必定要承受工作的压力</li>\n<li>遵循自己内心的想法，做出不后悔的选择</li>\n<li>无法选择的事，就随便它去吧...</li>\n</ul>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>When you have the courage to make a choice<span class="token punctuation">,</span> \nit\'s the highlight of your life！🚀🚀🚀\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/T-zone/life/浮生一记(1)-选择.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"浮生一记(1)-选择",filePath:"C:/Users/67099/Desktop/blog-demo/docs/T-zone/life/浮生一记(1)-选择.md",filePathRelative:"T-zone/life/浮生一记(1)-选择.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/T-zone/life/浮生一记(1)-选择.html.vue",componentFilePathRelative:"pages/T-zone/life/浮生一记(1)-选择.html.vue",componentFileChunkName:"v-e44ed9cc",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/T-zone/life/浮生一记(1)-选择.html.js",dataFilePathRelative:"pages/T-zone/life/浮生一记(1)-选择.html.js",dataFileChunkName:"v-e44ed9cc",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/T-zone/life/浮生一记(1)-选择.html",htmlFilePathRelative:"T-zone/life/浮生一记(1)-选择.html"},{data:{key:"v-08f1d122",path:"/T-zone/no-emo/%E8%80%83%E7%A0%94%E7%9A%84%E6%84%8F%E4%B9%89%E4%BD%95%E5%9C%A8.html",title:"考研的意义何在",lang:"zh-CN",frontmatter:{date:"2022/4/1 22:08",coverUrl:"/pic/4.jpg",stick:!0,keyword:"考研,意义,选择",description:"考研的意义何在",title:"考研的意义何在",tag:["考研","意义"],categories:["考研","意义"]},excerpt:"",headers:[{level:2,title:"✨考研的意义何在✨",slug:"✨考研的意义何在✨",children:[{level:3,title:"此篇随笔仅纪录个人对考研的看法，真实性及时效性有待考量",slug:"此篇随笔仅纪录个人对考研的看法-真实性及时效性有待考量",children:[]},{level:3,title:"在你眼中的考研...😁",slug:"在你眼中的考研-😁",children:[]},{level:3,title:"现实中的你读研...😫",slug:"现实中的你读研-😫",children:[]},{level:3,title:"当然有人说他愿意混三年换来一张文凭...😑",slug:"当然有人说他愿意混三年换来一张文凭-😑",children:[]},{level:3,title:"研究生的正确使用方式🚀",slug:"研究生的正确使用方式🚀",children:[]},{level:3,title:"现实的当头一棒🔨",slug:"现实的当头一棒🔨",children:[]}]},{level:2,title:"共勉！！！",slug:"共勉",children:[]}],git:{updatedTime:null,contributors:[]}},key:"v-08f1d122",path:"/T-zone/no-emo/%E8%80%83%E7%A0%94%E7%9A%84%E6%84%8F%E4%B9%89%E4%BD%95%E5%9C%A8.html",title:"考研的意义何在",lang:"zh-CN",frontmatter:{date:"2022/4/1 22:08",coverUrl:"/pic/4.jpg",stick:!0,keyword:"考研,意义,选择",description:"考研的意义何在",title:"考研的意义何在",tag:["考研","意义"],categories:["考研","意义"]},excerpt:"",headers:[{level:2,title:"✨考研的意义何在✨",slug:"✨考研的意义何在✨",children:[{level:3,title:"此篇随笔仅纪录个人对考研的看法，真实性及时效性有待考量",slug:"此篇随笔仅纪录个人对考研的看法-真实性及时效性有待考量",children:[]},{level:3,title:"在你眼中的考研...😁",slug:"在你眼中的考研-😁",children:[]},{level:3,title:"现实中的你读研...😫",slug:"现实中的你读研-😫",children:[]},{level:3,title:"当然有人说他愿意混三年换来一张文凭...😑",slug:"当然有人说他愿意混三年换来一张文凭-😑",children:[]},{level:3,title:"研究生的正确使用方式🚀",slug:"研究生的正确使用方式🚀",children:[]},{level:3,title:"现实的当头一棒🔨",slug:"现实的当头一棒🔨",children:[]}]},{level:2,title:"共勉！！！",slug:"共勉",children:[]}],content:"\r\n## ✨考研的意义何在✨\r\n\r\n### **此篇随笔仅纪录个人对考研的看法，真实性及时效性有待考量**\r\n\r\n### 在你眼中的考研...😁\r\n- 本科毕业后最正确的选择\r\n- 考上了研究生，未来可期\r\n- 你的父母替你感到非常骄傲\r\n- 周围同学朋友都觉得你很厉害\r\n- 你可以继续过着美好的校园生活\r\n- 自己能继续深造三年努力学习\r\n- 期待毕业后找到满意的工作\r\n- 一切都在向好的方向发展\r\n\r\n### 现实中的你读研...😫\r\n- 大学混了四年啥也不会\r\n- 读研可以暂时逃避就业\r\n- 指望着学历提升当人上人\r\n- 读研期间科研压力大毕业难\r\n- 专业天坑学校双非继续混三年\r\n- 好不容易研究生毕业照样啥都不会\r\n- 毕业开始抱怨工作不好找、社会内卷\r\n- 多花三年钱不说，三年的时间就换一纸文凭\r\n\r\n### 当然有人说他愿意混三年换来一张文凭...😑\r\n> 不可否认的是，在当今我国教育体制之下，功利之心人皆有之，90% 的本科生读研就是为了一纸文凭。社会唯学历是图的现状，影响的是真正想搞科研的同学，学术圈水之深，悲哀至极...\r\n- 先上岸，混三年，能毕业，拿文凭，成大器\r\n- 在他眼中三年是无所谓的，反正在学校可以玩\r\n- 他深知本科工作不好找，所以就为了文凭去读研\r\n- 殊不知自己就是拉，读上研也掩盖不了自己拉的事实\r\n- 他的文凭在他眼中价值千金，在社会上可能被视作草芥\r\n- 等他毕业了，三年后他还是这批当初混本科混硕士的最拉的人\r\n- 三年中他没有产生任何实质的变革，毕业后社会收割的就是他们\r\n\r\n### 研究生的正确使用方式🚀\r\n- 这确实是寒门学子向上跃迁的窄通道之一\r\n- 通过好专业、院校来刷掉自己的烂本科烂专业\r\n- 不再饥不择食地上岸，选择朝阳专业、985/211\r\n- 读研期间积极参与研究课题，并且努力获取研究成果\r\n- 为读研后的工作早做准备，不再拘泥于安逸的校园生活\r\n\r\n### 现实的当头一棒🔨\r\n> 真正的大佬本科毕业就找到非常不错的工作了，他知道自己不需要读研，他选择了不读研。如果他来考研，对90%的学生都是降维打击。他有选择不读研的能力，我们没有。我们要承认我们本科混了四年，什么也不会，我们活该...\r\n\r\n> 社会中高阶层或者有资源的家庭早让子女本科毕业占好坑了，一个萝卜一个坑，他们很早就开始做打算，从小到大的培养，本科四年的积累，还有家庭资源的调动，随便哪一项都能吊打你的破研究生文凭\r\n\r\n> 少数985/211几个热门专业研究生大佬们，在读研期间深耕积累，拿项目、写论文、出成果，为毕业后的工作早就做好了准备。毕业后进华为、字节、腾讯、阿里等大厂非常轻松。虽然逃不了资本家的剥削，但是他们给的太多了，通过辛苦工作，翻身和阶级跃迁指日可待...\r\n\r\n> 当你拼命毕业后，找工作时发现，自己还是一无是处。只是工资比当初的本科生高了一些而已，你的三年努力并没有让你改变多少。你也许会发现三年前就工作的本科室友工作顺利、职业升迁，真令人唏嘘啊\r\n\r\n> 你抱怨自己的专业垃圾，研究生没读985/211，研究生啥也没学到，三年青春不再，工作找不到，考公太难。好不容易找到了诚心如意的工作，又开始了无尽的996和内卷大潮\r\n\r\n> 殊不知，我们短浅的目光就注定了我们只能是底层人。何为长远？是积极换赛道？是知耻而后勇？还是逼自己一刻不停地朝目标奔去？可惜，这些在当今社会都很难实现了...\r\n\r\n- 尚且不谈现今考研有多难，择校、备考、复试等，需要你花费至少大半年的时间来准备。半途而废者甚，一战上岸者微。你需忍耐备考期间的诸多压力，可最终上岸的只有少数人，其中也不乏二战三战的人，你想考几年？你也要知道，我们与大佬之间唯一公平的只有时间\r\n- 大多数情况不是我们选择考研，而是考研选择我们。我们似乎没有别的选择，“大家都考，我也要考”才是内心真实的独白。可当我们有了别的发展路径选择，并且有了足够的规划和可行性时，你才有选择考研的权利。这不是我们临近毕业时才考虑的，而是应该早做打算，可我们思维的局限性限制了我们的选择余地\r\n  - 很多学生说“我是打心底想要考研！”，怕不是因为他除了考研就只有工作，没其它路子了，自欺欺人罢了\r\n  - 学校和社会脱节已是现实，我们身在象牙塔中看不到外面的世界，当然无从选择，只能随波逐流...\r\n\r\n\r\n\r\n#### 那现在的普通本科生毕业生应该怎么办？还是去考研吧，好学校、好专业、三年的努力缺一不可。既然顺应大流会让你安心，这就足矣。在这内卷的时代，底层本来就是大多数... \r\n\r\n``` py\r\n只有一种英雄主义，那就是在认清生活的真相后依然热爱生活。\r\n                                                 ————罗曼罗兰\r\n```\r\n\r\n## 共勉！！！",contentRendered:'<h2 id="✨考研的意义何在✨" tabindex="-1"><a class="header-anchor" href="#✨考研的意义何在✨" aria-hidden="true">#</a> ✨考研的意义何在✨</h2>\n<h3 id="此篇随笔仅纪录个人对考研的看法-真实性及时效性有待考量" tabindex="-1"><a class="header-anchor" href="#此篇随笔仅纪录个人对考研的看法-真实性及时效性有待考量" aria-hidden="true">#</a> <strong>此篇随笔仅纪录个人对考研的看法，真实性及时效性有待考量</strong></h3>\n<h3 id="在你眼中的考研-😁" tabindex="-1"><a class="header-anchor" href="#在你眼中的考研-😁" aria-hidden="true">#</a> 在你眼中的考研...😁</h3>\n<ul>\n<li>本科毕业后最正确的选择</li>\n<li>考上了研究生，未来可期</li>\n<li>你的父母替你感到非常骄傲</li>\n<li>周围同学朋友都觉得你很厉害</li>\n<li>你可以继续过着美好的校园生活</li>\n<li>自己能继续深造三年努力学习</li>\n<li>期待毕业后找到满意的工作</li>\n<li>一切都在向好的方向发展</li>\n</ul>\n<h3 id="现实中的你读研-😫" tabindex="-1"><a class="header-anchor" href="#现实中的你读研-😫" aria-hidden="true">#</a> 现实中的你读研...😫</h3>\n<ul>\n<li>大学混了四年啥也不会</li>\n<li>读研可以暂时逃避就业</li>\n<li>指望着学历提升当人上人</li>\n<li>读研期间科研压力大毕业难</li>\n<li>专业天坑学校双非继续混三年</li>\n<li>好不容易研究生毕业照样啥都不会</li>\n<li>毕业开始抱怨工作不好找、社会内卷</li>\n<li>多花三年钱不说，三年的时间就换一纸文凭</li>\n</ul>\n<h3 id="当然有人说他愿意混三年换来一张文凭-😑" tabindex="-1"><a class="header-anchor" href="#当然有人说他愿意混三年换来一张文凭-😑" aria-hidden="true">#</a> 当然有人说他愿意混三年换来一张文凭...😑</h3>\n<blockquote>\n<p>不可否认的是，在当今我国教育体制之下，功利之心人皆有之，90% 的本科生读研就是为了一纸文凭。社会唯学历是图的现状，影响的是真正想搞科研的同学，学术圈水之深，悲哀至极...</p>\n</blockquote>\n<ul>\n<li>先上岸，混三年，能毕业，拿文凭，成大器</li>\n<li>在他眼中三年是无所谓的，反正在学校可以玩</li>\n<li>他深知本科工作不好找，所以就为了文凭去读研</li>\n<li>殊不知自己就是拉，读上研也掩盖不了自己拉的事实</li>\n<li>他的文凭在他眼中价值千金，在社会上可能被视作草芥</li>\n<li>等他毕业了，三年后他还是这批当初混本科混硕士的最拉的人</li>\n<li>三年中他没有产生任何实质的变革，毕业后社会收割的就是他们</li>\n</ul>\n<h3 id="研究生的正确使用方式🚀" tabindex="-1"><a class="header-anchor" href="#研究生的正确使用方式🚀" aria-hidden="true">#</a> 研究生的正确使用方式🚀</h3>\n<ul>\n<li>这确实是寒门学子向上跃迁的窄通道之一</li>\n<li>通过好专业、院校来刷掉自己的烂本科烂专业</li>\n<li>不再饥不择食地上岸，选择朝阳专业、985/211</li>\n<li>读研期间积极参与研究课题，并且努力获取研究成果</li>\n<li>为读研后的工作早做准备，不再拘泥于安逸的校园生活</li>\n</ul>\n<h3 id="现实的当头一棒🔨" tabindex="-1"><a class="header-anchor" href="#现实的当头一棒🔨" aria-hidden="true">#</a> 现实的当头一棒🔨</h3>\n<blockquote>\n<p>真正的大佬本科毕业就找到非常不错的工作了，他知道自己不需要读研，他选择了不读研。如果他来考研，对90%的学生都是降维打击。他有选择不读研的能力，我们没有。我们要承认我们本科混了四年，什么也不会，我们活该...</p>\n</blockquote>\n<blockquote>\n<p>社会中高阶层或者有资源的家庭早让子女本科毕业占好坑了，一个萝卜一个坑，他们很早就开始做打算，从小到大的培养，本科四年的积累，还有家庭资源的调动，随便哪一项都能吊打你的破研究生文凭</p>\n</blockquote>\n<blockquote>\n<p>少数985/211几个热门专业研究生大佬们，在读研期间深耕积累，拿项目、写论文、出成果，为毕业后的工作早就做好了准备。毕业后进华为、字节、腾讯、阿里等大厂非常轻松。虽然逃不了资本家的剥削，但是他们给的太多了，通过辛苦工作，翻身和阶级跃迁指日可待...</p>\n</blockquote>\n<blockquote>\n<p>当你拼命毕业后，找工作时发现，自己还是一无是处。只是工资比当初的本科生高了一些而已，你的三年努力并没有让你改变多少。你也许会发现三年前就工作的本科室友工作顺利、职业升迁，真令人唏嘘啊</p>\n</blockquote>\n<blockquote>\n<p>你抱怨自己的专业垃圾，研究生没读985/211，研究生啥也没学到，三年青春不再，工作找不到，考公太难。好不容易找到了诚心如意的工作，又开始了无尽的996和内卷大潮</p>\n</blockquote>\n<blockquote>\n<p>殊不知，我们短浅的目光就注定了我们只能是底层人。何为长远？是积极换赛道？是知耻而后勇？还是逼自己一刻不停地朝目标奔去？可惜，这些在当今社会都很难实现了...</p>\n</blockquote>\n<ul>\n<li>尚且不谈现今考研有多难，择校、备考、复试等，需要你花费至少大半年的时间来准备。半途而废者甚，一战上岸者微。你需忍耐备考期间的诸多压力，可最终上岸的只有少数人，其中也不乏二战三战的人，你想考几年？你也要知道，我们与大佬之间唯一公平的只有时间</li>\n<li>大多数情况不是我们选择考研，而是考研选择我们。我们似乎没有别的选择，“大家都考，我也要考”才是内心真实的独白。可当我们有了别的发展路径选择，并且有了足够的规划和可行性时，你才有选择考研的权利。这不是我们临近毕业时才考虑的，而是应该早做打算，可我们思维的局限性限制了我们的选择余地\n<ul>\n<li>很多学生说“我是打心底想要考研！”，怕不是因为他除了考研就只有工作，没其它路子了，自欺欺人罢了</li>\n<li>学校和社会脱节已是现实，我们身在象牙塔中看不到外面的世界，当然无从选择，只能随波逐流...</li>\n</ul>\n</li>\n</ul>\n<h4 id="那现在的普通本科生毕业生应该怎么办-还是去考研吧-好学校、好专业、三年的努力缺一不可。既然顺应大流会让你安心-这就足矣。在这内卷的时代-底层本来就是大多数" tabindex="-1"><a class="header-anchor" href="#那现在的普通本科生毕业生应该怎么办-还是去考研吧-好学校、好专业、三年的努力缺一不可。既然顺应大流会让你安心-这就足矣。在这内卷的时代-底层本来就是大多数" aria-hidden="true">#</a> 那现在的普通本科生毕业生应该怎么办？还是去考研吧，好学校、好专业、三年的努力缺一不可。既然顺应大流会让你安心，这就足矣。在这内卷的时代，底层本来就是大多数...</h4>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>只有一种英雄主义，那就是在认清生活的真相后依然热爱生活。\n                                                 ————罗曼罗兰\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="共勉" tabindex="-1"><a class="header-anchor" href="#共勉" aria-hidden="true">#</a> 共勉！！！</h2>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/T-zone/no-emo/考研的意义何在.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"考研的意义何在",filePath:"C:/Users/67099/Desktop/blog-demo/docs/T-zone/no-emo/考研的意义何在.md",filePathRelative:"T-zone/no-emo/考研的意义何在.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/T-zone/no-emo/考研的意义何在.html.vue",componentFilePathRelative:"pages/T-zone/no-emo/考研的意义何在.html.vue",componentFileChunkName:"v-08f1d122",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/T-zone/no-emo/考研的意义何在.html.js",dataFilePathRelative:"pages/T-zone/no-emo/考研的意义何在.html.js",dataFileChunkName:"v-08f1d122",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/T-zone/no-emo/考研的意义何在.html",htmlFilePathRelative:"T-zone/no-emo/考研的意义何在.html"},{data:{key:"v-7072d7a0",path:"/T-zone/no-emo/%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E5%AF%B9%E7%9A%84%EF%BC%9F.html",title:"马克思为什么是对的？",lang:"zh-CN",frontmatter:{date:"2022/5/1 22:08",coverUrl:"/pic/4.jpg",stick:!1,keyword:"马克思,资本主义",description:"马克思为什么是对的？",title:"马克思为什么是对的？",tag:["马克思","资本主义"],categories:["马克思","资本主义"]},excerpt:"",headers:[{level:2,title:"✨马克思为什么是对的？✨",slug:"✨马克思为什么是对的-✨",children:[{level:3,title:"人性论",slug:"人性论",children:[]},{level:3,title:"资本主义性质",slug:"资本主义性质",children:[]},{level:3,title:"剩余价值理论",slug:"剩余价值理论",children:[]},{level:3,title:"资本主义如何控制我们",slug:"资本主义如何控制我们",children:[]},{level:3,title:"消费主义",slug:"消费主义",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-7072d7a0",path:"/T-zone/no-emo/%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E5%AF%B9%E7%9A%84%EF%BC%9F.html",title:"马克思为什么是对的？",lang:"zh-CN",frontmatter:{date:"2022/5/1 22:08",coverUrl:"/pic/4.jpg",stick:!1,keyword:"马克思,资本主义",description:"马克思为什么是对的？",title:"马克思为什么是对的？",tag:["马克思","资本主义"],categories:["马克思","资本主义"]},excerpt:"",headers:[{level:2,title:"✨马克思为什么是对的？✨",slug:"✨马克思为什么是对的-✨",children:[{level:3,title:"人性论",slug:"人性论",children:[]},{level:3,title:"资本主义性质",slug:"资本主义性质",children:[]},{level:3,title:"剩余价值理论",slug:"剩余价值理论",children:[]},{level:3,title:"资本主义如何控制我们",slug:"资本主义如何控制我们",children:[]},{level:3,title:"消费主义",slug:"消费主义",children:[]}]}],content:"\r\n\r\n\r\n## ✨马克思为什么是对的？✨\r\n\r\n### 人性论\r\n`在马克思看来，人性的本质是“工作”`\r\n- 个人的生产和能力是不可或缺的一部分，工作代表着人类最基础的能力，是一种参与自然并改变自然的能力，通过这个能力，个体才能体现出人类物种独有的高级意识\r\n- 人类的本质是由生产定义的，而人类的身份则是由基于生产关系而产生的社会关系定义的，人无法切割环境产生独立的身份\r\n- 在实践活动里，进行生产的个人终将以确定的方式进入确定的社会和政治关系\r\n> 以上是马克思观察人类和社会的最基本方法论，其核心在于体现生产、制造和社会关系基于人类本质的创造性运动所带来的不断流变\r\n\r\n\r\n### 资本主义性质\r\n`马克思把历史理解为社会中物质或经济力量的逐步扩张（历史唯物主义）`\r\n- 马克思认为资本主义制度相比于奴隶制、封建制、皇权制等各种制度而言，已经是一套**极其先进、改良和平等**的制度了\r\n> 资本主义本质上是一种商品生产制度，其根本目的是生产商品，让商品在市场上的销售产生资本，并使资本家获得利润\r\n- 因此，在资本主义社会，资本和利润的生产是首要目标，一切更人性的事物都要**让位于利润的生产**\r\n- 这意味着个人之间的联系和情感纯粹受到经济利益的制约，资本家通过工资雇佣劳动者，这是一个经济型大于政治性的制度\r\n- **资本家有绝对的义务、权利甚至道德优势来对一个工人的就业进行删减和消灭**\r\n- 货币交易反应并强化了**现代社会关系的冷漠、流动性和情感上的脱离**，以及对效用价值的强调与个人独特个性特征的冷漠\r\n> 雇佣和解雇员工在现代社会都是卖Y的延伸，我们每个人本质上都在从事卖身工作\r\n\r\n\r\n### 剩余价值理论\r\n`利润必须来自于剩余价值，即被剥削的价值`\r\n- 工人创造的财富越多，他们就越贫穷\r\n- 工人创造的商品越多，它们就越便宜\r\n\r\n> 在资本主义社会中，工人最大的问题不光是经济利益和剩余价值被剥削。更重要的是他们与自己正真的兴趣的疏远和分离，工作只是为了创造经济效益，而不创造任何精神成就感和利他主义的正外部性\r\n\r\n\r\n### 资本主义如何控制我们\r\n\r\n#### 1. 劳动分工\r\n\r\n- 各种变形的奴隶制到今天都没有彻底灭绝，而是更换了**各种福报的外衣**以全新的生态活了下来\r\n- 所有名为自由的工人，仍然必须在市场上畸形地**出售他们的劳动力**，他们必须把自己变成可以买卖的商品，才能获得生存的基本条件\r\n- 在资本主义制度下，工作失去了作为反应人类更高意识的创造性和合作性活动的潜力\r\n\r\n#### 2. 四种异化\r\n> 马克思将劳动分工看作是对个人和社会的异化与非人化，并终将被科技取代和淘汰，细节化的劳动分工使工人们沦为仅具有交换和使用价值的工具，并将本该释放人类多方面创造力的劳动异化\r\n\r\n    1. 将生产者与其所生产的商品脱离\r\n    2. 雇佣劳动的本质是在他人的支配、胁迫和束缚下从事的服务活动\r\n    3. 异化劳动剥离了人类股有的意义和表达人类创造力的潜力\r\n    4. 工作成为个人生活的目的，工人之间相互异化的一种方式就是工作场所的竞争性\r\n\r\n> 在资本主义国家，工人工作的越多，被异化的就越多。这导致他们必须通过购物和参与消费文化来逃避这种异化的感觉，但这往往**需要更多的金钱**。于是，他们就必须**越来越努力的工作**，越来越努力地被异化。在当下，这种痛苦不光是一个恶性循环，它更像是一个死循环\r\n\r\n#### 3. 为什么工人不反抗\r\n- 人们逐渐富裕，脱离了维持生计的底层生活\r\n- 人们除工资外还有资产，资本家向工人发放少量股份，使工人成为了资本拥有者\r\n- 国家通过宏观调控，保障大多数底层社会的基本需求，维持社会稳定\r\n> 我们沉浸在一个掩盖了不平等的意识形态和文化体系中，它们让资本注意变得顺其自然，无可挑剔...\r\n\r\n\r\n### 消费主义\r\n\r\n`消费主义从来不是一个单独的概念或浪潮，更与个人的自律精神无关`\r\n> 在本质上，消费主义是资本主义的一个强大变种，是资本主义的一种表现形式，它是一种全新的、扭曲的宗教，通过拜物的形式应许一切的幸福和美好，**以维持和压制资本主义内生的矛盾和危机**\r\n\r\n- 统治者们希望把一切需求消费化，他们就能够通过自己所掌握的生产资料来源源不断地创造新需求，并且重新定义所有需求。而这些行为的最终目的就是为了让人民处于一种“新奴隶状态”，**以维持社会的阶级分化**\r\n- 消费主义世界观，最终将服务于统治阶级转移人民注意力的目的，阻止他们思考变革的可能性\r\n\r\n> 在这个时代，当人们看向资本家时，人们看不到他们手上所掌握的权利，看到的是他们的各种奢侈消费享受。这带来了两个结果：\r\n  1. 资本家真正的权利被遮蔽了，这削减了冲突的可能\r\n  2. 消费层次的差距创造了一种续加的目标感和自由感，仿佛普通人只要努力工作也能消费起这样的东西，就好像你也就获得了和资本家一样的社会阶层和权力地位一样\r\n\r\n#### 经过以上马克思对资本主义的论述，结合当经社会无时无刻正在发生的，就足以说明马克思所说的都是对的...\r\n\r\n```python\r\n全世界无产阶级联合起来！\r\n                        ————《共产党宣言》\r\n```",contentRendered:'<h2 id="✨马克思为什么是对的-✨" tabindex="-1"><a class="header-anchor" href="#✨马克思为什么是对的-✨" aria-hidden="true">#</a> ✨马克思为什么是对的？✨</h2>\n<h3 id="人性论" tabindex="-1"><a class="header-anchor" href="#人性论" aria-hidden="true">#</a> 人性论</h3>\n<p><code>在马克思看来，人性的本质是“工作”</code></p>\n<ul>\n<li>个人的生产和能力是不可或缺的一部分，工作代表着人类最基础的能力，是一种参与自然并改变自然的能力，通过这个能力，个体才能体现出人类物种独有的高级意识</li>\n<li>人类的本质是由生产定义的，而人类的身份则是由基于生产关系而产生的社会关系定义的，人无法切割环境产生独立的身份</li>\n<li>在实践活动里，进行生产的个人终将以确定的方式进入确定的社会和政治关系</li>\n</ul>\n<blockquote>\n<p>以上是马克思观察人类和社会的最基本方法论，其核心在于体现生产、制造和社会关系基于人类本质的创造性运动所带来的不断流变</p>\n</blockquote>\n<h3 id="资本主义性质" tabindex="-1"><a class="header-anchor" href="#资本主义性质" aria-hidden="true">#</a> 资本主义性质</h3>\n<p><code>马克思把历史理解为社会中物质或经济力量的逐步扩张（历史唯物主义）</code></p>\n<ul>\n<li>马克思认为资本主义制度相比于奴隶制、封建制、皇权制等各种制度而言，已经是一套<strong>极其先进、改良和平等</strong>的制度了</li>\n</ul>\n<blockquote>\n<p>资本主义本质上是一种商品生产制度，其根本目的是生产商品，让商品在市场上的销售产生资本，并使资本家获得利润</p>\n</blockquote>\n<ul>\n<li>因此，在资本主义社会，资本和利润的生产是首要目标，一切更人性的事物都要<strong>让位于利润的生产</strong></li>\n<li>这意味着个人之间的联系和情感纯粹受到经济利益的制约，资本家通过工资雇佣劳动者，这是一个经济型大于政治性的制度</li>\n<li><strong>资本家有绝对的义务、权利甚至道德优势来对一个工人的就业进行删减和消灭</strong></li>\n<li>货币交易反应并强化了<strong>现代社会关系的冷漠、流动性和情感上的脱离</strong>，以及对效用价值的强调与个人独特个性特征的冷漠</li>\n</ul>\n<blockquote>\n<p>雇佣和解雇员工在现代社会都是卖Y的延伸，我们每个人本质上都在从事卖身工作</p>\n</blockquote>\n<h3 id="剩余价值理论" tabindex="-1"><a class="header-anchor" href="#剩余价值理论" aria-hidden="true">#</a> 剩余价值理论</h3>\n<p><code>利润必须来自于剩余价值，即被剥削的价值</code></p>\n<ul>\n<li>工人创造的财富越多，他们就越贫穷</li>\n<li>工人创造的商品越多，它们就越便宜</li>\n</ul>\n<blockquote>\n<p>在资本主义社会中，工人最大的问题不光是经济利益和剩余价值被剥削。更重要的是他们与自己正真的兴趣的疏远和分离，工作只是为了创造经济效益，而不创造任何精神成就感和利他主义的正外部性</p>\n</blockquote>\n<h3 id="资本主义如何控制我们" tabindex="-1"><a class="header-anchor" href="#资本主义如何控制我们" aria-hidden="true">#</a> 资本主义如何控制我们</h3>\n<h4 id="_1-劳动分工" tabindex="-1"><a class="header-anchor" href="#_1-劳动分工" aria-hidden="true">#</a> 1. 劳动分工</h4>\n<ul>\n<li>各种变形的奴隶制到今天都没有彻底灭绝，而是更换了<strong>各种福报的外衣</strong>以全新的生态活了下来</li>\n<li>所有名为自由的工人，仍然必须在市场上畸形地<strong>出售他们的劳动力</strong>，他们必须把自己变成可以买卖的商品，才能获得生存的基本条件</li>\n<li>在资本主义制度下，工作失去了作为反应人类更高意识的创造性和合作性活动的潜力</li>\n</ul>\n<h4 id="_2-四种异化" tabindex="-1"><a class="header-anchor" href="#_2-四种异化" aria-hidden="true">#</a> 2. 四种异化</h4>\n<blockquote>\n<p>马克思将劳动分工看作是对个人和社会的异化与非人化，并终将被科技取代和淘汰，细节化的劳动分工使工人们沦为仅具有交换和使用价值的工具，并将本该释放人类多方面创造力的劳动异化</p>\n</blockquote>\n<pre><code>1. 将生产者与其所生产的商品脱离\n2. 雇佣劳动的本质是在他人的支配、胁迫和束缚下从事的服务活动\n3. 异化劳动剥离了人类股有的意义和表达人类创造力的潜力\n4. 工作成为个人生活的目的，工人之间相互异化的一种方式就是工作场所的竞争性\n</code></pre>\n<blockquote>\n<p>在资本主义国家，工人工作的越多，被异化的就越多。这导致他们必须通过购物和参与消费文化来逃避这种异化的感觉，但这往往<strong>需要更多的金钱</strong>。于是，他们就必须<strong>越来越努力的工作</strong>，越来越努力地被异化。在当下，这种痛苦不光是一个恶性循环，它更像是一个死循环</p>\n</blockquote>\n<h4 id="_3-为什么工人不反抗" tabindex="-1"><a class="header-anchor" href="#_3-为什么工人不反抗" aria-hidden="true">#</a> 3. 为什么工人不反抗</h4>\n<ul>\n<li>人们逐渐富裕，脱离了维持生计的底层生活</li>\n<li>人们除工资外还有资产，资本家向工人发放少量股份，使工人成为了资本拥有者</li>\n<li>国家通过宏观调控，保障大多数底层社会的基本需求，维持社会稳定</li>\n</ul>\n<blockquote>\n<p>我们沉浸在一个掩盖了不平等的意识形态和文化体系中，它们让资本注意变得顺其自然，无可挑剔...</p>\n</blockquote>\n<h3 id="消费主义" tabindex="-1"><a class="header-anchor" href="#消费主义" aria-hidden="true">#</a> 消费主义</h3>\n<p><code>消费主义从来不是一个单独的概念或浪潮，更与个人的自律精神无关</code></p>\n<blockquote>\n<p>在本质上，消费主义是资本主义的一个强大变种，是资本主义的一种表现形式，它是一种全新的、扭曲的宗教，通过拜物的形式应许一切的幸福和美好，<strong>以维持和压制资本主义内生的矛盾和危机</strong></p>\n</blockquote>\n<ul>\n<li>统治者们希望把一切需求消费化，他们就能够通过自己所掌握的生产资料来源源不断地创造新需求，并且重新定义所有需求。而这些行为的最终目的就是为了让人民处于一种“新奴隶状态”，<strong>以维持社会的阶级分化</strong></li>\n<li>消费主义世界观，最终将服务于统治阶级转移人民注意力的目的，阻止他们思考变革的可能性</li>\n</ul>\n<blockquote>\n<p>在这个时代，当人们看向资本家时，人们看不到他们手上所掌握的权利，看到的是他们的各种奢侈消费享受。这带来了两个结果：</p>\n</blockquote>\n<ol>\n<li>资本家真正的权利被遮蔽了，这削减了冲突的可能</li>\n<li>消费层次的差距创造了一种续加的目标感和自由感，仿佛普通人只要努力工作也能消费起这样的东西，就好像你也就获得了和资本家一样的社会阶层和权力地位一样</li>\n</ol>\n<h4 id="经过以上马克思对资本主义的论述-结合当经社会无时无刻正在发生的-就足以说明马克思所说的都是对的" tabindex="-1"><a class="header-anchor" href="#经过以上马克思对资本主义的论述-结合当经社会无时无刻正在发生的-就足以说明马克思所说的都是对的" aria-hidden="true">#</a> 经过以上马克思对资本主义的论述，结合当经社会无时无刻正在发生的，就足以说明马克思所说的都是对的...</h4>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>全世界无产阶级联合起来！\n                        ————《共产党宣言》\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/T-zone/no-emo/马克思为什么是对的？.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"马克思为什么是对的？",filePath:"C:/Users/67099/Desktop/blog-demo/docs/T-zone/no-emo/马克思为什么是对的？.md",filePathRelative:"T-zone/no-emo/马克思为什么是对的？.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/T-zone/no-emo/马克思为什么是对的？.html.vue",componentFilePathRelative:"pages/T-zone/no-emo/马克思为什么是对的？.html.vue",componentFileChunkName:"v-7072d7a0",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/T-zone/no-emo/马克思为什么是对的？.html.js",dataFilePathRelative:"pages/T-zone/no-emo/马克思为什么是对的？.html.js",dataFileChunkName:"v-7072d7a0",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/T-zone/no-emo/马克思为什么是对的？.html",htmlFilePathRelative:"T-zone/no-emo/马克思为什么是对的？.html"},{data:{key:"v-3706649a",path:"/404.html",title:"",lang:"zh-CN",frontmatter:{layout:"404"},excerpt:"",headers:[],git:{}},key:"v-3706649a",path:"/404.html",title:"",lang:"zh-CN",frontmatter:{layout:"404"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/404.html.vue",componentFilePathRelative:"pages/404.html.vue",componentFileChunkName:"v-3706649a",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/404.html.js",dataFilePathRelative:"pages/404.html.js",dataFileChunkName:"v-3706649a",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/404.html",htmlFilePathRelative:"404.html"},{data:{key:"v-8daa1a0e",path:"/",title:"",lang:"zh-CN",frontmatter:{layout:"Layout",home:!0},excerpt:"",headers:[],git:{}},key:"v-8daa1a0e",path:"/",title:"",lang:"zh-CN",frontmatter:{layout:"Layout",home:!0},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/index.html.vue",componentFilePathRelative:"pages/index.html.vue",componentFileChunkName:"v-8daa1a0e",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/index.html.js",dataFilePathRelative:"pages/index.html.js",dataFileChunkName:"v-8daa1a0e",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/index.html",htmlFilePathRelative:"index.html"},{data:{key:"v-74bc627b",path:"/about/",title:"",lang:"zh-CN",frontmatter:{layout:"About",slug:"aurora-about"},excerpt:"",headers:[],git:{}},key:"v-74bc627b",path:"/about/",title:"",lang:"zh-CN",frontmatter:{layout:"About",slug:"aurora-about"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/about/index.html.vue",componentFilePathRelative:"pages/about/index.html.vue",componentFileChunkName:"v-74bc627b",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/about/index.html.js",dataFilePathRelative:"pages/about/index.html.js",dataFileChunkName:"v-74bc627b",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/about/index.html",htmlFilePathRelative:"about/index.html"},{data:{key:"v-14f724bf",path:"/mood/",title:"",lang:"zh-CN",frontmatter:{layout:"Mood",slug:"aurora-mood"},excerpt:"",headers:[],git:{}},key:"v-14f724bf",path:"/mood/",title:"",lang:"zh-CN",frontmatter:{layout:"Mood",slug:"aurora-mood"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/mood/index.html.vue",componentFilePathRelative:"pages/mood/index.html.vue",componentFileChunkName:"v-14f724bf",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/mood/index.html.js",dataFilePathRelative:"pages/mood/index.html.js",dataFileChunkName:"v-14f724bf",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/mood/index.html",htmlFilePathRelative:"mood/index.html"},{data:{key:"v-14e6501c",path:"/link/",title:"",lang:"zh-CN",frontmatter:{layout:"Link",slug:"aurora-link"},excerpt:"",headers:[],git:{}},key:"v-14e6501c",path:"/link/",title:"",lang:"zh-CN",frontmatter:{layout:"Link",slug:"aurora-link"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/link/index.html.vue",componentFilePathRelative:"pages/link/index.html.vue",componentFileChunkName:"v-14e6501c",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/link/index.html.js",dataFilePathRelative:"pages/link/index.html.js",dataFileChunkName:"v-14e6501c",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/link/index.html",htmlFilePathRelative:"link/index.html"},{data:{key:"v-744d024e",path:"/tag/",title:"",lang:"zh-CN",frontmatter:{layout:"Tag",slug:"aurora-tag"},excerpt:"",headers:[],git:{}},key:"v-744d024e",path:"/tag/",title:"",lang:"zh-CN",frontmatter:{layout:"Tag",slug:"aurora-tag"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/tag/index.html.vue",componentFilePathRelative:"pages/tag/index.html.vue",componentFileChunkName:"v-744d024e",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/tag/index.html.js",dataFilePathRelative:"pages/tag/index.html.js",dataFileChunkName:"v-744d024e",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/tag/index.html",htmlFilePathRelative:"tag/index.html"},{data:{key:"v-705c21a6",path:"/archive/",title:"",lang:"zh-CN",frontmatter:{layout:"Archive",slug:"aurora-archive"},excerpt:"",headers:[],git:{}},key:"v-705c21a6",path:"/archive/",title:"",lang:"zh-CN",frontmatter:{layout:"Archive",slug:"aurora-archive"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/archive/index.html.vue",componentFilePathRelative:"pages/archive/index.html.vue",componentFileChunkName:"v-705c21a6",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/archive/index.html.js",dataFilePathRelative:"pages/archive/index.html.js",dataFileChunkName:"v-705c21a6",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/archive/index.html",htmlFilePathRelative:"archive/index.html"},{data:{key:"v-6629f178",path:"/aurora-coze/",title:"",lang:"zh-CN",frontmatter:{layout:"CozeMood",slug:"aurora-coze-mood"},excerpt:"",headers:[],git:{}},key:"v-6629f178",path:"/aurora-coze/",title:"",lang:"zh-CN",frontmatter:{layout:"CozeMood",slug:"aurora-coze-mood"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/aurora-coze/index.html.vue",componentFilePathRelative:"pages/aurora-coze/index.html.vue",componentFileChunkName:"v-6629f178",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/aurora-coze/index.html.js",dataFilePathRelative:"pages/aurora-coze/index.html.js",dataFileChunkName:"v-6629f178",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/aurora-coze/index.html",htmlFilePathRelative:"aurora-coze/index.html"},{data:{key:"v-f693f690",path:"/aurora-register/",title:"",lang:"zh-CN",frontmatter:{layout:"RegisterUser",slug:"aurora-coze-register"},excerpt:"",headers:[],git:{}},key:"v-f693f690",path:"/aurora-register/",title:"",lang:"zh-CN",frontmatter:{layout:"RegisterUser",slug:"aurora-coze-register"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/aurora-register/index.html.vue",componentFilePathRelative:"pages/aurora-register/index.html.vue",componentFileChunkName:"v-f693f690",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/aurora-register/index.html.js",dataFilePathRelative:"pages/aurora-register/index.html.js",dataFileChunkName:"v-f693f690",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/aurora-register/index.html",htmlFilePathRelative:"aurora-register/index.html"},{data:{key:"v-e2acc714",path:"/photo/",title:"",lang:"zh-CN",frontmatter:{layout:"CozePhoto",slug:"aurora-photo"},excerpt:"",headers:[],git:{}},key:"v-e2acc714",path:"/photo/",title:"",lang:"zh-CN",frontmatter:{layout:"CozePhoto",slug:"aurora-photo"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/photo/index.html.vue",componentFilePathRelative:"pages/photo/index.html.vue",componentFileChunkName:"v-e2acc714",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/photo/index.html.js",dataFilePathRelative:"pages/photo/index.html.js",dataFileChunkName:"v-e2acc714",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/photo/index.html",htmlFilePathRelative:"photo/index.html"},{data:{key:"v-4382d077",path:"/next-mood/",title:"",lang:"zh-CN",frontmatter:{layout:"AuroraCozeMood",slug:"aurora-AuroraCozeMood"},excerpt:"",headers:[],git:{}},key:"v-4382d077",path:"/next-mood/",title:"",lang:"zh-CN",frontmatter:{layout:"AuroraCozeMood",slug:"aurora-AuroraCozeMood"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/next-mood/index.html.vue",componentFilePathRelative:"pages/next-mood/index.html.vue",componentFileChunkName:"v-4382d077",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/next-mood/index.html.js",dataFilePathRelative:"pages/next-mood/index.html.js",dataFileChunkName:"v-4382d077",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/next-mood/index.html",htmlFilePathRelative:"next-mood/index.html"},{data:{key:"v-3c506944",path:"/aurora-music/",title:"",lang:"zh-CN",frontmatter:{layout:"AuroraMusic",slug:"aurora-plugin-music"},excerpt:"",headers:[],git:{}},key:"v-3c506944",path:"/aurora-music/",title:"",lang:"zh-CN",frontmatter:{layout:"AuroraMusic",slug:"aurora-plugin-music"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/aurora-music/index.html.vue",componentFilePathRelative:"pages/aurora-music/index.html.vue",componentFileChunkName:"v-3c506944",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/aurora-music/index.html.js",dataFilePathRelative:"pages/aurora-music/index.html.js",dataFileChunkName:"v-3c506944",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/aurora-music/index.html",htmlFilePathRelative:"aurora-music/index.html"},{data:{key:"v-3279cf61",path:"/aurora-archive/",title:"",lang:"zh-CN",frontmatter:{layout:"AuroraArchive",slug:"aurora-plugin-archive"},excerpt:"",headers:[],git:{}},key:"v-3279cf61",path:"/aurora-archive/",title:"",lang:"zh-CN",frontmatter:{layout:"AuroraArchive",slug:"aurora-plugin-archive"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/aurora-archive/index.html.vue",componentFilePathRelative:"pages/aurora-archive/index.html.vue",componentFileChunkName:"v-3279cf61",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/aurora-archive/index.html.js",dataFilePathRelative:"pages/aurora-archive/index.html.js",dataFileChunkName:"v-3279cf61",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/aurora-archive/index.html",htmlFilePathRelative:"aurora-archive/index.html"}]},7039:(n,e,s)=>{s.d(e,{Z:()=>a});const a=[{data:{key:"v-690f92a4",path:"/16-11-27%5E%E5%8D%97%E5%B1%B1%E5%85%AC%E5%9B%AD.html",title:"16-11-27=>南山公园",lang:"zh-CN",frontmatter:{date:"2022/4/8 10:18",coverUrl:"/pic/12.jpg",stick:!1,keyword:"朝花夕拾",description:"朝花夕拾",title:"16-11-27=>南山公园",tag:["朝花夕拾"],categories:["朝花夕拾"]},excerpt:"",headers:[{level:2,title:"🍂16-11-27=>南山公园🍂",slug:"🍂16-11-27-南山公园🍂",children:[]}],git:{updatedTime:null,contributors:[]}},key:"v-690f92a4",path:"/16-11-27%5E%E5%8D%97%E5%B1%B1%E5%85%AC%E5%9B%AD.html",title:"16-11-27=>南山公园",lang:"zh-CN",frontmatter:{date:"2022/4/8 10:18",coverUrl:"/pic/12.jpg",stick:!1,keyword:"朝花夕拾",description:"朝花夕拾",title:"16-11-27=>南山公园",tag:["朝花夕拾"],categories:["朝花夕拾"]},excerpt:"",headers:[{level:2,title:"🍂16-11-27=>南山公园🍂",slug:"🍂16-11-27-南山公园🍂",children:[]}],content:'\r\n## 🍂16-11-27=>南山公园🍂\r\n\r\n> 2016年11月27日，宿舍六人南山公园秋游\r\n\r\n<div align=center>\r\n<img src="pic/story-1.jpg" width="76%" height="100%">\r\n</div>\r\n\r\n> 记得是某个课程的老师推荐我们去南山公园走走，我们便挑了个周末的上午出发\r\n- 那天天气很好，非常适合出去游玩\r\n- 我们吹了一路的牛，其乐融融\r\n- 正经的老王还放Tokyo-hot给我们听\r\n\r\n> 那时的我们还很懵懂，对他乡大学的一切充满好奇\r\n- 搞笑的小伟牛，贪玩的阿虎\r\n- 猥琐的老王，单纯的小柯\r\n- 老实的键哥，爱吹牛的我\r\n\r\n> 那时的我们也很天真，糊糊涂涂地过着每一天\r\n- 每天除了上课就是心无杂念的各种玩\r\n- 逃课、睡懒觉、打游戏无所不能\r\n- 无忧无虑的生活，很开心...\r\n\r\n**谨以此纪念2016-11-27上午，悠闲的南山公园六人行**',contentRendered:'<h2 id="🍂16-11-27-南山公园🍂" tabindex="-1"><a class="header-anchor" href="#🍂16-11-27-南山公园🍂" aria-hidden="true">#</a> 🍂16-11-27=&gt;南山公园🍂</h2>\n<blockquote>\n<p>2016年11月27日，宿舍六人南山公园秋游</p>\n</blockquote>\n<div align=center>\n<img src="pic/story-1.jpg" width="76%" height="100%">\n</div>\n<blockquote>\n<p>记得是某个课程的老师推荐我们去南山公园走走，我们便挑了个周末的上午出发</p>\n</blockquote>\n<ul>\n<li>那天天气很好，非常适合出去游玩</li>\n<li>我们吹了一路的牛，其乐融融</li>\n<li>正经的老王还放Tokyo-hot给我们听</li>\n</ul>\n<blockquote>\n<p>那时的我们还很懵懂，对他乡大学的一切充满好奇</p>\n</blockquote>\n<ul>\n<li>搞笑的小伟牛，贪玩的阿虎</li>\n<li>猥琐的老王，单纯的小柯</li>\n<li>老实的键哥，爱吹牛的我</li>\n</ul>\n<blockquote>\n<p>那时的我们也很天真，糊糊涂涂地过着每一天</p>\n</blockquote>\n<ul>\n<li>每天除了上课就是心无杂念的各种玩</li>\n<li>逃课、睡懒觉、打游戏无所不能</li>\n<li>无忧无虑的生活，很开心...</li>\n</ul>\n<p><strong>谨以此纪念2016-11-27上午，悠闲的南山公园六人行</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/16-11-27^南山公园.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"16-11-27^南山公园",filePath:"C:/Users/67099/Desktop/blog-demo/docs/16-11-27^南山公园.md",filePathRelative:"16-11-27^南山公园.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/16-11-27^南山公园.html.vue",componentFilePathRelative:"pages/16-11-27^南山公园.html.vue",componentFileChunkName:"v-690f92a4",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/16-11-27^南山公园.html.js",dataFilePathRelative:"pages/16-11-27^南山公园.html.js",dataFileChunkName:"v-690f92a4",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/16-11-27^南山公园.html",htmlFilePathRelative:"16-11-27^南山公园.html"},{data:{key:"v-22a39d25",path:"/about.html",title:"Introduction of the site",lang:"zh-CN",frontmatter:{date:"2022/4/2 23:10",coverUrl:"/pic/2.jpg",stick:!0,keyword:"Aurora,Introduction,theme,site",description:"Introduction of the site",title:"Introduction of the site",tag:["Aurora","Introduction","Theme","Site"],categories:["Introduction","Aurora","theme"]},excerpt:"",headers:[{level:2,title:"✨Introduction of the site✨",slug:"✨introduction-of-the-site✨",children:[]},{level:2,title:"Feature",slug:"feature",children:[]},{level:2,title:"Quick start",slug:"quick-start",children:[{level:3,title:"Node安装",slug:"node安装",children:[]},{level:3,title:"安装CLI",slug:"安装cli",children:[]},{level:3,title:"创建博客",slug:"创建博客",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-22a39d25",path:"/about.html",title:"Introduction of the site",lang:"zh-CN",frontmatter:{date:"2022/4/2 23:10",coverUrl:"/pic/2.jpg",stick:!0,keyword:"Aurora,Introduction,theme,site",description:"Introduction of the site",title:"Introduction of the site",tag:["Aurora","Introduction","Theme","Site"],categories:["Introduction","Aurora","theme"]},excerpt:"",headers:[{level:2,title:"✨Introduction of the site✨",slug:"✨introduction-of-the-site✨",children:[]},{level:2,title:"Feature",slug:"feature",children:[]},{level:2,title:"Quick start",slug:"quick-start",children:[{level:3,title:"Node安装",slug:"node安装",children:[]},{level:3,title:"安装CLI",slug:"安装cli",children:[]},{level:3,title:"创建博客",slug:"创建博客",children:[]}]}],content:'\n## ✨Introduction of the site✨\n\n\n[Demo](http://aurora.xcye.xyz/)A vuepress-based animation blog theme, simple, beautiful, multi-color, multiple custom functions, providing article poster sharing, talk, photo album, comment and other features\n\n> 一款基于vuepress的动漫类博客主题，简洁，漂亮，多色彩，多种自定义功能，提供文章海报分享，说说，相册，评论，侧边栏，自动生成文章侧边栏等特色功能\n\n<a href="https://www.npmjs.com/package/vuepress-theme-aurora"><img alt="npm" src="https://img.shields.io/npm/v/vuepress-theme-aurora"></a>![npm](https://img.shields.io/npm/dw/vuepress-theme-aurora)<a href="https://github.com/qsyyke/vuepress-theme-aurora"><img alt="GitHub Repo stars" src="https://img.shields.io/github/stars/qsyyke/vuepress-theme-aurora?style=social"></a>\n\n## Feature\n\n- **简洁美观** 细节精致，界面简约漂亮，毛玻璃效果\n- **开箱即用** 下载便可直接使用\n- **自动生成文章侧边栏** 自动为文章所在目录下的所有md文件生成侧边栏文章目录 ，不用在为文章侧边栏而烦恼\n- **图片懒加载** 为文章所有图片，首页文章列表加入懒加载效果，支持自定义占位符，大大提升页面加载速度\n- **海报分享** 自动为文章生成海报分享功能，支持自定义海报样式\n- **SEO** 自定义keyword，description或者主题自动生成keyword，description，提升搜索引擎收录\n- **多种功能** 文章海报分享，赞赏，文章分类，友情链接，心情说说，相册，评论，图片懒加载，自动生成文章目录...\n- **高度自定义** 提供多个组件和主题配置文件进行自定义，除了部分页面布局文字之外，页面都是可定制的\n- `自定义页脚` 支持自定义页脚\n- **文章置顶** 首页文章置顶功能\n- **移除默认主题的侧边栏** 移除默认主题侧边栏，新侧边栏更加美观，并且在侧边栏上加入多个模块，如文章信息，最新文章，友情链接等等 \n- **社交图标** 全部采用阿里图标，所有图标都是经过精心挑选，并且图标修改非常简单\n- **阅读体验** 切换背景，修改字体，颜色，毛玻璃效果，圆角，透明度控制\n- **动漫背景** 所有页面背景都使用动漫图片，同样也可以使用自己的背景图\n- **搜索** 文章搜索功能\n- **随机一言打字机** 首页或者其他位置，通过打字机效果展示随机一言或者自定义语句\n- **自适应** 为手机端和PC端都做了适配\n- **vuepress** 依赖于vuepress，一个静态博客框架，支持几乎所有的vuepress特性\n\n**....**\n\n## Quick start\n\n### Node安装\n\n运行环境需要依赖`node`，如果你未安装`node`，请先安装node，我安装的版本为`v14.17.3`\n\n> 安装node可查看[Node 安装](https://aurora.xcye.xyz/node.html)\n\n### 安装CLI\n\n- npm\n\n  ```sh\n  npm i vuepress-theme-cli -g\n  ```\n\n- yarn\n\n  ```sh\n  yarn global vuepress-theme-cli\n  ```\n\n\n\n### 创建博客\n\n待脚手架cli安装成功之后，进入cmd中\n\n\n在命令行处输入下面命令\n\n```sh\naurora blog-demo\n```\n\n> `blog-demo`是你的博客文件件名称，会自动创建以此名字命名的文件夹\n\n\n\n::: tip\n\n如果提示\n\n```sh\n\'aurora\' 不是内部或外部命令，也不是可运行的程序\n或批处理文件。\n```\n\n请看[这里](https://aurora.xcye.xyz/issue/cli-issue.md)\n\n:::\n\n\n\n\n> 这个过程大概几秒，取决于你的网速，待安装成功之后，你会发现在当前目录下，多了一个目录\n\n\n> 然后进入此`demo-blog`目录中，使用命令`npm install`或者`yarn install`安装所需的依赖，待依赖安装成功之后，使用`npm run dev`或者`yarn dev`启动博客\n\n\n\n\n\n> 运行成功之后，会出现一个地址，你只需要在浏览器中，输入这个地址，就可以看到主页面\n\n\n::: tip\n\n恭喜你，到这里，你已经安装成功了，接下来便可以尽情书写博客和修改配置(`上图展示出来的效果是默认配置，你可以更改`)\n\n\n:::\n\n\n',contentRendered:'<h2 id="✨introduction-of-the-site✨" tabindex="-1"><a class="header-anchor" href="#✨introduction-of-the-site✨" aria-hidden="true">#</a> ✨Introduction of the site✨</h2>\n<p><a href="http://aurora.xcye.xyz/" target="_blank" rel="noopener noreferrer">Demo<ExternalLinkIcon/></a>A vuepress-based animation blog theme, simple, beautiful, multi-color, multiple custom functions, providing article poster sharing, talk, photo album, comment and other features</p>\n<blockquote>\n<p>一款基于vuepress的动漫类博客主题，简洁，漂亮，多色彩，多种自定义功能，提供文章海报分享，说说，相册，评论，侧边栏，自动生成文章侧边栏等特色功能</p>\n</blockquote>\n<p><a href="https://www.npmjs.com/package/vuepress-theme-aurora"><img alt="npm" src="https://img.shields.io/npm/v/vuepress-theme-aurora"></a><img src="https://ooszy.cco.vin/img/blog-public/ljz.gif" alt="npm" originSrc="https://img.shields.io/npm/dw/vuepress-theme-aurora" data="aurora"><a href="https://github.com/qsyyke/vuepress-theme-aurora"><img alt="GitHub Repo stars" src="https://img.shields.io/github/stars/qsyyke/vuepress-theme-aurora?style=social"></a></p>\n<h2 id="feature" tabindex="-1"><a class="header-anchor" href="#feature" aria-hidden="true">#</a> Feature</h2>\n<ul>\n<li><strong>简洁美观</strong> 细节精致，界面简约漂亮，毛玻璃效果</li>\n<li><strong>开箱即用</strong> 下载便可直接使用</li>\n<li><strong>自动生成文章侧边栏</strong> 自动为文章所在目录下的所有md文件生成侧边栏文章目录 ，不用在为文章侧边栏而烦恼</li>\n<li><strong>图片懒加载</strong> 为文章所有图片，首页文章列表加入懒加载效果，支持自定义占位符，大大提升页面加载速度</li>\n<li><strong>海报分享</strong> 自动为文章生成海报分享功能，支持自定义海报样式</li>\n<li><strong>SEO</strong> 自定义keyword，description或者主题自动生成keyword，description，提升搜索引擎收录</li>\n<li><strong>多种功能</strong> 文章海报分享，赞赏，文章分类，友情链接，心情说说，相册，评论，图片懒加载，自动生成文章目录...</li>\n<li><strong>高度自定义</strong> 提供多个组件和主题配置文件进行自定义，除了部分页面布局文字之外，页面都是可定制的</li>\n<li><code>自定义页脚</code> 支持自定义页脚</li>\n<li><strong>文章置顶</strong> 首页文章置顶功能</li>\n<li><strong>移除默认主题的侧边栏</strong> 移除默认主题侧边栏，新侧边栏更加美观，并且在侧边栏上加入多个模块，如文章信息，最新文章，友情链接等等</li>\n<li><strong>社交图标</strong> 全部采用阿里图标，所有图标都是经过精心挑选，并且图标修改非常简单</li>\n<li><strong>阅读体验</strong> 切换背景，修改字体，颜色，毛玻璃效果，圆角，透明度控制</li>\n<li><strong>动漫背景</strong> 所有页面背景都使用动漫图片，同样也可以使用自己的背景图</li>\n<li><strong>搜索</strong> 文章搜索功能</li>\n<li><strong>随机一言打字机</strong> 首页或者其他位置，通过打字机效果展示随机一言或者自定义语句</li>\n<li><strong>自适应</strong> 为手机端和PC端都做了适配</li>\n<li><strong>vuepress</strong> 依赖于vuepress，一个静态博客框架，支持几乎所有的vuepress特性</li>\n</ul>\n<p><strong>....</strong></p>\n<h2 id="quick-start" tabindex="-1"><a class="header-anchor" href="#quick-start" aria-hidden="true">#</a> Quick start</h2>\n<h3 id="node安装" tabindex="-1"><a class="header-anchor" href="#node安装" aria-hidden="true">#</a> Node安装</h3>\n<p>运行环境需要依赖<code>node</code>，如果你未安装<code>node</code>，请先安装node，我安装的版本为<code>v14.17.3</code></p>\n<blockquote>\n<p>安装node可查看<a href="https://aurora.xcye.xyz/node.html" target="_blank" rel="noopener noreferrer">Node 安装<ExternalLinkIcon/></a></p>\n</blockquote>\n<h3 id="安装cli" tabindex="-1"><a class="header-anchor" href="#安装cli" aria-hidden="true">#</a> 安装CLI</h3>\n<ul>\n<li>\n<p>npm</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> i vuepress-theme-cli -g\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n<li>\n<p>yarn</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">yarn</span> global vuepress-theme-cli\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n</ul>\n<h3 id="创建博客" tabindex="-1"><a class="header-anchor" href="#创建博客" aria-hidden="true">#</a> 创建博客</h3>\n<p>待脚手架cli安装成功之后，进入cmd中</p>\n<p>在命令行处输入下面命令</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>aurora blog-demo\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p><code>blog-demo</code>是你的博客文件件名称，会自动创建以此名字命名的文件夹</p>\n</blockquote>\n<div class="custom-container tip"><p class="custom-container-title">TIP</p>\n<p>如果提示</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token string">\'aurora\'</span> 不是内部或外部命令，也不是可运行的程序\n或批处理文件。\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>请看<a href="https://aurora.xcye.xyz/issue/cli-issue.md" target="_blank" rel="noopener noreferrer">这里<ExternalLinkIcon/></a></p>\n</div>\n<blockquote>\n<p>这个过程大概几秒，取决于你的网速，待安装成功之后，你会发现在当前目录下，多了一个目录</p>\n</blockquote>\n<blockquote>\n<p>然后进入此<code>demo-blog</code>目录中，使用命令<code>npm install</code>或者<code>yarn install</code>安装所需的依赖，待依赖安装成功之后，使用<code>npm run dev</code>或者<code>yarn dev</code>启动博客</p>\n</blockquote>\n<blockquote>\n<p>运行成功之后，会出现一个地址，你只需要在浏览器中，输入这个地址，就可以看到主页面</p>\n</blockquote>\n<div class="custom-container tip"><p class="custom-container-title">TIP</p>\n<p>恭喜你，到这里，你已经安装成功了，接下来便可以尽情书写博客和修改配置(<code>上图展示出来的效果是默认配置，你可以更改</code>)</p>\n</div>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/about.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"about",filePath:"C:/Users/67099/Desktop/blog-demo/docs/about.md",filePathRelative:"about.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/about.html.vue",componentFilePathRelative:"pages/about.html.vue",componentFileChunkName:"v-22a39d25",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/about.html.js",dataFilePathRelative:"pages/about.html.js",dataFileChunkName:"v-22a39d25",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/about.html",htmlFilePathRelative:"about.html"},{data:{key:"v-b1714770",path:"/myself.html",title:"Self-Introduction",lang:"zh-CN",frontmatter:{date:"2022/4/10 11:32",coverUrl:"/pic/1.jpg",stick:!0,keyword:"Self-Introduction",description:"Self-Introduction",title:"Self-Introduction",tag:["Myself","Introduction"],categories:["Self-Introduction"]},excerpt:"",headers:[{level:2,title:"🎈✨🎉Welcome!🎉✨🎈",slug:"🎈✨🎉welcome-🎉✨🎈",children:[]},{level:2,title:"Self-Introduction",slug:"self-introduction",children:[]},{level:2,title:"Hobbies",slug:"hobbies",children:[{level:3,title:"踢球踢球⚽！！！",slug:"踢球踢球⚽",children:[]},{level:3,title:"骑车骑车🚲！！！",slug:"骑车骑车🚲",children:[]},{level:3,title:"Gaming🎮！！！",slug:"gaming🎮",children:[]}]},{level:2,title:"Stories",slug:"stories",children:[]},{level:2,title:"Wishes",slug:"wishes",children:[{level:3,title:"小目标（努力实现🥳）",slug:"小目标-努力实现🥳",children:[]},{level:3,title:"大梦想（想想就好🤔）",slug:"大梦想-想想就好🤔",children:[]}]},{level:2,title:"My treasure",slug:"my-treasure",children:[]},{level:2,title:"Travel timeline",slug:"travel-timeline",children:[{level:3,title:"校园时光，一去不复返",slug:"校园时光-一去不复返",children:[]},{level:3,title:"长沙",slug:"长沙",children:[]},{level:3,title:"南昌",slug:"南昌",children:[]},{level:3,title:"无锡",slug:"无锡",children:[]},{level:3,title:"上海",slug:"上海",children:[]},{level:3,title:"PPMT",slug:"ppmt",children:[]},{level:3,title:"南京",slug:"南京",children:[]},{level:3,title:"深圳",slug:"深圳",children:[]}]},{level:2,title:"To be continue...",slug:"to-be-continue",children:[]}],git:{updatedTime:null,contributors:[]}},key:"v-b1714770",path:"/myself.html",title:"Self-Introduction",lang:"zh-CN",frontmatter:{date:"2022/4/10 11:32",coverUrl:"/pic/1.jpg",stick:!0,keyword:"Self-Introduction",description:"Self-Introduction",title:"Self-Introduction",tag:["Myself","Introduction"],categories:["Self-Introduction"]},excerpt:"",headers:[{level:2,title:"🎈✨🎉Welcome!🎉✨🎈",slug:"🎈✨🎉welcome-🎉✨🎈",children:[]},{level:2,title:"Self-Introduction",slug:"self-introduction",children:[]},{level:2,title:"Hobbies",slug:"hobbies",children:[{level:3,title:"踢球踢球⚽！！！",slug:"踢球踢球⚽",children:[]},{level:3,title:"骑车骑车🚲！！！",slug:"骑车骑车🚲",children:[]},{level:3,title:"Gaming🎮！！！",slug:"gaming🎮",children:[]}]},{level:2,title:"Stories",slug:"stories",children:[]},{level:2,title:"Wishes",slug:"wishes",children:[{level:3,title:"小目标（努力实现🥳）",slug:"小目标-努力实现🥳",children:[]},{level:3,title:"大梦想（想想就好🤔）",slug:"大梦想-想想就好🤔",children:[]}]},{level:2,title:"My treasure",slug:"my-treasure",children:[]},{level:2,title:"Travel timeline",slug:"travel-timeline",children:[{level:3,title:"校园时光，一去不复返",slug:"校园时光-一去不复返",children:[]},{level:3,title:"长沙",slug:"长沙",children:[]},{level:3,title:"南昌",slug:"南昌",children:[]},{level:3,title:"无锡",slug:"无锡",children:[]},{level:3,title:"上海",slug:"上海",children:[]},{level:3,title:"PPMT",slug:"ppmt",children:[]},{level:3,title:"南京",slug:"南京",children:[]},{level:3,title:"深圳",slug:"深圳",children:[]}]},{level:2,title:"To be continue...",slug:"to-be-continue",children:[]}],content:'\r\n## 🎈✨🎉Welcome!🎉✨🎈\r\n\r\n\r\n\r\nWelcome to Tangct\'s blog, where I show my learning notes and process. Here, you can learn some technology stacks and facets about front-end, as well as relevant notes of my school scientific research projects. Visit my [GitHub](https://github.com/Tangctt) and [CSDN](https://blog.csdn.net/Tang__CT) to learn more about the project source code and learning notes.\r\n> 欢迎来到我的博客，这里展示了我的学习笔记和学习过程。在这里，你可以看到关于前端的一些技术栈和面经，同时还有我在校科研项目的相关笔记。欢迎访问我的[Github](https://github.com/Tangctt)和[CSDN](https://blog.csdn.net/Tang__CT)，以了解更多项目源码及学习笔记。\r\n\r\n## Self-Introduction\r\n- **来自江苏无锡，98年属虎，双鱼座男生**\r\n- **目前在读研，辣鸡本科，牛马专业**\r\n- **热爱生活，乐观向上，喜欢吹牛**\r\n- **前端小白，正在努力学习中...**\r\n- **🥇互联网冲浪金牌选手**\r\n- **🐤宇宙一级潜在鸽王**\r\n- **🤐资深话题终结者**\r\n- **🦉退役熬夜选手**\r\n- **...**\r\n\r\n\r\n## Hobbies\r\n### 踢球踢球⚽！！！\r\n- **人菜瘾大，还总是受伤**\r\n- **坚持最久的爱好了属于是**\r\n- **逃课踢、下雨踢、下雪也踢**\r\n\r\n- **不知道这个爱好能不能坚持下去**\r\n\r\n\r\n\r\n### 骑车骑车🚲！！！\r\n- **曾梦想仗剑走天涯**\r\n- **来一场说走就走的旅行**\r\n- **长途、短途、上坡、越野...**\r\n- **自从有了山地车，一切就变得简单了**\r\n- **穿过峡谷，翻过雪山，路过无人的戈壁滩**\r\n  \r\n- **曾经最热爱的运动，也是最充满回忆的，不知以后能否拾起...**\r\n\r\n\r\n### Gaming🎮！！！\r\n- **重度游戏爱好者了**\r\n- **啥都爱玩，几乎不挑食**\r\n- **端游手游、王者吃鸡、鹅厂“大作”**\r\n- **战地、刺客信条、COD、Far Cry系列**\r\n- **3A、FPS、RPG、独立、休闲、竞技体育...**\r\n\r\n- **我不能没有游戏 ，就像西方不能没有耶路撒冷😂**\r\n\r\n\r\n\r\n## Stories\r\n#### 足球生涯⚽\r\n\r\n> 本科四年期间，每天不是去踢球，就是在去踢球的路上，也因此结识了一些“狐朋狗友”。可如今，随着一年接一年的毕业季，大家都已分道扬镳，有的去工作，有的读研，还有的报效祖国。\r\n\r\n<div align=center>\r\n<img src="pic/myself-2.jpg" width="76%" height="100%">\r\n</div>\r\n\r\n> 花有重开日，人无再少年。曾经一起踢球的绿茵场换了一波又一波的同学，我们存在过的痕迹也渐渐消失。九院的球场没了我们依旧很热闹，这片土地也在无时无刻上演着我们的故事。\r\n\r\n<div align=center>\r\n<img src="pic/myself-1.jpg" width="76%" height="100%">\r\n</div>\r\n\r\n- **谨以此纪念那些年一起踢球、一起欢乐、一起陪我度过我大学足球时光的兄弟们**\r\n\r\n#### 拉萨之旅🚲\r\n\r\n> 一场说走就走的旅行，源于对骑行的热爱，对自由的向往，和对远方的幻想。\r\n\r\n> G318-成都=>拉萨，总里程2155KM，历时22天，翻越12座海拔4000+的雪山...\r\n\r\n<div>\r\n<img src = "pic/myself-3.jpeg"  width = "48%"  ><img src = "pic/myself-4.jpeg"  width = "48%" align = right>\r\n</div>\r\n\r\n> 一路上虽历经风雨、高反等诸多困难，可还是敌不过世界最美景观大道带给我们的视觉冲击和心灵震撼。\r\n\r\n<div>\r\n<img src = "pic/myself-5.jpg"  width = "48%"  ><img src = "pic/myself-6.jpeg"  width = "48%" align = right>\r\n</div>\r\n\r\n> 禾尼的草原、然乌的阳光、米堆的冰川、拉萨的夕阳，是去过一次就一定想去第二次的地方，现在依然清晰地印在我的脑海之中。\r\n\r\n<div>\r\n<img src = "pic/myself-7.jpg"  width = "48%"  ><img src = "pic/myself-8.jpeg"  width = "48%" align = right>\r\n</div>\r\n\r\n> 当看到布达拉宫，一切皆释然，故事也随之戛然而止...\r\n\r\n<div>\r\n<img src = "pic/myself-9.jpeg"  width = "48%"  ><img src = "pic/myself-10.jpg"  width = "48%" align = right>\r\n</div>\r\n\r\n- **怀念那段梦幻的时光、自由骑行的我们，和令人流连忘返的拉萨之旅**\r\n\r\n\r\n## Wishes\r\n\r\n### 小目标（努力实现🥳）\r\n\r\n- **一切一切的前提，顺利毕业！！！**\r\n- **努力学习！成为前端大佬！**\r\n- **找到称心如意的工作**\r\n- **和小胡一起奋斗💑**\r\n\r\n- **赚钱、赚钱...**\r\n\r\n### 大梦想（想想就好🤔）\r\n\r\n- **拥有一个大大的房子**\r\n- **游遍祖国大好河山**\r\n\r\n- **财务自由...**\r\n\r\n``` python\r\n做人一定要有梦想，不然跟咸鱼有什么区别？\r\n就算做咸鱼，也要做最咸的那条！\r\n                                        ——星爷\r\n```\r\n\r\n\r\n\r\n## My treasure\r\n\r\n> 一个可爱且善良的女孩，陪我度过了大部分大学时光，在一起四年多了\r\n\r\n> 不用去怀疑她对我的感情，真诚、纯粹、就宛如山楂树之恋一般\r\n\r\n> 她很喜欢逛小红书，也喜欢潮玩盲盒PPMT，还喜欢和我聊天\r\n\r\n> 她喜欢四字弟弟YYQX，那个万千姐姐粉的顶流小鲜肉\r\n\r\n> 如果让我选择一个我最信任的人，那非她莫属了\r\n\r\n> 她最喜欢做的，是和她喜欢的人一起去旅游\r\n\r\n> 一起走遍大江南北，看尽五湖四海\r\n\r\n> 只要和她在一起我就非常开心\r\n\r\n> 我们要一直走下去呀💖...\r\n\r\n## Travel timeline\r\n\r\n### 校园时光，一去不复返\r\n\r\n> 无忧无虑的校园生活，阳光、草地、操场、你我\r\n\r\n<div>\r\n<img src = "pic/myself-11.jpeg"  width = "48%"  ><img src = "pic/myself-12.jpg"  width = "48%" align = right>\r\n</div>\r\n\r\n### 长沙\r\n\r\n> 细雨蒙蒙的橘子洲，坐在IFS上的Kaws\r\n\r\n<div>\r\n<img src = "pic/myself-13.jpeg"  width = "48%"  ><img src = "pic/myself-14.jpeg"  width = "48%" align = right>\r\n</div>\r\n\r\n### 南昌\r\n\r\n> 绿地双子塔，卢塞恩小镇\r\n\r\n<div>\r\n<img src = "pic/myself-15.jpeg"  width = "48%"  ><img src = "pic/myself-16.jpeg"  width = "48%" align = right>\r\n</div>\r\n\r\n### 无锡\r\n\r\n> 锡惠公园、灵山大佛\r\n\r\n<div>\r\n<img src = "pic/myself-17.jpeg"  width = "48%"  ><img src = "pic/myself-18.jpeg"  width = "48%" align = right>\r\n</div>\r\n\r\n### 上海\r\n\r\n> 拥挤的外滩，多抓鱼的试衣镜\r\n\r\n<div>\r\n<img src = "pic/myself-19.jpeg"  width = "48%"  ><img src = "pic/myself-20.jpeg"  width = "48%" align = right>\r\n</div>\r\n\r\n### PPMT\r\n\r\n> 竟然抽到了隐藏款“痛车”！太激动啦🎉！！！\r\n\r\n<div>\r\n<img src = "pic/myself-21.jpeg"  width = "48%"  ><img src = "pic/myself-22.jpeg"  width = "48%" align = right>\r\n</div>\r\n\r\n### 南京\r\n\r\n> 鸡鸣寺，钟山风景区\r\n\r\n<div>\r\n<img src = "pic/myself-23.jpg"  width = "48%"  ><img src = "pic/myself-24.jpg"  width = "48%" align = right>\r\n</div>\r\n\r\n### 深圳\r\n\r\n> 欢乐港湾摩天轮🎡，飞机溜溜球🛫\r\n\r\n<div>\r\n<img src = "pic/myself-25.jpg"  width = "48%"  ><img src = "pic/myself-26.jpg"  width = "48%" align = right>\r\n</div>\r\n\r\n- **未完待续...**\r\n\r\n\r\n\r\n## To be continue...\r\n\r\n``` python\r\n往事不可追，来者犹可忆\r\n                             ——《论语》\r\n```\r\n\r\n\r\n\r\n',contentRendered:'<h2 id="🎈✨🎉welcome-🎉✨🎈" tabindex="-1"><a class="header-anchor" href="#🎈✨🎉welcome-🎉✨🎈" aria-hidden="true">#</a> 🎈✨🎉Welcome!🎉✨🎈</h2>\n<p>Welcome to Tangct\'s blog, where I show my learning notes and process. Here, you can learn some technology stacks and facets about front-end, as well as relevant notes of my school scientific research projects. Visit my <a href="https://github.com/Tangctt" target="_blank" rel="noopener noreferrer">GitHub<ExternalLinkIcon/></a> and <a href="https://blog.csdn.net/Tang__CT" target="_blank" rel="noopener noreferrer">CSDN<ExternalLinkIcon/></a> to learn more about the project source code and learning notes.</p>\n<blockquote>\n<p>欢迎来到我的博客，这里展示了我的学习笔记和学习过程。在这里，你可以看到关于前端的一些技术栈和面经，同时还有我在校科研项目的相关笔记。欢迎访问我的<a href="https://github.com/Tangctt" target="_blank" rel="noopener noreferrer">Github<ExternalLinkIcon/></a>和<a href="https://blog.csdn.net/Tang__CT" target="_blank" rel="noopener noreferrer">CSDN<ExternalLinkIcon/></a>，以了解更多项目源码及学习笔记。</p>\n</blockquote>\n<h2 id="self-introduction" tabindex="-1"><a class="header-anchor" href="#self-introduction" aria-hidden="true">#</a> Self-Introduction</h2>\n<ul>\n<li><strong>来自江苏无锡，98年属虎，双鱼座男生</strong></li>\n<li><strong>目前在读研，辣鸡本科，牛马专业</strong></li>\n<li><strong>热爱生活，乐观向上，喜欢吹牛</strong></li>\n<li><strong>前端小白，正在努力学习中...</strong></li>\n<li><strong>🥇互联网冲浪金牌选手</strong></li>\n<li><strong>🐤宇宙一级潜在鸽王</strong></li>\n<li><strong>🤐资深话题终结者</strong></li>\n<li><strong>🦉退役熬夜选手</strong></li>\n<li><strong>...</strong></li>\n</ul>\n<h2 id="hobbies" tabindex="-1"><a class="header-anchor" href="#hobbies" aria-hidden="true">#</a> Hobbies</h2>\n<h3 id="踢球踢球⚽" tabindex="-1"><a class="header-anchor" href="#踢球踢球⚽" aria-hidden="true">#</a> 踢球踢球⚽！！！</h3>\n<ul>\n<li>\n<p><strong>人菜瘾大，还总是受伤</strong></p>\n</li>\n<li>\n<p><strong>坚持最久的爱好了属于是</strong></p>\n</li>\n<li>\n<p><strong>逃课踢、下雨踢、下雪也踢</strong></p>\n</li>\n<li>\n<p><strong>不知道这个爱好能不能坚持下去</strong></p>\n</li>\n</ul>\n<h3 id="骑车骑车🚲" tabindex="-1"><a class="header-anchor" href="#骑车骑车🚲" aria-hidden="true">#</a> 骑车骑车🚲！！！</h3>\n<ul>\n<li>\n<p><strong>曾梦想仗剑走天涯</strong></p>\n</li>\n<li>\n<p><strong>来一场说走就走的旅行</strong></p>\n</li>\n<li>\n<p><strong>长途、短途、上坡、越野...</strong></p>\n</li>\n<li>\n<p><strong>自从有了山地车，一切就变得简单了</strong></p>\n</li>\n<li>\n<p><strong>穿过峡谷，翻过雪山，路过无人的戈壁滩</strong></p>\n</li>\n<li>\n<p><strong>曾经最热爱的运动，也是最充满回忆的，不知以后能否拾起...</strong></p>\n</li>\n</ul>\n<h3 id="gaming🎮" tabindex="-1"><a class="header-anchor" href="#gaming🎮" aria-hidden="true">#</a> Gaming🎮！！！</h3>\n<ul>\n<li>\n<p><strong>重度游戏爱好者了</strong></p>\n</li>\n<li>\n<p><strong>啥都爱玩，几乎不挑食</strong></p>\n</li>\n<li>\n<p><strong>端游手游、王者吃鸡、鹅厂“大作”</strong></p>\n</li>\n<li>\n<p><strong>战地、刺客信条、COD、Far Cry系列</strong></p>\n</li>\n<li>\n<p><strong>3A、FPS、RPG、独立、休闲、竞技体育...</strong></p>\n</li>\n<li>\n<p><strong>我不能没有游戏 ，就像西方不能没有耶路撒冷😂</strong></p>\n</li>\n</ul>\n<h2 id="stories" tabindex="-1"><a class="header-anchor" href="#stories" aria-hidden="true">#</a> Stories</h2>\n<h4 id="足球生涯⚽" tabindex="-1"><a class="header-anchor" href="#足球生涯⚽" aria-hidden="true">#</a> 足球生涯⚽</h4>\n<blockquote>\n<p>本科四年期间，每天不是去踢球，就是在去踢球的路上，也因此结识了一些“狐朋狗友”。可如今，随着一年接一年的毕业季，大家都已分道扬镳，有的去工作，有的读研，还有的报效祖国。</p>\n</blockquote>\n<div align=center>\n<img src="pic/myself-2.jpg" width="76%" height="100%">\n</div>\n<blockquote>\n<p>花有重开日，人无再少年。曾经一起踢球的绿茵场换了一波又一波的同学，我们存在过的痕迹也渐渐消失。九院的球场没了我们依旧很热闹，这片土地也在无时无刻上演着我们的故事。</p>\n</blockquote>\n<div align=center>\n<img src="pic/myself-1.jpg" width="76%" height="100%">\n</div>\n<ul>\n<li><strong>谨以此纪念那些年一起踢球、一起欢乐、一起陪我度过我大学足球时光的兄弟们</strong></li>\n</ul>\n<h4 id="拉萨之旅🚲" tabindex="-1"><a class="header-anchor" href="#拉萨之旅🚲" aria-hidden="true">#</a> 拉萨之旅🚲</h4>\n<blockquote>\n<p>一场说走就走的旅行，源于对骑行的热爱，对自由的向往，和对远方的幻想。</p>\n</blockquote>\n<blockquote>\n<p>G318-成都=&gt;拉萨，总里程2155KM，历时22天，翻越12座海拔4000+的雪山...</p>\n</blockquote>\n<div>\n<img src = "pic/myself-3.jpeg"  width = "48%"  ><img src = "pic/myself-4.jpeg"  width = "48%" align = right>\n</div>\n<blockquote>\n<p>一路上虽历经风雨、高反等诸多困难，可还是敌不过世界最美景观大道带给我们的视觉冲击和心灵震撼。</p>\n</blockquote>\n<div>\n<img src = "pic/myself-5.jpg"  width = "48%"  ><img src = "pic/myself-6.jpeg"  width = "48%" align = right>\n</div>\n<blockquote>\n<p>禾尼的草原、然乌的阳光、米堆的冰川、拉萨的夕阳，是去过一次就一定想去第二次的地方，现在依然清晰地印在我的脑海之中。</p>\n</blockquote>\n<div>\n<img src = "pic/myself-7.jpg"  width = "48%"  ><img src = "pic/myself-8.jpeg"  width = "48%" align = right>\n</div>\n<blockquote>\n<p>当看到布达拉宫，一切皆释然，故事也随之戛然而止...</p>\n</blockquote>\n<div>\n<img src = "pic/myself-9.jpeg"  width = "48%"  ><img src = "pic/myself-10.jpg"  width = "48%" align = right>\n</div>\n<ul>\n<li><strong>怀念那段梦幻的时光、自由骑行的我们，和令人流连忘返的拉萨之旅</strong></li>\n</ul>\n<h2 id="wishes" tabindex="-1"><a class="header-anchor" href="#wishes" aria-hidden="true">#</a> Wishes</h2>\n<h3 id="小目标-努力实现🥳" tabindex="-1"><a class="header-anchor" href="#小目标-努力实现🥳" aria-hidden="true">#</a> 小目标（努力实现🥳）</h3>\n<ul>\n<li>\n<p><strong>一切一切的前提，顺利毕业！！！</strong></p>\n</li>\n<li>\n<p><strong>努力学习！成为前端大佬！</strong></p>\n</li>\n<li>\n<p><strong>找到称心如意的工作</strong></p>\n</li>\n<li>\n<p><strong>和小胡一起奋斗💑</strong></p>\n</li>\n<li>\n<p><strong>赚钱、赚钱...</strong></p>\n</li>\n</ul>\n<h3 id="大梦想-想想就好🤔" tabindex="-1"><a class="header-anchor" href="#大梦想-想想就好🤔" aria-hidden="true">#</a> 大梦想（想想就好🤔）</h3>\n<ul>\n<li>\n<p><strong>拥有一个大大的房子</strong></p>\n</li>\n<li>\n<p><strong>游遍祖国大好河山</strong></p>\n</li>\n<li>\n<p><strong>财务自由...</strong></p>\n</li>\n</ul>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>做人一定要有梦想，不然跟咸鱼有什么区别？\n就算做咸鱼，也要做最咸的那条！\n                                        ——星爷\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="my-treasure" tabindex="-1"><a class="header-anchor" href="#my-treasure" aria-hidden="true">#</a> My treasure</h2>\n<blockquote>\n<p>一个可爱且善良的女孩，陪我度过了大部分大学时光，在一起四年多了</p>\n</blockquote>\n<blockquote>\n<p>不用去怀疑她对我的感情，真诚、纯粹、就宛如山楂树之恋一般</p>\n</blockquote>\n<blockquote>\n<p>她很喜欢逛小红书，也喜欢潮玩盲盒PPMT，还喜欢和我聊天</p>\n</blockquote>\n<blockquote>\n<p>她喜欢四字弟弟YYQX，那个万千姐姐粉的顶流小鲜肉</p>\n</blockquote>\n<blockquote>\n<p>如果让我选择一个我最信任的人，那非她莫属了</p>\n</blockquote>\n<blockquote>\n<p>她最喜欢做的，是和她喜欢的人一起去旅游</p>\n</blockquote>\n<blockquote>\n<p>一起走遍大江南北，看尽五湖四海</p>\n</blockquote>\n<blockquote>\n<p>只要和她在一起我就非常开心</p>\n</blockquote>\n<blockquote>\n<p>我们要一直走下去呀💖...</p>\n</blockquote>\n<h2 id="travel-timeline" tabindex="-1"><a class="header-anchor" href="#travel-timeline" aria-hidden="true">#</a> Travel timeline</h2>\n<h3 id="校园时光-一去不复返" tabindex="-1"><a class="header-anchor" href="#校园时光-一去不复返" aria-hidden="true">#</a> 校园时光，一去不复返</h3>\n<blockquote>\n<p>无忧无虑的校园生活，阳光、草地、操场、你我</p>\n</blockquote>\n<div>\n<img src = "pic/myself-11.jpeg"  width = "48%"  ><img src = "pic/myself-12.jpg"  width = "48%" align = right>\n</div>\n<h3 id="长沙" tabindex="-1"><a class="header-anchor" href="#长沙" aria-hidden="true">#</a> 长沙</h3>\n<blockquote>\n<p>细雨蒙蒙的橘子洲，坐在IFS上的Kaws</p>\n</blockquote>\n<div>\n<img src = "pic/myself-13.jpeg"  width = "48%"  ><img src = "pic/myself-14.jpeg"  width = "48%" align = right>\n</div>\n<h3 id="南昌" tabindex="-1"><a class="header-anchor" href="#南昌" aria-hidden="true">#</a> 南昌</h3>\n<blockquote>\n<p>绿地双子塔，卢塞恩小镇</p>\n</blockquote>\n<div>\n<img src = "pic/myself-15.jpeg"  width = "48%"  ><img src = "pic/myself-16.jpeg"  width = "48%" align = right>\n</div>\n<h3 id="无锡" tabindex="-1"><a class="header-anchor" href="#无锡" aria-hidden="true">#</a> 无锡</h3>\n<blockquote>\n<p>锡惠公园、灵山大佛</p>\n</blockquote>\n<div>\n<img src = "pic/myself-17.jpeg"  width = "48%"  ><img src = "pic/myself-18.jpeg"  width = "48%" align = right>\n</div>\n<h3 id="上海" tabindex="-1"><a class="header-anchor" href="#上海" aria-hidden="true">#</a> 上海</h3>\n<blockquote>\n<p>拥挤的外滩，多抓鱼的试衣镜</p>\n</blockquote>\n<div>\n<img src = "pic/myself-19.jpeg"  width = "48%"  ><img src = "pic/myself-20.jpeg"  width = "48%" align = right>\n</div>\n<h3 id="ppmt" tabindex="-1"><a class="header-anchor" href="#ppmt" aria-hidden="true">#</a> PPMT</h3>\n<blockquote>\n<p>竟然抽到了隐藏款“痛车”！太激动啦🎉！！！</p>\n</blockquote>\n<div>\n<img src = "pic/myself-21.jpeg"  width = "48%"  ><img src = "pic/myself-22.jpeg"  width = "48%" align = right>\n</div>\n<h3 id="南京" tabindex="-1"><a class="header-anchor" href="#南京" aria-hidden="true">#</a> 南京</h3>\n<blockquote>\n<p>鸡鸣寺，钟山风景区</p>\n</blockquote>\n<div>\n<img src = "pic/myself-23.jpg"  width = "48%"  ><img src = "pic/myself-24.jpg"  width = "48%" align = right>\n</div>\n<h3 id="深圳" tabindex="-1"><a class="header-anchor" href="#深圳" aria-hidden="true">#</a> 深圳</h3>\n<blockquote>\n<p>欢乐港湾摩天轮🎡，飞机溜溜球🛫</p>\n</blockquote>\n<div>\n<img src = "pic/myself-25.jpg"  width = "48%"  ><img src = "pic/myself-26.jpg"  width = "48%" align = right>\n</div>\n<ul>\n<li><strong>未完待续...</strong></li>\n</ul>\n<h2 id="to-be-continue" tabindex="-1"><a class="header-anchor" href="#to-be-continue" aria-hidden="true">#</a> To be continue...</h2>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>往事不可追，来者犹可忆\n                             ——《论语》\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/myself.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"myself",filePath:"C:/Users/67099/Desktop/blog-demo/docs/myself.md",filePathRelative:"myself.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/myself.html.vue",componentFilePathRelative:"pages/myself.html.vue",componentFileChunkName:"v-b1714770",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/myself.html.js",dataFilePathRelative:"pages/myself.html.js",dataFileChunkName:"v-b1714770",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/myself.html",htmlFilePathRelative:"myself.html"},{data:{key:"v-58298250",path:"/Javascript/GET%E4%B8%8EPOST%E6%96%B9%E6%B3%95%E7%9A%84%E5%8C%BA%E5%88%AB.html",title:"GET与POST方法的区别",lang:"zh-CN",frontmatter:{date:"2022/5/2 20:08",coverUrl:"/pic/8.jpg",stick:!1,keyword:"Get,Post,方法",description:"GET与POST方法的区别",title:"GET与POST方法的区别",tag:["Get","Post","方法"],categories:["Get","Post","方法"]},excerpt:"",headers:[{level:2,title:"✨GET与POST方法的区别✨",slug:"✨get与post方法的区别✨",children:[{level:3,title:"GET",slug:"get",children:[]},{level:3,title:"POST",slug:"post",children:[]},{level:3,title:"GET与POST的区别",slug:"get与post的区别",children:[]},{level:3,title:"在以下情况中使用POST请求",slug:"在以下情况中使用post请求",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-58298250",path:"/Javascript/GET%E4%B8%8EPOST%E6%96%B9%E6%B3%95%E7%9A%84%E5%8C%BA%E5%88%AB.html",title:"GET与POST方法的区别",lang:"zh-CN",frontmatter:{date:"2022/5/2 20:08",coverUrl:"/pic/8.jpg",stick:!1,keyword:"Get,Post,方法",description:"GET与POST方法的区别",title:"GET与POST方法的区别",tag:["Get","Post","方法"],categories:["Get","Post","方法"]},excerpt:"",headers:[{level:2,title:"✨GET与POST方法的区别✨",slug:"✨get与post方法的区别✨",children:[{level:3,title:"GET",slug:"get",children:[]},{level:3,title:"POST",slug:"post",children:[]},{level:3,title:"GET与POST的区别",slug:"get与post的区别",children:[]},{level:3,title:"在以下情况中使用POST请求",slug:"在以下情况中使用post请求",children:[]}]}],content:"\r\n\r\n## ✨GET与POST方法的区别✨\r\n\r\n### GET\r\n- 一般用于从服务器上获取数组，使用URL传递参数，对所发送信息的数量也有限制，一般在2000个字符\r\n\r\n### POST\r\n- 一般用于服务器上数据的修改/传送，对所发送信息的数量没有限制\r\n\r\n> GET方式需要使用`Request.QueryString`来取得变量的值，而POST方式通过`Request.Form`来获取变量的值。也就是说，GET是通过地址栏来传值，而POST是通过提交表单来传值。\r\n\r\n### GET与POST的区别\r\n\r\n1. GET提交的数据会放在URL之后，以？分割URL和传输数据，参数之间以&相连，如`EditPosts.aspx?name=test1&id=123456.`。POST方法是把提交的数据放在HTTP包的Body中\r\n2. GET提交的数据大小有限制，最多只能由2K字节（因为浏览器对URL的长度有限制），而POST方法提交的数据没有限制\r\n3. GET方式需要使用`Request.QueryString`来取得变量的值，而POST方式通过`Request.Form`来获取变量的值。\r\n4. GET方式提交数据，会带来安全问题，比如一个登录界面，通过GET方式提交数据时，用户名和密码将出现在URL上，如果页面可以被缓存或者其他人可以访问这台机器，就可以从历史记录获得该用户的账号和密码。\r\n\r\n### 在以下情况中使用POST请求\r\n1. 无法使用缓存文件（更新服务器上的文件或数据库）\r\n2. 向服务器发送大量数据（POST没有数据量限制）\r\n3. 发送包含未知字符的用户输入时，POST比GET更稳定也更可靠\r\n   ",contentRendered:'<h2 id="✨get与post方法的区别✨" tabindex="-1"><a class="header-anchor" href="#✨get与post方法的区别✨" aria-hidden="true">#</a> ✨GET与POST方法的区别✨</h2>\n<h3 id="get" tabindex="-1"><a class="header-anchor" href="#get" aria-hidden="true">#</a> GET</h3>\n<ul>\n<li>一般用于从服务器上获取数组，使用URL传递参数，对所发送信息的数量也有限制，一般在2000个字符</li>\n</ul>\n<h3 id="post" tabindex="-1"><a class="header-anchor" href="#post" aria-hidden="true">#</a> POST</h3>\n<ul>\n<li>一般用于服务器上数据的修改/传送，对所发送信息的数量没有限制</li>\n</ul>\n<blockquote>\n<p>GET方式需要使用<code>Request.QueryString</code>来取得变量的值，而POST方式通过<code>Request.Form</code>来获取变量的值。也就是说，GET是通过地址栏来传值，而POST是通过提交表单来传值。</p>\n</blockquote>\n<h3 id="get与post的区别" tabindex="-1"><a class="header-anchor" href="#get与post的区别" aria-hidden="true">#</a> GET与POST的区别</h3>\n<ol>\n<li>GET提交的数据会放在URL之后，以？分割URL和传输数据，参数之间以&amp;相连，如<code>EditPosts.aspx?name=test1&amp;id=123456.</code>。POST方法是把提交的数据放在HTTP包的Body中</li>\n<li>GET提交的数据大小有限制，最多只能由2K字节（因为浏览器对URL的长度有限制），而POST方法提交的数据没有限制</li>\n<li>GET方式需要使用<code>Request.QueryString</code>来取得变量的值，而POST方式通过<code>Request.Form</code>来获取变量的值。</li>\n<li>GET方式提交数据，会带来安全问题，比如一个登录界面，通过GET方式提交数据时，用户名和密码将出现在URL上，如果页面可以被缓存或者其他人可以访问这台机器，就可以从历史记录获得该用户的账号和密码。</li>\n</ol>\n<h3 id="在以下情况中使用post请求" tabindex="-1"><a class="header-anchor" href="#在以下情况中使用post请求" aria-hidden="true">#</a> 在以下情况中使用POST请求</h3>\n<ol>\n<li>无法使用缓存文件（更新服务器上的文件或数据库）</li>\n<li>向服务器发送大量数据（POST没有数据量限制）</li>\n<li>发送包含未知字符的用户输入时，POST比GET更稳定也更可靠</li>\n</ol>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Javascript/GET与POST方法的区别.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"GET与POST方法的区别",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Javascript/GET与POST方法的区别.md",filePathRelative:"Javascript/GET与POST方法的区别.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Javascript/GET与POST方法的区别.html.vue",componentFilePathRelative:"pages/Javascript/GET与POST方法的区别.html.vue",componentFileChunkName:"v-58298250",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Javascript/GET与POST方法的区别.html.js",dataFilePathRelative:"pages/Javascript/GET与POST方法的区别.html.js",dataFileChunkName:"v-58298250",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Javascript/GET与POST方法的区别.html",htmlFilePathRelative:"Javascript/GET与POST方法的区别.html"},{data:{key:"v-18e4ba4c",path:"/Javascript/Node.js%E4%B8%A4%E7%A7%8D%E8%B0%83%E7%94%A8Mongodb%E6%96%B9%E6%B3%95.html",title:"Node.js两种调用Mongodb方法",lang:"zh-CN",frontmatter:{date:"2022/4/9 20:08",coverUrl:"/pic/8.jpg",stick:!1,keyword:"Node.js,Mongodb,方法",description:"Node.js两种调用Mongodb方法",title:"Node.js两种调用Mongodb方法",tag:["Node.js","Mongodb","方法"],categories:["Node.js","Mondodb","方法"]},excerpt:"",headers:[{level:2,title:"✨Node.js两种调用Mongodb方法✨",slug:"✨node-js两种调用mongodb方法✨",children:[{level:3,title:"方法一：MongoClient",slug:"方法一-mongoclient",children:[]},{level:3,title:"方法二：Mongoose",slug:"方法二-mongoose",children:[]},{level:3,title:"new Object",slug:"new-object",children:[]},{level:3,title:"使用案例",slug:"使用案例",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-18e4ba4c",path:"/Javascript/Node.js%E4%B8%A4%E7%A7%8D%E8%B0%83%E7%94%A8Mongodb%E6%96%B9%E6%B3%95.html",title:"Node.js两种调用Mongodb方法",lang:"zh-CN",frontmatter:{date:"2022/4/9 20:08",coverUrl:"/pic/8.jpg",stick:!1,keyword:"Node.js,Mongodb,方法",description:"Node.js两种调用Mongodb方法",title:"Node.js两种调用Mongodb方法",tag:["Node.js","Mongodb","方法"],categories:["Node.js","Mondodb","方法"]},excerpt:"",headers:[{level:2,title:"✨Node.js两种调用Mongodb方法✨",slug:"✨node-js两种调用mongodb方法✨",children:[{level:3,title:"方法一：MongoClient",slug:"方法一-mongoclient",children:[]},{level:3,title:"方法二：Mongoose",slug:"方法二-mongoose",children:[]},{level:3,title:"new Object",slug:"new-object",children:[]},{level:3,title:"使用案例",slug:"使用案例",children:[]}]}],content:"\r\n\r\n## ✨Node.js两种调用Mongodb方法✨\r\n### 方法一：MongoClient\r\n#### 介绍\r\n- MongoClient是Mongodb官方提供的Node.js驱动，继承于mongo类（现在mongo模块被淘汰了），对MongoDB的操作和在mongo shell中几乎一致\r\n- 虽然已经不是Node.js操作 MongoDB的首选库了，但还是很值得学习的。目前Node.js操作 MongoDB的首选库是Mongoose\r\n#### 创建链接：\r\n```javascript \r\nvar MongoClient = require('mongodb').MongoClient;\r\nvar url = \"mongodb://localhost:27017/runoob\";//mongodb默认地址\r\n \r\nMongoClient.connect(url, function(err, db) {\r\n  if (err) throw err;\r\n  console.log(\"数据库已创建!\");\r\n  db.close();\r\n});\r\n```\r\n### 方法二：Mongoose\r\n#### 介绍\r\n- Mongoose是MongoDB的一个对象模型工具，是基于node-mongodb-native开发的MongoDB的nodejs驱动，也目前是Node.js操作 MongoDB的首选库。\r\n- Mongoose 是一个让我们可以通过Node来操作MongoDB数据库的一个模块\r\n- Mongoose 是一个对象文档模型（ODM）库，它是对Node原生的MongoDB模块进行了进一步的优化封装\r\n- 大多数情况下，他被用来把结构化的模式应用到一个MongoDB集合，并提供了验证和类型装换等好处\r\n- 基于MongoDB驱动，通过关系型数据库的思想来实现非关系型数据库\r\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2b129b0bcfe84a9aa6e021b8d606e00b.png#pic_center)\r\n#### 基础概念\r\n1. Schema：模型类的骨架，通过Schema可以生成模型类，通过模型类可以生成文档。\r\n2. 每一个Schema对应MongoDB中的一个集合。Schema定义了集合中文档的字段格式。mongoose 出于可维护性和易用性的目的定义Schema来限定文档结构，但是MongoDB没有这个限制，也就是说MongoDB的文档无论什么结构都可以存储\r\n3. Model：由Schema产生的构造器，具有属性和行为。Modal的每一个实例就是MongoDB的一个文档。\r\n4. Instance：Model的实例，通过new Model()得到，也就是MongoDB的一个文档。\r\n5. Mongoose是MongoDB的一个对象模型工具，也就是说Mongoose是通过操作对象模型来操作MongoDB的，而Schema是模型类的骨架，换言之，Mongoose 的一切始于 Schema。\r\n### new Object\r\n- Schema（模式对象）\r\n\t——Schema 对象定义约束了数据库中的文档结构\r\n- Model\r\n\t——Model 对象作为集合中的所有文档的表示，相当于MongoDB中的collection，它的每一个实例就是一个document文档\r\n- Document\r\n\t——Document表示集合中的具体文档，相当于collection中的一个具体文档\r\n- 关系：Schema生成Model，Model创造Document\r\n#### 简单使用\r\n前提：安装MongoDB，Nodejs\r\n\r\n1. 下载安装Mongoose\r\n\r\n\t```\r\n\tnpm i mongoose --save\r\n\t```\r\n2. 项目中引入mongoose\r\n\t```\r\n\tvar mongoose = require(‘mongoose’)\r\n\t```\r\n3. 连接MongoDB数据库\r\n\t```\r\n\tmongoose.connect(‘mongodb://数据库ip地址 : 端口号( 默认端口27017可以省略 )/数据库名’)\r\n\t```\r\n\t##### 数据库连接状态\r\n\t1. connect()返回的是一个待定状态，在mongoose中有一个属性叫 connection 用来表示数据库的连接\r\n\r\n\t2. 通过监视该对象可以用来监听数据库的连接与断开\r\n\r\n\t3.  数据库连接成功事件\r\n\t\t```\r\n\t\tmongoose.connection.once(‘open’ , () => {})\r\n\t\t```\r\n\t4. 数据库断开事件\r\n\t\t```\r\n\t\tmongoose.connection.once(‘close’ , () => {})\r\n\t\t```\r\n4. 创建Schema（模式）对象\r\n\t```\r\n\tvar stuSchema = new Schema({})\r\n\t```\r\n\t1.  通过Schema创建Model\r\n\t2. Model 代表的是数据库中的集合，通过Model才能对数据库进行操作\r\n5. 映射\r\n\t```\r\n\tvar stuModel = mongoose.model(‘student’,stuSchema)\r\n\t```\r\n\t##### 参数\r\n \t1. 要映射的集合名\r\n \t2. 创建的约束（Schema对象）\r\n6. 通过映射返回的值对数据库进行增、删、改、查\r\n7. 断开数据库连接（一般不使用）\r\n\t```\r\n\tmongoose.disconnect()\r\n\t```\r\n### 使用案例\r\n```javascript\r\nvar mongoose = require('mongoose')\r\nvar Schema = mongoose.Schema;\r\n//连接数据库\r\nmongoose.connect('mongodb://localhost:27017/student',{\r\n    useNewUrlParser: true \r\n})\r\n\r\n//监听数据库连接状态\r\nmongoose.connection.once('open',()=>{\r\n    console.log('数据库连接成功……')\r\n})\r\nmongoose.connection.once('close',()=>{\r\n    console.log('数据库断开……')\r\n})\r\n\r\n//创建Schema对象（约束）\r\nvar stuSchema = new Schema({\r\n    name: String,\r\n    age: Number,\r\n    gender:{\r\n        type: String,\r\n        default:'male'\r\n    },\r\n    addr: String\r\n})\r\n\r\n//将stuSchema映射到一个MongoDB collection并定义这个文档的构成\r\nvar stuModle = mongoose.model('student',stuSchema)\r\n\r\n//向student数据库中插入数据\r\nstuModle.create({\r\n    name:\"小明\",\r\n    age:\"20\",\r\n    addr:\"天津\"\r\n},(err,docs)=>{\r\n    if(!err){\r\n        console.log('插入成功'+docs)\r\n    }\r\n})\r\n/*\r\n* 控制台结果：\r\n* 数据库连接成功……\r\n* 插入成功{\r\n*   gender: 'male',\r\n*   _id: 6017a189372ece49089d79c7,\r\n*   name: '小明',\r\n*   age: 20,\r\n*  addr: '天津',\r\n*   __v: 0\r\n* }\r\n*/\r\n/*\r\n* 数据库结果：\r\n* | _id                      | gender | name | age  | addr | __v  |\r\n* | ------------------------ | ------ | ---- | ---- | ---- | ---- |\r\n* | 6017a189372ece49089d79c7 | male   | 小明  | 20   |  天津 | 0    |\r\n*/\r\n```\r\n##### Mongoose优点\r\n- 为文档创建模式结构（Schema），也可以说是约束\r\n- 对模型中的对象/文档进行验证\r\n- 数据可以通过类型装换装换为对象模型\r\n- 可以使用中间件来应用业务逻辑挂钩\r\n- 相比MongoDB驱动更容易",contentRendered:'<h2 id="✨node-js两种调用mongodb方法✨" tabindex="-1"><a class="header-anchor" href="#✨node-js两种调用mongodb方法✨" aria-hidden="true">#</a> ✨Node.js两种调用Mongodb方法✨</h2>\n<h3 id="方法一-mongoclient" tabindex="-1"><a class="header-anchor" href="#方法一-mongoclient" aria-hidden="true">#</a> 方法一：MongoClient</h3>\n<h4 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h4>\n<ul>\n<li>MongoClient是Mongodb官方提供的Node.js驱动，继承于mongo类（现在mongo模块被淘汰了），对MongoDB的操作和在mongo shell中几乎一致</li>\n<li>虽然已经不是Node.js操作 MongoDB的首选库了，但还是很值得学习的。目前Node.js操作 MongoDB的首选库是Mongoose</li>\n</ul>\n<h4 id="创建链接" tabindex="-1"><a class="header-anchor" href="#创建链接" aria-hidden="true">#</a> 创建链接：</h4>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">var</span> MongoClient <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mongodb\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>MongoClient<span class="token punctuation">;</span>\n<span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token string">"mongodb://localhost:27017/runoob"</span><span class="token punctuation">;</span><span class="token comment">//mongodb默认地址</span>\n \nMongoClient<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> db</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"数据库已创建!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  db<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="方法二-mongoose" tabindex="-1"><a class="header-anchor" href="#方法二-mongoose" aria-hidden="true">#</a> 方法二：Mongoose</h3>\n<h4 id="介绍-1" tabindex="-1"><a class="header-anchor" href="#介绍-1" aria-hidden="true">#</a> 介绍</h4>\n<ul>\n<li>Mongoose是MongoDB的一个对象模型工具，是基于node-mongodb-native开发的MongoDB的nodejs驱动，也目前是Node.js操作 MongoDB的首选库。</li>\n<li>Mongoose 是一个让我们可以通过Node来操作MongoDB数据库的一个模块</li>\n<li>Mongoose 是一个对象文档模型（ODM）库，它是对Node原生的MongoDB模块进行了进一步的优化封装</li>\n<li>大多数情况下，他被用来把结构化的模式应用到一个MongoDB集合，并提供了验证和类型装换等好处</li>\n<li>基于MongoDB驱动，通过关系型数据库的思想来实现非关系型数据库\n<img src="https://ooszy.cco.vin/img/blog-public/ljz.gif" alt="在这里插入图片描述" originSrc="https://img-blog.csdnimg.cn/2b129b0bcfe84a9aa6e021b8d606e00b.png#pic_center" data="aurora"></li>\n</ul>\n<h4 id="基础概念" tabindex="-1"><a class="header-anchor" href="#基础概念" aria-hidden="true">#</a> 基础概念</h4>\n<ol>\n<li>Schema：模型类的骨架，通过Schema可以生成模型类，通过模型类可以生成文档。</li>\n<li>每一个Schema对应MongoDB中的一个集合。Schema定义了集合中文档的字段格式。mongoose 出于可维护性和易用性的目的定义Schema来限定文档结构，但是MongoDB没有这个限制，也就是说MongoDB的文档无论什么结构都可以存储</li>\n<li>Model：由Schema产生的构造器，具有属性和行为。Modal的每一个实例就是MongoDB的一个文档。</li>\n<li>Instance：Model的实例，通过new Model()得到，也就是MongoDB的一个文档。</li>\n<li>Mongoose是MongoDB的一个对象模型工具，也就是说Mongoose是通过操作对象模型来操作MongoDB的，而Schema是模型类的骨架，换言之，Mongoose 的一切始于 Schema。</li>\n</ol>\n<h3 id="new-object" tabindex="-1"><a class="header-anchor" href="#new-object" aria-hidden="true">#</a> new Object</h3>\n<ul>\n<li>Schema（模式对象）\n——Schema 对象定义约束了数据库中的文档结构</li>\n<li>Model\n——Model 对象作为集合中的所有文档的表示，相当于MongoDB中的collection，它的每一个实例就是一个document文档</li>\n<li>Document\n——Document表示集合中的具体文档，相当于collection中的一个具体文档</li>\n<li>关系：Schema生成Model，Model创造Document</li>\n</ul>\n<h4 id="简单使用" tabindex="-1"><a class="header-anchor" href="#简单使用" aria-hidden="true">#</a> 简单使用</h4>\n<p>前提：安装MongoDB，Nodejs</p>\n<ol>\n<li>\n<p>下载安装Mongoose</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>npm i mongoose --save\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n<li>\n<p>项目中引入mongoose</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>var mongoose = require(‘mongoose’)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n<li>\n<p>连接MongoDB数据库</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>mongoose.connect(‘mongodb://数据库ip地址 : 端口号( 默认端口27017可以省略 )/数据库名’)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h5 id="数据库连接状态" tabindex="-1"><a class="header-anchor" href="#数据库连接状态" aria-hidden="true">#</a> 数据库连接状态</h5>\n<ol>\n<li>\n<p>connect()返回的是一个待定状态，在mongoose中有一个属性叫 connection 用来表示数据库的连接</p>\n</li>\n<li>\n<p>通过监视该对象可以用来监听数据库的连接与断开</p>\n</li>\n<li>\n<p>数据库连接成功事件</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>mongoose.connection.once(‘open’ , () => {})\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n<li>\n<p>数据库断开事件</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>mongoose.connection.once(‘close’ , () => {})\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n</ol>\n</li>\n<li>\n<p>创建Schema（模式）对象</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>var stuSchema = new Schema({})\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol>\n<li>通过Schema创建Model</li>\n<li>Model 代表的是数据库中的集合，通过Model才能对数据库进行操作</li>\n</ol>\n</li>\n<li>\n<p>映射</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>var stuModel = mongoose.model(‘student’,stuSchema)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h5 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h5>\n<ol>\n<li>要映射的集合名</li>\n<li>创建的约束（Schema对象）</li>\n</ol>\n</li>\n<li>\n<p>通过映射返回的值对数据库进行增、删、改、查</p>\n</li>\n<li>\n<p>断开数据库连接（一般不使用）</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>mongoose.disconnect()\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n</ol>\n<h3 id="使用案例" tabindex="-1"><a class="header-anchor" href="#使用案例" aria-hidden="true">#</a> 使用案例</h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">var</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mongoose\'</span><span class="token punctuation">)</span>\n<span class="token keyword">var</span> Schema <span class="token operator">=</span> mongoose<span class="token punctuation">.</span>Schema<span class="token punctuation">;</span>\n<span class="token comment">//连接数据库</span>\nmongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">\'mongodb://localhost:27017/student\'</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">useNewUrlParser</span><span class="token operator">:</span> <span class="token boolean">true</span> \n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">//监听数据库连接状态</span>\nmongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">\'open\'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'数据库连接成功……\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\nmongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">\'close\'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'数据库断开……\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">//创建Schema对象（约束）</span>\n<span class="token keyword">var</span> stuSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> String<span class="token punctuation">,</span>\n    <span class="token literal-property property">age</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>\n    <span class="token literal-property property">gender</span><span class="token operator">:</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>\n        <span class="token keyword">default</span><span class="token operator">:</span><span class="token string">\'male\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">addr</span><span class="token operator">:</span> String\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">//将stuSchema映射到一个MongoDB collection并定义这个文档的构成</span>\n<span class="token keyword">var</span> stuModle <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">\'student\'</span><span class="token punctuation">,</span>stuSchema<span class="token punctuation">)</span>\n\n<span class="token comment">//向student数据库中插入数据</span>\nstuModle<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">"小明"</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token string">"20"</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">addr</span><span class="token operator">:</span><span class="token string">"天津"</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>docs</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">{</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'插入成功\'</span><span class="token operator">+</span>docs<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">/*\n* 控制台结果：\n* 数据库连接成功……\n* 插入成功{\n*   gender: \'male\',\n*   _id: 6017a189372ece49089d79c7,\n*   name: \'小明\',\n*   age: 20,\n*  addr: \'天津\',\n*   __v: 0\n* }\n*/</span>\n<span class="token comment">/*\n* 数据库结果：\n* | _id                      | gender | name | age  | addr | __v  |\n* | ------------------------ | ------ | ---- | ---- | ---- | ---- |\n* | 6017a189372ece49089d79c7 | male   | 小明  | 20   |  天津 | 0    |\n*/</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br></div></div><h5 id="mongoose优点" tabindex="-1"><a class="header-anchor" href="#mongoose优点" aria-hidden="true">#</a> Mongoose优点</h5>\n<ul>\n<li>为文档创建模式结构（Schema），也可以说是约束</li>\n<li>对模型中的对象/文档进行验证</li>\n<li>数据可以通过类型装换装换为对象模型</li>\n<li>可以使用中间件来应用业务逻辑挂钩</li>\n<li>相比MongoDB驱动更容易</li>\n</ul>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Javascript/Node.js两种调用Mongodb方法.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"Node.js两种调用Mongodb方法",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Javascript/Node.js两种调用Mongodb方法.md",filePathRelative:"Javascript/Node.js两种调用Mongodb方法.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Javascript/Node.js两种调用Mongodb方法.html.vue",componentFilePathRelative:"pages/Javascript/Node.js两种调用Mongodb方法.html.vue",componentFileChunkName:"v-18e4ba4c",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Javascript/Node.js两种调用Mongodb方法.html.js",dataFilePathRelative:"pages/Javascript/Node.js两种调用Mongodb方法.html.js",dataFileChunkName:"v-18e4ba4c",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Javascript/Node.js两种调用Mongodb方法.html",htmlFilePathRelative:"Javascript/Node.js两种调用Mongodb方法.html"},{data:{key:"v-bb61501a",path:"/Javascript/null%E5%92%8Cundefined%E5%8C%BA%E5%88%AB.html",title:"null和undefined区别",lang:"zh-CN",frontmatter:{date:"2022/3/2 14:15",coverUrl:"/pic/8.jpg",stick:!1,keyword:"javascript,undefined",description:"null和undefined区别",title:"null和undefined区别",tag:["javascript","undefined"],categories:["javascript","undefined"]},excerpt:"",headers:[{level:2,title:"✨null和undefined区别✨",slug:"✨null和undefined区别✨",children:[{level:3,title:"Undefined类型只有一个值，即undefined。当声明的变量还未被初始化时，变量的默认值为undefined。",slug:"undefined类型只有一个值-即undefined。当声明的变量还未被初始化时-变量的默认值为undefined。",children:[]},{level:3,title:"Null类型也只有一个值，即null。null用来表示尚未存在的对象，常用来表示函数企图返回一个不存在的对象。",slug:"null类型也只有一个值-即null。null用来表示尚未存在的对象-常用来表示函数企图返回一个不存在的对象。",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-bb61501a",path:"/Javascript/null%E5%92%8Cundefined%E5%8C%BA%E5%88%AB.html",title:"null和undefined区别",lang:"zh-CN",frontmatter:{date:"2022/3/2 14:15",coverUrl:"/pic/8.jpg",stick:!1,keyword:"javascript,undefined",description:"null和undefined区别",title:"null和undefined区别",tag:["javascript","undefined"],categories:["javascript","undefined"]},excerpt:"",headers:[{level:2,title:"✨null和undefined区别✨",slug:"✨null和undefined区别✨",children:[{level:3,title:"Undefined类型只有一个值，即undefined。当声明的变量还未被初始化时，变量的默认值为undefined。",slug:"undefined类型只有一个值-即undefined。当声明的变量还未被初始化时-变量的默认值为undefined。",children:[]},{level:3,title:"Null类型也只有一个值，即null。null用来表示尚未存在的对象，常用来表示函数企图返回一个不存在的对象。",slug:"null类型也只有一个值-即null。null用来表示尚未存在的对象-常用来表示函数企图返回一个不存在的对象。",children:[]}]}],content:"\r\n\r\n\r\n## ✨null和undefined区别✨\r\n\r\n\r\n### Undefined类型只有一个值，即undefined。当声明的变量还未被初始化时，变量的默认值为undefined。\r\n> 用法：\r\n\t变量被声明了，但没有赋值时，就等于undefined。\r\n\t调用函数时，应该提供的参数没有提供，该参数等于undefined。\r\n\t对象没有赋值的属性，该属性的值为undefined。\r\n\t函数没有返回值时，默认返回undefined。\r\n\r\n### Null类型也只有一个值，即null。null用来表示尚未存在的对象，常用来表示函数企图返回一个不存在的对象。\r\n> 用法：\r\n\t作为函数的参数，表示该函数的参数不是对象。\r\n\t作为对象原型链的终点。\r\n",contentRendered:'<h2 id="✨null和undefined区别✨" tabindex="-1"><a class="header-anchor" href="#✨null和undefined区别✨" aria-hidden="true">#</a> ✨null和undefined区别✨</h2>\n<h3 id="undefined类型只有一个值-即undefined。当声明的变量还未被初始化时-变量的默认值为undefined。" tabindex="-1"><a class="header-anchor" href="#undefined类型只有一个值-即undefined。当声明的变量还未被初始化时-变量的默认值为undefined。" aria-hidden="true">#</a> Undefined类型只有一个值，即undefined。当声明的变量还未被初始化时，变量的默认值为undefined。</h3>\n<blockquote>\n<p>用法：\n变量被声明了，但没有赋值时，就等于undefined。\n调用函数时，应该提供的参数没有提供，该参数等于undefined。\n对象没有赋值的属性，该属性的值为undefined。\n函数没有返回值时，默认返回undefined。</p>\n</blockquote>\n<h3 id="null类型也只有一个值-即null。null用来表示尚未存在的对象-常用来表示函数企图返回一个不存在的对象。" tabindex="-1"><a class="header-anchor" href="#null类型也只有一个值-即null。null用来表示尚未存在的对象-常用来表示函数企图返回一个不存在的对象。" aria-hidden="true">#</a> Null类型也只有一个值，即null。null用来表示尚未存在的对象，常用来表示函数企图返回一个不存在的对象。</h3>\n<blockquote>\n<p>用法：\n作为函数的参数，表示该函数的参数不是对象。\n作为对象原型链的终点。</p>\n</blockquote>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Javascript/null和undefined区别.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"null和undefined区别",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Javascript/null和undefined区别.md",filePathRelative:"Javascript/null和undefined区别.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Javascript/null和undefined区别.html.vue",componentFilePathRelative:"pages/Javascript/null和undefined区别.html.vue",componentFileChunkName:"v-bb61501a",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Javascript/null和undefined区别.html.js",dataFilePathRelative:"pages/Javascript/null和undefined区别.html.js",dataFileChunkName:"v-bb61501a",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Javascript/null和undefined区别.html",htmlFilePathRelative:"Javascript/null和undefined区别.html"},{data:{key:"v-6382c4c6",path:"/Javascript/%E8%AE%BF%E9%97%AEnode-express%E4%B8%ADstatic%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6.html",title:"访问node-express中static静态文件",lang:"zh-CN",frontmatter:{date:"2022/4/19 20:08",coverUrl:"/pic/8.jpg",stick:!1,keyword:"Node.js,express,静态",description:"访问node-express中static静态文件",title:"访问node-express中static静态文件",tag:["Node.js","express","静态"],categories:["Node.js","express","静态"]},excerpt:"",headers:[{level:2,title:"✨访问node-express中static静态文件✨",slug:"✨访问node-express中static静态文件✨",children:[{level:3,title:"应用场合",slug:"应用场合",children:[]},{level:3,title:"解决方法",slug:"解决方法",children:[]},{level:3,title:"示例",slug:"示例",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-6382c4c6",path:"/Javascript/%E8%AE%BF%E9%97%AEnode-express%E4%B8%ADstatic%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6.html",title:"访问node-express中static静态文件",lang:"zh-CN",frontmatter:{date:"2022/4/19 20:08",coverUrl:"/pic/8.jpg",stick:!1,keyword:"Node.js,express,静态",description:"访问node-express中static静态文件",title:"访问node-express中static静态文件",tag:["Node.js","express","静态"],categories:["Node.js","express","静态"]},excerpt:"",headers:[{level:2,title:"✨访问node-express中static静态文件✨",slug:"✨访问node-express中static静态文件✨",children:[{level:3,title:"应用场合",slug:"应用场合",children:[]},{level:3,title:"解决方法",slug:"解决方法",children:[]},{level:3,title:"示例",slug:"示例",children:[]}]}],content:"\r\n\r\n## ✨访问node-express中static静态文件✨\r\n\r\n### 应用场合\r\n- 在项目中需要使用到`node express`框架进行中间件开发、\r\n- 使用`express`托管静态文件或开放其它静态文件\r\n\r\n### 解决方法\r\n> 通过`express`内置的`express.static`方法可以方便地托管静态文件，例如图片、CSS、JavaScript文件等\r\n> 将静态资源文件所在目录作为参数传递给`express.static`中间件就可以提供静态资源文件的访问\r\n\r\n### 示例\r\n\r\n1. express框架下运行以下代码\r\n```javascript\r\n#注意格式\r\napp.use('/public',express.static('public'));//将文件设置成静态\r\n\r\n#若需要开发其它静态文件，则不需要'/public'路径\r\napp.use(express.static('Simulation_Result'))\r\n```\r\n\r\n2. 在项目中访问静态文件地址即可\r\n\r\n```javascript\r\n     let _PicUrl = [\r\n        \"http://127.0.0.1:5678/S-1.png\",\r\n        \"http://127.0.0.1:5678/S-2.png\"\r\n     ]\r\n```\r\n**注意：静态文件的路径为express中间件设置，端口号必须为后端端口号。若访问了错误的路径或者端口号，则页面为空白**",contentRendered:'<h2 id="✨访问node-express中static静态文件✨" tabindex="-1"><a class="header-anchor" href="#✨访问node-express中static静态文件✨" aria-hidden="true">#</a> ✨访问node-express中static静态文件✨</h2>\n<h3 id="应用场合" tabindex="-1"><a class="header-anchor" href="#应用场合" aria-hidden="true">#</a> 应用场合</h3>\n<ul>\n<li>在项目中需要使用到<code>node express</code>框架进行中间件开发、</li>\n<li>使用<code>express</code>托管静态文件或开放其它静态文件</li>\n</ul>\n<h3 id="解决方法" tabindex="-1"><a class="header-anchor" href="#解决方法" aria-hidden="true">#</a> 解决方法</h3>\n<blockquote>\n<p>通过<code>express</code>内置的<code>express.static</code>方法可以方便地托管静态文件，例如图片、CSS、JavaScript文件等\n将静态资源文件所在目录作为参数传递给<code>express.static</code>中间件就可以提供静态资源文件的访问</p>\n</blockquote>\n<h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h3>\n<ol>\n<li>express框架下运行以下代码</li>\n</ol>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code>#注意格式\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">\'/public\'</span><span class="token punctuation">,</span>express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span><span class="token string">\'public\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将文件设置成静态</span>\n\n#若需要开发其它静态文件，则不需要<span class="token string">\'/public\'</span>路径\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span><span class="token string">\'Simulation_Result\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="2">\n<li>在项目中访问静态文件地址即可</li>\n</ol>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code>     <span class="token keyword">let</span> _PicUrl <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token string">"http://127.0.0.1:5678/S-1.png"</span><span class="token punctuation">,</span>\n        <span class="token string">"http://127.0.0.1:5678/S-2.png"</span>\n     <span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>注意：静态文件的路径为express中间件设置，端口号必须为后端端口号。若访问了错误的路径或者端口号，则页面为空白</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Javascript/访问node-express中static静态文件.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"访问node-express中static静态文件",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Javascript/访问node-express中static静态文件.md",filePathRelative:"Javascript/访问node-express中static静态文件.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Javascript/访问node-express中static静态文件.html.vue",componentFilePathRelative:"pages/Javascript/访问node-express中static静态文件.html.vue",componentFileChunkName:"v-6382c4c6",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Javascript/访问node-express中static静态文件.html.js",dataFilePathRelative:"pages/Javascript/访问node-express中static静态文件.html.js",dataFileChunkName:"v-6382c4c6",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Javascript/访问node-express中static静态文件.html",htmlFilePathRelative:"Javascript/访问node-express中static静态文件.html"},{data:{key:"v-e6a0db48",path:"/Debug/css%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8node-sass%E5%AE%89%E8%A3%85%E5%87%BA%E9%94%99.html",title:"css预处理器node-sass安装出错",lang:"zh-CN",frontmatter:{date:"2022/4/19 14:10",coverUrl:"/pic/5.jpg",stick:!1,keyword:"node-sass,debug",description:"css预处理器node-sass安装出错",title:"css预处理器node-sass安装出错",tag:["node-sass","debug"],categories:["node-sass","debug"]},excerpt:"",headers:[{level:2,title:"✨css预处理器node-sass安装出错✨",slug:"✨css预处理器node-sass安装出错✨",children:[{level:3,title:"在npm i 后发现项目跑不起来，报错node-sass包安装失败、找不到或版本问题",slug:"在npm-i-后发现项目跑不起来-报错node-sass包安装失败、找不到或版本问题",children:[]},{level:3,title:"经过一系列的实验，最终发现是node的版本问题",slug:"经过一系列的实验-最终发现是node的版本问题",children:[]},{level:3,title:"降低node版本即可",slug:"降低node版本即可",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-e6a0db48",path:"/Debug/css%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8node-sass%E5%AE%89%E8%A3%85%E5%87%BA%E9%94%99.html",title:"css预处理器node-sass安装出错",lang:"zh-CN",frontmatter:{date:"2022/4/19 14:10",coverUrl:"/pic/5.jpg",stick:!1,keyword:"node-sass,debug",description:"css预处理器node-sass安装出错",title:"css预处理器node-sass安装出错",tag:["node-sass","debug"],categories:["node-sass","debug"]},excerpt:"",headers:[{level:2,title:"✨css预处理器node-sass安装出错✨",slug:"✨css预处理器node-sass安装出错✨",children:[{level:3,title:"在npm i 后发现项目跑不起来，报错node-sass包安装失败、找不到或版本问题",slug:"在npm-i-后发现项目跑不起来-报错node-sass包安装失败、找不到或版本问题",children:[]},{level:3,title:"经过一系列的实验，最终发现是node的版本问题",slug:"经过一系列的实验-最终发现是node的版本问题",children:[]},{level:3,title:"降低node版本即可",slug:"降低node版本即可",children:[]}]}],content:"\r\n\r\n\r\n\r\n\r\n\r\n## ✨css预处理器`node-sass`安装出错✨\r\n\r\n```\r\nModule build failed (from ./node_modules/sass-loader/lib/loader.js):\r\nError: Cannot find module 'node-sass'\r\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:636:15)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:562:25)\r\n    at Module.require (internal/modules/cjs/loader.js:692:17)\r\n    at require (internal/modules/cjs/helpers.js:25:18)\r\n```\r\n\r\n### 在`npm i` 后发现项目跑不起来，报错`node-sass`包安装失败、找不到或版本问题\r\n- 网上大多数的解决办法是直接安装对应版本的`node-sass`包\r\n- 或修改config文件中的`node-sass`包版本后再`npm i`\r\n\r\n### 经过一系列的实验，最终发现是node的版本问题\r\n- 新版本的`node`在`npm i`时，无法安装老版本的`node-sass`\r\n- 如果安装的新版本的`node-saaa`，项目跑不起来\r\n- 只能降低node的版本，新版本采用的是16...，老版本则是14...\r\n\r\n### 降低`node`版本即可",contentRendered:'<h2 id="✨css预处理器node-sass安装出错✨" tabindex="-1"><a class="header-anchor" href="#✨css预处理器node-sass安装出错✨" aria-hidden="true">#</a> ✨css预处理器<code>node-sass</code>安装出错✨</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>Module build failed (from ./node_modules/sass-loader/lib/loader.js):\nError: Cannot find module \'node-sass\'\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:636:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:562:25)\n    at Module.require (internal/modules/cjs/loader.js:692:17)\n    at require (internal/modules/cjs/helpers.js:25:18)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="在npm-i-后发现项目跑不起来-报错node-sass包安装失败、找不到或版本问题" tabindex="-1"><a class="header-anchor" href="#在npm-i-后发现项目跑不起来-报错node-sass包安装失败、找不到或版本问题" aria-hidden="true">#</a> 在<code>npm i</code> 后发现项目跑不起来，报错<code>node-sass</code>包安装失败、找不到或版本问题</h3>\n<ul>\n<li>网上大多数的解决办法是直接安装对应版本的<code>node-sass</code>包</li>\n<li>或修改config文件中的<code>node-sass</code>包版本后再<code>npm i</code></li>\n</ul>\n<h3 id="经过一系列的实验-最终发现是node的版本问题" tabindex="-1"><a class="header-anchor" href="#经过一系列的实验-最终发现是node的版本问题" aria-hidden="true">#</a> 经过一系列的实验，最终发现是node的版本问题</h3>\n<ul>\n<li>新版本的<code>node</code>在<code>npm i</code>时，无法安装老版本的<code>node-sass</code></li>\n<li>如果安装的新版本的<code>node-saaa</code>，项目跑不起来</li>\n<li>只能降低node的版本，新版本采用的是16...，老版本则是14...</li>\n</ul>\n<h3 id="降低node版本即可" tabindex="-1"><a class="header-anchor" href="#降低node版本即可" aria-hidden="true">#</a> 降低<code>node</code>版本即可</h3>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Debug/css预处理器node-sass安装出错.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"css预处理器node-sass安装出错",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Debug/css预处理器node-sass安装出错.md",filePathRelative:"Debug/css预处理器node-sass安装出错.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Debug/css预处理器node-sass安装出错.html.vue",componentFilePathRelative:"pages/Debug/css预处理器node-sass安装出错.html.vue",componentFileChunkName:"v-e6a0db48",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Debug/css预处理器node-sass安装出错.html.js",dataFilePathRelative:"pages/Debug/css预处理器node-sass安装出错.html.js",dataFileChunkName:"v-e6a0db48",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Debug/css预处理器node-sass安装出错.html",htmlFilePathRelative:"Debug/css预处理器node-sass安装出错.html"},{data:{key:"v-9a49e110",path:"/Debug/Vue%E9%A1%B9%E7%9B%AE%E9%A1%B5%E9%9D%A2%E7%A9%BA%E7%99%BD.html",title:"Vue项目页面空白",lang:"zh-CN",frontmatter:{date:"2022/3/1 22:20",coverUrl:"/pic/5.jpg",stick:!1,keyword:"Vue,路由,配置",description:"Vue项目页面空白",title:"Vue项目页面空白",tag:["Vue","路由","配置"],categories:["Vue","路由","配置"]},excerpt:"",headers:[{level:2,title:"✨Vue项目页面空白✨",slug:"✨vue项目页面空白✨",children:[{level:3,title:"问题描述：",slug:"问题描述",children:[]},{level:3,title:"解决办法：",slug:"解决办法",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-9a49e110",path:"/Debug/Vue%E9%A1%B9%E7%9B%AE%E9%A1%B5%E9%9D%A2%E7%A9%BA%E7%99%BD.html",title:"Vue项目页面空白",lang:"zh-CN",frontmatter:{date:"2022/3/1 22:20",coverUrl:"/pic/5.jpg",stick:!1,keyword:"Vue,路由,配置",description:"Vue项目页面空白",title:"Vue项目页面空白",tag:["Vue","路由","配置"],categories:["Vue","路由","配置"]},excerpt:"",headers:[{level:2,title:"✨Vue项目页面空白✨",slug:"✨vue项目页面空白✨",children:[{level:3,title:"问题描述：",slug:"问题描述",children:[]},{level:3,title:"解决办法：",slug:"解决办法",children:[]}]}],content:"\r\n\r\n\r\n## ✨Vue项目页面空白✨\r\n\r\n\r\n### 问题描述：\r\n项目地址打开，页面为空白\r\n\r\n### 解决办法：\r\n检查路由配置\r\n1. 因不小心改了路由配置，导致初始路由错误\r\n错误示范：\r\n~~~javascript\r\nconst routes = [\r\n  {\r\n    path: '/main_page',\t\t\t\t\t# 此处的初始路由错误，应该为空\t\t\r\n    name: 'main_page',\t\t\t\t\t# 如果/main_page已开发，就不会出现白屏，会显示/mainpage内容\t\t\t\r\n    component: main_page,\r\n    \r\n  }\r\n]\r\n~~~\r\n\r\n2. 修改路由配置\r\n正确示范：\r\n~~~javascript\r\nconst routes = [\r\n  {\r\n    path: '/',\t\t\t\t\t\t\r\n    name: 'main_page',\t\t\t\t\t\t\t\t\r\n    component: main_page,\r\n    \r\n  }\r\n]\r\n~~~\r\n3.访问地址\r\nLocal:   http://localhost:8080/\r\n页面成功跳转到首页\r\n",contentRendered:'<h2 id="✨vue项目页面空白✨" tabindex="-1"><a class="header-anchor" href="#✨vue项目页面空白✨" aria-hidden="true">#</a> ✨Vue项目页面空白✨</h2>\n<h3 id="问题描述" tabindex="-1"><a class="header-anchor" href="#问题描述" aria-hidden="true">#</a> 问题描述：</h3>\n<p>项目地址打开，页面为空白</p>\n<h3 id="解决办法" tabindex="-1"><a class="header-anchor" href="#解决办法" aria-hidden="true">#</a> 解决办法：</h3>\n<p>检查路由配置</p>\n<ol>\n<li>因不小心改了路由配置，导致初始路由错误\n错误示范：</li>\n</ol>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">\'/main_page\'</span><span class="token punctuation">,</span>\t\t\t\t\t# 此处的初始路由错误，应该为空\t\t\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'main_page\'</span><span class="token punctuation">,</span>\t\t\t\t\t# 如果<span class="token operator">/</span>main_page已开发，就不会出现白屏，会显示<span class="token operator">/</span>mainpage内容\t\t\t\n    <span class="token literal-property property">component</span><span class="token operator">:</span> main_page<span class="token punctuation">,</span>\n    \n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ol start="2">\n<li>修改路由配置\n正确示范：</li>\n</ol>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">\'/\'</span><span class="token punctuation">,</span>\t\t\t\t\t\t\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'main_page\'</span><span class="token punctuation">,</span>\t\t\t\t\t\t\t\t\n    <span class="token literal-property property">component</span><span class="token operator">:</span> main_page<span class="token punctuation">,</span>\n    \n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>3.访问地址\nLocal:   http://localhost:8080/\n页面成功跳转到首页</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Debug/Vue项目页面空白.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"Vue项目页面空白",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Debug/Vue项目页面空白.md",filePathRelative:"Debug/Vue项目页面空白.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Debug/Vue项目页面空白.html.vue",componentFilePathRelative:"pages/Debug/Vue项目页面空白.html.vue",componentFileChunkName:"v-9a49e110",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Debug/Vue项目页面空白.html.js",dataFilePathRelative:"pages/Debug/Vue项目页面空白.html.js",dataFileChunkName:"v-9a49e110",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Debug/Vue项目页面空白.html",htmlFilePathRelative:"Debug/Vue项目页面空白.html"},{data:{key:"v-6b9f561e",path:"/Vue/Cookie-LocalStorage-SessionStorage.html",title:"Cookie、LocalStorage、SessionStorage的异同",lang:"zh-CN",frontmatter:{date:"2022/5/4 14:10",coverUrl:"/pic/7.jpg",stick:!1,keyword:"Cookie,LocalStorage,SessionStorage",description:"Cookie、LocalStorage、SessionStorage的异同",title:"Cookie、LocalStorage、SessionStorage的异同",tag:["Cookie","LocalStorage","SessionStorage"],categories:["Cookie","LocalStorage","SessionStorage"]},excerpt:"",headers:[{level:2,title:"✨Cookie、LocalStorage、SessionStorage的异同✨",slug:"✨cookie、localstorage、sessionstorage的异同✨",children:[{level:3,title:"基本概念",slug:"基本概念",children:[]},{level:3,title:"Cookie与Session的区别",slug:"cookie与session的区别",children:[]},{level:3,title:"Cookie、LocalStorage、SessionStorage的异同",slug:"cookie、localstorage、sessionstorage的异同",children:[]},{level:3,title:"LocalStorage与SessionStorage的API",slug:"localstorage与sessionstorage的api",children:[]},{level:3,title:"应用场景",slug:"应用场景",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-6b9f561e",path:"/Vue/Cookie-LocalStorage-SessionStorage.html",title:"Cookie、LocalStorage、SessionStorage的异同",lang:"zh-CN",frontmatter:{date:"2022/5/4 14:10",coverUrl:"/pic/7.jpg",stick:!1,keyword:"Cookie,LocalStorage,SessionStorage",description:"Cookie、LocalStorage、SessionStorage的异同",title:"Cookie、LocalStorage、SessionStorage的异同",tag:["Cookie","LocalStorage","SessionStorage"],categories:["Cookie","LocalStorage","SessionStorage"]},excerpt:"",headers:[{level:2,title:"✨Cookie、LocalStorage、SessionStorage的异同✨",slug:"✨cookie、localstorage、sessionstorage的异同✨",children:[{level:3,title:"基本概念",slug:"基本概念",children:[]},{level:3,title:"Cookie与Session的区别",slug:"cookie与session的区别",children:[]},{level:3,title:"Cookie、LocalStorage、SessionStorage的异同",slug:"cookie、localstorage、sessionstorage的异同",children:[]},{level:3,title:"LocalStorage与SessionStorage的API",slug:"localstorage与sessionstorage的api",children:[]},{level:3,title:"应用场景",slug:"应用场景",children:[]}]}],content:"\r\n\r\n## ✨Cookie、LocalStorage、SessionStorage的异同✨\r\n\r\n### 基本概念\r\n- Cookie 的大小限制为4kb左右，主要作用是保存登录信息，比如登录某个网站时候看到“记住密码”，一般都是通过在 Cookie 中存入一段辨别用户身份的数据来实现的\r\n- LocalStorage 和 sessionStorage 都是 HTML5 标准中新加入的技术，主要用来做本地存储，但是二者保存数据的生命周期不同\r\n- Session 是“会话”的意思，sessionStorage 只是可以将一部分数据在当前会话中保存下来，刷新页面数据依旧存在，但当页面关闭后，sessionStorage 中的数据就会被清空。而 LocalStorage 存储的数据除非被清除，否者永远存在本地\r\n\r\n\r\n### Cookie与Session的区别\r\n\r\n- cookie数据存放在浏览器中，session数据存放在服务器上\r\n- cookie是不安全的，别人可以分析存放在本地的cookie并进行cookie诈骗，考虑到安全性能，应尽量使用session\r\n- session会在一定时间内保存在服务器上。当访问增多时，会比较占用服务器的性能。考虑到服务性能，应尽量使用cookie\r\n- 单个cookie保存的数据不能超过4k，很多浏览器都限制一个站点最多保存20个cookie\r\n\r\n> cookie和session都用来存储用户信息，cookie存放于客户端有可能被窃取，所以cookie一般用来存放不敏感的信息，比如用户设置的网站主题，敏感的信息用session存储，比如用户的登录信息\r\n\r\n### Cookie、LocalStorage、SessionStorage的异同\r\n- HTML5中提出了webStorage的概念，webStorage包括sessionStorage和localStorage，只为了保存数据，不会与服务器进行通信\r\n- cookie,localStorage,sessionStorage都是在客户端保存数据，存储数据的类型：字符串\r\n- webStorage不会随着HTTP header发送到服务器端，所以安全性相对来说比cookie高，不必担心截获\r\n- 生命周期不同（见后文），localStorage要手动清除，sessionStorage在浏览器关闭后清除\r\n\r\n![](https://img-blog.csdnimg.cn/16ab8f69dfa94df28e0a796896d122f6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVGFuZ2N0dA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center)\r\n\r\n### LocalStorage与SessionStorage的API\r\n```javascript\r\nxxxxxStorage.setItem('key',value)\r\n// 接收一个键和值作为参数，把键值对添加到存储中\r\n// 如果键名存在，则更新其对应的值。\r\n\r\nxxxxxStorage.getItem('key')\r\n// 接收一个键名作为参数，返回键名对应的值\r\n\r\nxxxxxStorage.removeItem('key')\r\n// 接收一个键名作为参数，并把该键名从存储中删除\r\n\r\nxxxxxStorage.clear()\r\n// 清空存储中的所有数据\r\n\r\n// 注意：只能存储字符串，不能存储对象、JSON等其他数据格式\r\n\r\n// 存储对象时，需要通过JSON.stringify()将对象转化为字符串\r\nlocalStorage.setItem(key,JSON.stringify(data))\r\n// 取出对象时，需要通过JSON.parse()将字符串转化为对象\r\nJSON.parse(localStorage.getItem(key))\r\n```\r\n\r\n### 应用场景\r\n\r\n- 因为考虑到每个 HTTP 请求都会带着 Cookie 的信息，所以 Cookie 当然是能精简就精简，比较常用的一个应用场景就是判断用户是否登录。\r\n- 针对登录过的用户，服务器端会在他登录时往 Cookie 中插入一段加密过的唯一辨识单一用户的辨识码，下次只要读取这个值就可以判断当前用户是否登录啦\r\n- Localstorage常用于长期登录，适合长期保存在本地的数据，比如用户信息\r\n- Sessionstorage常用于敏感账号一次性登陆，如关闭当前页面再次打开页面就要重新登陆\r\n\r\n",contentRendered:'<h2 id="✨cookie、localstorage、sessionstorage的异同✨" tabindex="-1"><a class="header-anchor" href="#✨cookie、localstorage、sessionstorage的异同✨" aria-hidden="true">#</a> ✨Cookie、LocalStorage、SessionStorage的异同✨</h2>\n<h3 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念" aria-hidden="true">#</a> 基本概念</h3>\n<ul>\n<li>Cookie 的大小限制为4kb左右，主要作用是保存登录信息，比如登录某个网站时候看到“记住密码”，一般都是通过在 Cookie 中存入一段辨别用户身份的数据来实现的</li>\n<li>LocalStorage 和 sessionStorage 都是 HTML5 标准中新加入的技术，主要用来做本地存储，但是二者保存数据的生命周期不同</li>\n<li>Session 是“会话”的意思，sessionStorage 只是可以将一部分数据在当前会话中保存下来，刷新页面数据依旧存在，但当页面关闭后，sessionStorage 中的数据就会被清空。而 LocalStorage 存储的数据除非被清除，否者永远存在本地</li>\n</ul>\n<h3 id="cookie与session的区别" tabindex="-1"><a class="header-anchor" href="#cookie与session的区别" aria-hidden="true">#</a> Cookie与Session的区别</h3>\n<ul>\n<li>cookie数据存放在浏览器中，session数据存放在服务器上</li>\n<li>cookie是不安全的，别人可以分析存放在本地的cookie并进行cookie诈骗，考虑到安全性能，应尽量使用session</li>\n<li>session会在一定时间内保存在服务器上。当访问增多时，会比较占用服务器的性能。考虑到服务性能，应尽量使用cookie</li>\n<li>单个cookie保存的数据不能超过4k，很多浏览器都限制一个站点最多保存20个cookie</li>\n</ul>\n<blockquote>\n<p>cookie和session都用来存储用户信息，cookie存放于客户端有可能被窃取，所以cookie一般用来存放不敏感的信息，比如用户设置的网站主题，敏感的信息用session存储，比如用户的登录信息</p>\n</blockquote>\n<h3 id="cookie、localstorage、sessionstorage的异同" tabindex="-1"><a class="header-anchor" href="#cookie、localstorage、sessionstorage的异同" aria-hidden="true">#</a> Cookie、LocalStorage、SessionStorage的异同</h3>\n<ul>\n<li>HTML5中提出了webStorage的概念，webStorage包括sessionStorage和localStorage，只为了保存数据，不会与服务器进行通信</li>\n<li>cookie,localStorage,sessionStorage都是在客户端保存数据，存储数据的类型：字符串</li>\n<li>webStorage不会随着HTTP header发送到服务器端，所以安全性相对来说比cookie高，不必担心截获</li>\n<li>生命周期不同（见后文），localStorage要手动清除，sessionStorage在浏览器关闭后清除</li>\n</ul>\n<p><img src="https://ooszy.cco.vin/img/blog-public/ljz.gif" alt="" originSrc="https://img-blog.csdnimg.cn/16ab8f69dfa94df28e0a796896d122f6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVGFuZ2N0dA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" data="aurora"></p>\n<h3 id="localstorage与sessionstorage的api" tabindex="-1"><a class="header-anchor" href="#localstorage与sessionstorage的api" aria-hidden="true">#</a> LocalStorage与SessionStorage的API</h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code>xxxxxStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">\'key\'</span><span class="token punctuation">,</span>value<span class="token punctuation">)</span>\n<span class="token comment">// 接收一个键和值作为参数，把键值对添加到存储中</span>\n<span class="token comment">// 如果键名存在，则更新其对应的值。</span>\n\nxxxxxStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">\'key\'</span><span class="token punctuation">)</span>\n<span class="token comment">// 接收一个键名作为参数，返回键名对应的值</span>\n\nxxxxxStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">\'key\'</span><span class="token punctuation">)</span>\n<span class="token comment">// 接收一个键名作为参数，并把该键名从存储中删除</span>\n\nxxxxxStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token comment">// 清空存储中的所有数据</span>\n\n<span class="token comment">// 注意：只能存储字符串，不能存储对象、JSON等其他数据格式</span>\n\n<span class="token comment">// 存储对象时，需要通过JSON.stringify()将对象转化为字符串</span>\nlocalStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">// 取出对象时，需要通过JSON.parse()将字符串转化为对象</span>\n<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="应用场景" tabindex="-1"><a class="header-anchor" href="#应用场景" aria-hidden="true">#</a> 应用场景</h3>\n<ul>\n<li>因为考虑到每个 HTTP 请求都会带着 Cookie 的信息，所以 Cookie 当然是能精简就精简，比较常用的一个应用场景就是判断用户是否登录。</li>\n<li>针对登录过的用户，服务器端会在他登录时往 Cookie 中插入一段加密过的唯一辨识单一用户的辨识码，下次只要读取这个值就可以判断当前用户是否登录啦</li>\n<li>Localstorage常用于长期登录，适合长期保存在本地的数据，比如用户信息</li>\n<li>Sessionstorage常用于敏感账号一次性登陆，如关闭当前页面再次打开页面就要重新登陆</li>\n</ul>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Vue/Cookie-LocalStorage-SessionStorage.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"Cookie-LocalStorage-SessionStorage",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Vue/Cookie-LocalStorage-SessionStorage.md",filePathRelative:"Vue/Cookie-LocalStorage-SessionStorage.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Vue/Cookie-LocalStorage-SessionStorage.html.vue",componentFilePathRelative:"pages/Vue/Cookie-LocalStorage-SessionStorage.html.vue",componentFileChunkName:"v-6b9f561e",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Vue/Cookie-LocalStorage-SessionStorage.html.js",dataFilePathRelative:"pages/Vue/Cookie-LocalStorage-SessionStorage.html.js",dataFileChunkName:"v-6b9f561e",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Vue/Cookie-LocalStorage-SessionStorage.html",htmlFilePathRelative:"Vue/Cookie-LocalStorage-SessionStorage.html"},{data:{key:"v-36024825",path:"/Vue/vue%E7%BB%84%E4%BB%B6%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html",title:"vue组件声明周期",lang:"zh-CN",frontmatter:{date:"2022/3/2 14:10",coverUrl:"/pic/7.jpg",stick:!1,keyword:"Vue,组件,生命周期",description:"vue组件声明周期",title:"vue组件声明周期",tag:["Vue","组件","生命周期"],categories:["Vue","组件","生命周期"]},excerpt:"",headers:[{level:2,title:"✨vue组件声明周期✨",slug:"✨vue组件声明周期✨",children:[{level:3,title:"单组件声明周期图",slug:"单组件声明周期图",children:[]},{level:3,title:"父子组件生命周期图",slug:"父子组件生命周期图",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-36024825",path:"/Vue/vue%E7%BB%84%E4%BB%B6%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html",title:"vue组件声明周期",lang:"zh-CN",frontmatter:{date:"2022/3/2 14:10",coverUrl:"/pic/7.jpg",stick:!1,keyword:"Vue,组件,生命周期",description:"vue组件声明周期",title:"vue组件声明周期",tag:["Vue","组件","生命周期"],categories:["Vue","组件","生命周期"]},excerpt:"",headers:[{level:2,title:"✨vue组件声明周期✨",slug:"✨vue组件声明周期✨",children:[{level:3,title:"单组件声明周期图",slug:"单组件声明周期图",children:[]},{level:3,title:"父子组件生命周期图",slug:"父子组件生命周期图",children:[]}]}],content:"\r\n\r\n## ✨vue组件声明周期✨\r\n\r\n\r\n### 单组件声明周期图\r\n```\r\n挂载： beforeCreate => created => beforeMount => mounted\r\n更新： beforeUpdate => updated\r\n销毁： beforeDestroy => destroyed\r\n```\r\n\r\n### 父子组件生命周期图\r\n```\r\n挂载： parent beforeCreate => parent created => parent beforeMount => child beforeCreate => child created => child beforeMount => child mounted => parent mounted\r\n更新： parent beforeUpdate => child beforeUpdate => child updated => parent updated\r\n销毁： parent beforeDestroy => child beforeDestroy => child destroyed => parent destroyed\r\n```\r\n\r\n> 从以上能够看出：\r\n挂载时，子组件是在父组件before mount后开始挂载，并且子组件先mounted，父组件随后\r\n更新时，子组件是在父组件before update后开始更新，子组件先于父组件更新\r\n销毁时，子组件是在父组件before destroy后开始销毁，并且是子组件先销毁，父组件随后。\r\n",contentRendered:'<h2 id="✨vue组件声明周期✨" tabindex="-1"><a class="header-anchor" href="#✨vue组件声明周期✨" aria-hidden="true">#</a> ✨vue组件声明周期✨</h2>\n<h3 id="单组件声明周期图" tabindex="-1"><a class="header-anchor" href="#单组件声明周期图" aria-hidden="true">#</a> 单组件声明周期图</h3>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>挂载： beforeCreate => created => beforeMount => mounted\n更新： beforeUpdate => updated\n销毁： beforeDestroy => destroyed\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="父子组件生命周期图" tabindex="-1"><a class="header-anchor" href="#父子组件生命周期图" aria-hidden="true">#</a> 父子组件生命周期图</h3>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>挂载： parent beforeCreate => parent created => parent beforeMount => child beforeCreate => child created => child beforeMount => child mounted => parent mounted\n更新： parent beforeUpdate => child beforeUpdate => child updated => parent updated\n销毁： parent beforeDestroy => child beforeDestroy => child destroyed => parent destroyed\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote>\n<p>从以上能够看出：\n挂载时，子组件是在父组件before mount后开始挂载，并且子组件先mounted，父组件随后\n更新时，子组件是在父组件before update后开始更新，子组件先于父组件更新\n销毁时，子组件是在父组件before destroy后开始销毁，并且是子组件先销毁，父组件随后。</p>\n</blockquote>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Vue/vue组件生命周期.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"vue组件生命周期",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Vue/vue组件生命周期.md",filePathRelative:"Vue/vue组件生命周期.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Vue/vue组件生命周期.html.vue",componentFilePathRelative:"pages/Vue/vue组件生命周期.html.vue",componentFileChunkName:"v-36024825",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Vue/vue组件生命周期.html.js",dataFilePathRelative:"pages/Vue/vue组件生命周期.html.js",dataFileChunkName:"v-36024825",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Vue/vue组件生命周期.html",htmlFilePathRelative:"Vue/vue组件生命周期.html"},{data:{key:"v-a796ac14",path:"/Vue/Vue%E7%BB%84%E4%BB%B6%E9%97%B4%E5%B8%B8%E7%94%A8%E4%BC%A0%E5%8F%82%E6%96%B9%E5%BC%8F.html",title:"Vue组件间常用传参方式",lang:"zh-CN",frontmatter:{date:"2022/5/2 14:10",coverUrl:"/pic/7.jpg",stick:!1,keyword:"Vue,组件,传参",description:"Vue组件间常用传参方式",title:"Vue组件间常用传参方式",tag:["Vue","组件","传参"],categories:["Vue","组件","传参"]},excerpt:"",headers:[{level:2,title:"✨Vue组件间常用传参方式✨",slug:"✨vue组件间常用传参方式✨",children:[{level:3,title:"1. props、emit（最常用的父子通讯方式）",slug:"_1-props、emit-最常用的父子通讯方式",children:[]},{level:3,title:"2. 事件总线EventBus（常用任意两个组件之间的通讯）",slug:"_2-事件总线eventbus-常用任意两个组件之间的通讯",children:[]},{level:3,title:"3.Vuex状态管理（vue的核心插件，用于任意组件的任意通讯，需注意刷新后有可能vuex数据会丢失）",slug:"_3-vuex状态管理-vue的核心插件-用于任意组件的任意通讯-需注意刷新后有可能vuex数据会丢失",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-a796ac14",path:"/Vue/Vue%E7%BB%84%E4%BB%B6%E9%97%B4%E5%B8%B8%E7%94%A8%E4%BC%A0%E5%8F%82%E6%96%B9%E5%BC%8F.html",title:"Vue组件间常用传参方式",lang:"zh-CN",frontmatter:{date:"2022/5/2 14:10",coverUrl:"/pic/7.jpg",stick:!1,keyword:"Vue,组件,传参",description:"Vue组件间常用传参方式",title:"Vue组件间常用传参方式",tag:["Vue","组件","传参"],categories:["Vue","组件","传参"]},excerpt:"",headers:[{level:2,title:"✨Vue组件间常用传参方式✨",slug:"✨vue组件间常用传参方式✨",children:[{level:3,title:"1. props、emit（最常用的父子通讯方式）",slug:"_1-props、emit-最常用的父子通讯方式",children:[]},{level:3,title:"2. 事件总线EventBus（常用任意两个组件之间的通讯）",slug:"_2-事件总线eventbus-常用任意两个组件之间的通讯",children:[]},{level:3,title:"3.Vuex状态管理（vue的核心插件，用于任意组件的任意通讯，需注意刷新后有可能vuex数据会丢失）",slug:"_3-vuex状态管理-vue的核心插件-用于任意组件的任意通讯-需注意刷新后有可能vuex数据会丢失",children:[]}]}],content:"\r\n\r\n## ✨Vue组件间常用传参方式✨\r\n\r\n### 1. props、emit（最常用的父子通讯方式）\r\n\r\n#### 父传子\r\n\r\n> 父组件传入属性，子组件通过`props`接收，就可以在内部`this.XXX`的方式使用\r\n\r\n```javascript\r\n// 父组件\r\n<hello-world msg=\"hello world!\"><hello-world>\r\n\r\n// 子组件\r\n<div>{{msg}}</div>\r\n\r\nprops：['msg']\r\n```\r\n#### 子传父\r\n\r\n> 子组件`$emit`（事件名，传递的参数）向外弹出一个自定义事件，在父组件中监听子组件的自定义事件，同时也能获取子组件传出来的参数\r\n\r\n```javascript\r\n//\t子组件\r\n<input v-model=\"username\" @change=\"setUser\">\r\n\r\nreturn {\r\n    username:'tct'\r\n}\r\n\r\nmethods：{\r\n  \tsetUser(){\r\n  \t\tthis.$emit('transferUser', username)\r\n  \t}\r\n}\r\n\r\n//\t父组件\r\n<hello-world @transferUser=\"getUser\"><hello-world>\r\n\r\nreturn {\r\n    user:''\r\n}\r\n\r\n\r\nmethods：{\r\n  \tgetUser(msg){\r\n  \t\tthis.user = msg\r\n  \t}\r\n}\r\n```\r\n\r\n### 2. 事件总线`EventBus`（常用任意两个组件之间的通讯）\r\n\r\n> 原理：注册的事件存起来，等触发事件时再调用。定义一个类去处理事件，并挂载到Vue实例的this上即可注册和触发事件，也可拓展一些事件管理\r\n\r\n```javascript\r\nclass Bus {\r\n  constructor () {\r\n    this.callbackList = {}\r\n  }\r\n\r\n  $on (name, callback) {\r\n    // 注册事件\r\n    this.callbackList[name] ? this.callbackList[name].push(callback) : (this.callbackList[name] = [callback])\r\n  }\r\n\r\n  $emit (name, args) {\r\n    // 触发事件\r\n    if (this.callbackList[name]) {\r\n      this.callbackList[name].forEach(cb => cb(args))\r\n    }\r\n  }\r\n}\r\n\r\nVue.prototype.$bus = new Bus()\r\n\r\n// 任意两个组件中\r\n// 组件一：在组件的 mounted() 去注册事件\r\nthis.$bus.$on('confirm', handleConfirm)\r\n\r\n// 组件二：触发事件(如：点击事件后执行触发事件即可)\r\nthis.$bus.$emit('confirm', list)\r\n```\r\n\r\n### 3.Vuex状态管理（vue的核心插件，用于任意组件的任意通讯，需注意刷新后有可能vuex数据会丢失）\r\n\r\n- 创建全局唯一的状态管理仓库`store`,有同步`mutations`、异步`actions`的方式去管理数据，有缓存数据`getters`，还能分成各个模块`modules`易于维护，详细使用见[Vuex官方文档](https://vuex.vuejs.org/zh/)",contentRendered:'<h2 id="✨vue组件间常用传参方式✨" tabindex="-1"><a class="header-anchor" href="#✨vue组件间常用传参方式✨" aria-hidden="true">#</a> ✨Vue组件间常用传参方式✨</h2>\n<h3 id="_1-props、emit-最常用的父子通讯方式" tabindex="-1"><a class="header-anchor" href="#_1-props、emit-最常用的父子通讯方式" aria-hidden="true">#</a> 1. props、emit（最常用的父子通讯方式）</h3>\n<h4 id="父传子" tabindex="-1"><a class="header-anchor" href="#父传子" aria-hidden="true">#</a> 父传子</h4>\n<blockquote>\n<p>父组件传入属性，子组件通过<code>props</code>接收，就可以在内部<code>this.XXX</code>的方式使用</p>\n</blockquote>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// 父组件</span>\n<span class="token operator">&lt;</span>hello<span class="token operator">-</span>world msg<span class="token operator">=</span><span class="token string">"hello world!"</span><span class="token operator">></span><span class="token operator">&lt;</span>hello<span class="token operator">-</span>world<span class="token operator">></span>\n\n<span class="token comment">// 子组件</span>\n<span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span>msg<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n\nprops：<span class="token punctuation">[</span><span class="token string">\'msg\'</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="子传父" tabindex="-1"><a class="header-anchor" href="#子传父" aria-hidden="true">#</a> 子传父</h4>\n<blockquote>\n<p>子组件<code>$emit</code>（事件名，传递的参数）向外弹出一个自定义事件，在父组件中监听子组件的自定义事件，同时也能获取子组件传出来的参数</p>\n</blockquote>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">//\t子组件</span>\n<span class="token operator">&lt;</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"username"</span> @change<span class="token operator">=</span><span class="token string">"setUser"</span><span class="token operator">></span>\n\n<span class="token keyword">return</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">username</span><span class="token operator">:</span><span class="token string">\'tct\'</span>\n<span class="token punctuation">}</span>\n\nmethods：<span class="token punctuation">{</span>\n  \t<span class="token function">setUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  \t\t<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">\'transferUser\'</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span>\n  \t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//\t父组件</span>\n<span class="token operator">&lt;</span>hello<span class="token operator">-</span>world @transferUser<span class="token operator">=</span><span class="token string">"getUser"</span><span class="token operator">></span><span class="token operator">&lt;</span>hello<span class="token operator">-</span>world<span class="token operator">></span>\n\n<span class="token keyword">return</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">user</span><span class="token operator">:</span><span class="token string">\'\'</span>\n<span class="token punctuation">}</span>\n\n\nmethods：<span class="token punctuation">{</span>\n  \t<span class="token function">getUser</span><span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  \t\t<span class="token keyword">this</span><span class="token punctuation">.</span>user <span class="token operator">=</span> msg\n  \t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h3 id="_2-事件总线eventbus-常用任意两个组件之间的通讯" tabindex="-1"><a class="header-anchor" href="#_2-事件总线eventbus-常用任意两个组件之间的通讯" aria-hidden="true">#</a> 2. 事件总线<code>EventBus</code>（常用任意两个组件之间的通讯）</h3>\n<blockquote>\n<p>原理：注册的事件存起来，等触发事件时再调用。定义一个类去处理事件，并挂载到Vue实例的this上即可注册和触发事件，也可拓展一些事件管理</p>\n</blockquote>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Bus</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>callbackList <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">$on</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 注册事件</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>callbackList<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span>callbackList<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>callbackList<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>callback<span class="token punctuation">]</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">$emit</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 触发事件</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>callbackList<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>callbackList<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">cb</span> <span class="token operator">=></span> <span class="token function">cb</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$bus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 任意两个组件中</span>\n<span class="token comment">// 组件一：在组件的 mounted() 去注册事件</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">\'confirm\'</span><span class="token punctuation">,</span> handleConfirm<span class="token punctuation">)</span>\n\n<span class="token comment">// 组件二：触发事件(如：点击事件后执行触发事件即可)</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">\'confirm\'</span><span class="token punctuation">,</span> list<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h3 id="_3-vuex状态管理-vue的核心插件-用于任意组件的任意通讯-需注意刷新后有可能vuex数据会丢失" tabindex="-1"><a class="header-anchor" href="#_3-vuex状态管理-vue的核心插件-用于任意组件的任意通讯-需注意刷新后有可能vuex数据会丢失" aria-hidden="true">#</a> 3.Vuex状态管理（vue的核心插件，用于任意组件的任意通讯，需注意刷新后有可能vuex数据会丢失）</h3>\n<ul>\n<li>创建全局唯一的状态管理仓库<code>store</code>,有同步<code>mutations</code>、异步<code>actions</code>的方式去管理数据，有缓存数据<code>getters</code>，还能分成各个模块<code>modules</code>易于维护，详细使用见<a href="https://vuex.vuejs.org/zh/" target="_blank" rel="noopener noreferrer">Vuex官方文档<ExternalLinkIcon/></a></li>\n</ul>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Vue/Vue组件间常用传参方式.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"Vue组件间常用传参方式",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Vue/Vue组件间常用传参方式.md",filePathRelative:"Vue/Vue组件间常用传参方式.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Vue/Vue组件间常用传参方式.html.vue",componentFilePathRelative:"pages/Vue/Vue组件间常用传参方式.html.vue",componentFileChunkName:"v-a796ac14",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Vue/Vue组件间常用传参方式.html.js",dataFilePathRelative:"pages/Vue/Vue组件间常用传参方式.html.js",dataFileChunkName:"v-a796ac14",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Vue/Vue组件间常用传参方式.html",htmlFilePathRelative:"Vue/Vue组件间常用传参方式.html"},{data:{key:"v-ba03ecda",path:"/Vue/Vue%E8%B7%AF%E7%94%B1%E4%BC%A0%E5%8F%82.html",title:"Vue路由传参",lang:"zh-CN",frontmatter:{date:"2022/5/3 14:10",coverUrl:"/pic/7.jpg",stick:!1,keyword:"Vue,路由,传参",description:"Vue路由传参",title:"Vue路由传参",tag:["Vue","路由","传参"],categories:["Vue","路由","传参"]},excerpt:"",headers:[{level:2,title:"✨Vue路由传参✨",slug:"✨vue路由传参✨",children:[{level:3,title:"方式一：配置动态路由",slug:"方式一-配置动态路由",children:[]},{level:3,title:"方式二：通过query属性传值",slug:"方式二-通过query属性传值",children:[]},{level:3,title:"方式三：通过params属性传值",slug:"方式三-通过params属性传值",children:[]},{level:3,title:"query和params传参的区别",slug:"query和params传参的区别",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-ba03ecda",path:"/Vue/Vue%E8%B7%AF%E7%94%B1%E4%BC%A0%E5%8F%82.html",title:"Vue路由传参",lang:"zh-CN",frontmatter:{date:"2022/5/3 14:10",coverUrl:"/pic/7.jpg",stick:!1,keyword:"Vue,路由,传参",description:"Vue路由传参",title:"Vue路由传参",tag:["Vue","路由","传参"],categories:["Vue","路由","传参"]},excerpt:"",headers:[{level:2,title:"✨Vue路由传参✨",slug:"✨vue路由传参✨",children:[{level:3,title:"方式一：配置动态路由",slug:"方式一-配置动态路由",children:[]},{level:3,title:"方式二：通过query属性传值",slug:"方式二-通过query属性传值",children:[]},{level:3,title:"方式三：通过params属性传值",slug:"方式三-通过params属性传值",children:[]},{level:3,title:"query和params传参的区别",slug:"query和params传参的区别",children:[]}]}],content:"\r\n\r\n\r\n## ✨Vue路由传参✨\r\n\r\n### 方式一：配置动态路由\r\n\r\n- 页面刷新，参数不会消失\r\n- URL路径中会显示传递的参数\r\n\r\n```java\r\n// 1. 路由配置文件中配置动态路由\r\n{\r\n     path: '/detail/:id',\r\n     name: 'Detail',\r\n     component: Detail\r\n }\r\n   \r\n   \r\n//2. 使用，跳转时页面\r\nvar id = 1;\r\nthis.$router.push('/detail/' + id)\r\n//url形式： http://192.169.3.198/detail/1\r\n \r\n//3. 跳转后页面获取参数\r\nthis.$route.params.id\r\n```\r\n\r\n### 方式二：通过`query`属性传值\r\n\r\n- 使用`path`来匹配路由\r\n- 页面刷新，参数不会消失\r\n- `query`类似`get`，跳转之后页面的url后面会拼接参数，类似`?id=1`\r\n- **目标组件在`create`生命周期中，通过`this.$route`接受**\r\n\r\n```javascript\r\n//1. 路由配置文件\r\n{\r\n    path: '/detail',\r\n    name: 'Detail',\r\n    component: Detail\r\n}\r\n   \r\n//2. 跳转时页面\r\nthis.$router.push({\r\n  path: '/detail',\r\n  query: {\r\n    name: '张三'，\r\n    id: 1,\r\n  }\r\n})\r\n//url形式： http://192.169.3.198/detail?id=1&name='张三'\r\n \r\n//3. 跳转后页面获取参数对象（create生命周期）\r\nthis.$route.query\r\n```\r\n\r\n### 方式三：通过`params`属性传值\r\n\r\n- **目标组件在`create`生命周期中，通过`this.$route`接受**\r\n- 通过路由属性中的`name`来确定匹配的路由\r\n- 密文传参，页面不再url地址上显示\r\n- 缺点：刷新页面后，参数就消失了\r\n\r\n```javascript\r\n//1. 路由配置文件\r\n{\r\n     path: '/detail',\r\n     name: 'Detail',\r\n     component: Detail\r\n   }\r\n   \r\n//2. 跳转时页面\r\nthis.$router.push({\r\n  name: 'Detail',\r\n  params: {\r\n    name: '张三'，\r\n    id: 1,\r\n  }\r\n})\r\n \r\n//3. 跳转后页面获取参数对象（create生命周期）\r\nthis.$route.params\r\n```\r\n\r\n### `query`和`params`传参的区别\r\n\r\n1. `params`传参必须使用命名路由的方式传参\r\n2. `params`传参不会显示在地址栏上，会保存在内存中，刷新就会丢失，可以配合本地存储进行使用\r\n3. `query`的参数会显示在地址栏上，不会消失\r\n",contentRendered:'<h2 id="✨vue路由传参✨" tabindex="-1"><a class="header-anchor" href="#✨vue路由传参✨" aria-hidden="true">#</a> ✨Vue路由传参✨</h2>\n<h3 id="方式一-配置动态路由" tabindex="-1"><a class="header-anchor" href="#方式一-配置动态路由" aria-hidden="true">#</a> 方式一：配置动态路由</h3>\n<ul>\n<li>页面刷新，参数不会消失</li>\n<li>URL路径中会显示传递的参数</li>\n</ul>\n<div class="language-java ext-java line-numbers-mode"><pre v-pre class="language-java"><code><span class="token comment">// 1. 路由配置文件中配置动态路由</span>\n<span class="token punctuation">{</span>\n     path<span class="token operator">:</span> \'<span class="token operator">/</span>detail<span class="token operator">/</span><span class="token operator">:</span>id\'<span class="token punctuation">,</span>\n     name<span class="token operator">:</span> <span class="token char">\'Detail\'</span><span class="token punctuation">,</span>\n     component<span class="token operator">:</span> <span class="token class-name">Detail</span>\n <span class="token punctuation">}</span>\n   \n   \n<span class="token comment">//2. 使用，跳转时页面</span>\n<span class="token keyword">var</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>\'<span class="token operator">/</span>detail<span class="token operator">/</span>\' <span class="token operator">+</span> id<span class="token punctuation">)</span>\n<span class="token comment">//url形式： http://192.169.3.198/detail/1</span>\n \n<span class="token comment">//3. 跳转后页面获取参数</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="方式二-通过query属性传值" tabindex="-1"><a class="header-anchor" href="#方式二-通过query属性传值" aria-hidden="true">#</a> 方式二：通过<code>query</code>属性传值</h3>\n<ul>\n<li>使用<code>path</code>来匹配路由</li>\n<li>页面刷新，参数不会消失</li>\n<li><code>query</code>类似<code>get</code>，跳转之后页面的url后面会拼接参数，类似<code>?id=1</code></li>\n<li><strong>目标组件在<code>create</code>生命周期中，通过<code>this.$route</code>接受</strong></li>\n</ul>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">//1. 路由配置文件</span>\n<span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">\'/detail\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Detail\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">component</span><span class="token operator">:</span> Detail\n<span class="token punctuation">}</span>\n   \n<span class="token comment">//2. 跳转时页面</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">\'/detail\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'张三\'</span>，\n    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">//url形式： http://192.169.3.198/detail?id=1&amp;name=\'张三\'</span>\n \n<span class="token comment">//3. 跳转后页面获取参数对象（create生命周期）</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>query\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="方式三-通过params属性传值" tabindex="-1"><a class="header-anchor" href="#方式三-通过params属性传值" aria-hidden="true">#</a> 方式三：通过<code>params</code>属性传值</h3>\n<ul>\n<li><strong>目标组件在<code>create</code>生命周期中，通过<code>this.$route</code>接受</strong></li>\n<li>通过路由属性中的<code>name</code>来确定匹配的路由</li>\n<li>密文传参，页面不再url地址上显示</li>\n<li>缺点：刷新页面后，参数就消失了</li>\n</ul>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">//1. 路由配置文件</span>\n<span class="token punctuation">{</span>\n     <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">\'/detail\'</span><span class="token punctuation">,</span>\n     <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Detail\'</span><span class="token punctuation">,</span>\n     <span class="token literal-property property">component</span><span class="token operator">:</span> Detail\n   <span class="token punctuation">}</span>\n   \n<span class="token comment">//2. 跳转时页面</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Detail\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'张三\'</span>，\n    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n \n<span class="token comment">//3. 跳转后页面获取参数对象（create生命周期）</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>params\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="query和params传参的区别" tabindex="-1"><a class="header-anchor" href="#query和params传参的区别" aria-hidden="true">#</a> <code>query</code>和<code>params</code>传参的区别</h3>\n<ol>\n<li><code>params</code>传参必须使用命名路由的方式传参</li>\n<li><code>params</code>传参不会显示在地址栏上，会保存在内存中，刷新就会丢失，可以配合本地存储进行使用</li>\n<li><code>query</code>的参数会显示在地址栏上，不会消失</li>\n</ol>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Vue/Vue路由传参.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"Vue路由传参",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Vue/Vue路由传参.md",filePathRelative:"Vue/Vue路由传参.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Vue/Vue路由传参.html.vue",componentFilePathRelative:"pages/Vue/Vue路由传参.html.vue",componentFileChunkName:"v-ba03ecda",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Vue/Vue路由传参.html.js",dataFilePathRelative:"pages/Vue/Vue路由传参.html.js",dataFileChunkName:"v-ba03ecda",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Vue/Vue路由传参.html",htmlFilePathRelative:"Vue/Vue路由传参.html"},{data:{key:"v-1f086782",path:"/Vue/%E9%80%9A%E8%BF%87network%E7%9A%84ip%E8%AE%BF%E9%97%AE.html",title:"Vue项目通过network的ip地址访问方法",lang:"zh-CN",frontmatter:{date:"2022/4/22 22:10",coverUrl:"/pic/7.jpg",stick:!1,keyword:"Vue,network,Ip",description:"Vue项目通过network的ip地址访问方法",title:"Vue项目通过network的ip地址访问方法",tag:["Vue","Inetwork","Ip"],categories:["Vue","Inetwork","Ip"]},excerpt:"",headers:[{level:2,title:"✨Vue项目通过network的ip地址访问方法✨",slug:"✨vue项目通过network的ip地址访问方法✨",children:[]},{level:2,title:"设置完成之后就可以用ip+端口号的形式来访问项目",slug:"设置完成之后就可以用ip-端口号的形式来访问项目",children:[]},{level:2,title:"在使用network进行局域网访问时注意",slug:"在使用network进行局域网访问时注意",children:[{level:3,title:"设置完成即可使用其它设备在同一局域网下进行访问了",slug:"设置完成即可使用其它设备在同一局域网下进行访问了",children:[]},{level:3,title:"注意：",slug:"注意",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-1f086782",path:"/Vue/%E9%80%9A%E8%BF%87network%E7%9A%84ip%E8%AE%BF%E9%97%AE.html",title:"Vue项目通过network的ip地址访问方法",lang:"zh-CN",frontmatter:{date:"2022/4/22 22:10",coverUrl:"/pic/7.jpg",stick:!1,keyword:"Vue,network,Ip",description:"Vue项目通过network的ip地址访问方法",title:"Vue项目通过network的ip地址访问方法",tag:["Vue","Inetwork","Ip"],categories:["Vue","Inetwork","Ip"]},excerpt:"",headers:[{level:2,title:"✨Vue项目通过network的ip地址访问方法✨",slug:"✨vue项目通过network的ip地址访问方法✨",children:[]},{level:2,title:"设置完成之后就可以用ip+端口号的形式来访问项目",slug:"设置完成之后就可以用ip-端口号的形式来访问项目",children:[]},{level:2,title:"在使用network进行局域网访问时注意",slug:"在使用network进行局域网访问时注意",children:[{level:3,title:"设置完成即可使用其它设备在同一局域网下进行访问了",slug:"设置完成即可使用其它设备在同一局域网下进行访问了",children:[]},{level:3,title:"注意：",slug:"注意",children:[]}]}],content:'\r\n\r\n\r\n\r\n\r\n## ✨Vue项目通过network的ip地址访问方法✨\r\n\r\n1. 在config.js文件中的dev中修改host为0.0.0.0\r\n```javascript\r\n devServer: { // 环境配置\r\n        host: \'0.0.0.0\',\r\n        port: 8080,\r\n        https: false,\r\n        hotOnly: false,\r\n        disableHostCheck: true,\r\n        open: false // 配置自动启动浏览器\r\n\r\n    },\r\n```\r\n\r\n2. 或者在package.json文件下"scripts"的"dev"后面加上–host 0.0.0.0"，如果没有dev就找serve\r\n\r\n```javascript\r\n"scripts": {\r\n    "serve": "vue-cli-service serve --host 0.0.0.0",\r\n    "build": "vue-cli-service build",\r\n    "lint": "vue-cli-service lint"\r\n  },\r\n  ```\r\n## 设置完成之后就可以用ip+端口号的形式来访问项目\r\n\r\n## 在使用network进行局域网访问时注意\r\n- 局域网访问访问需要打开出站、入站规则\r\n- 防火墙默认打开，无法进行network的ip访问，ip为本机在局域网中的地址\r\n- 关闭防火墙（公用网络）和安全软件即可\r\n### 设置完成即可使用其它设备在同一局域网下进行访问了\r\n\r\n### 注意：\r\n- 如果更换了网络状态，ip地址就会发生改变，就不能用旧的ip地址访问，要使用新ip来访问项目\r\n',contentRendered:'<h2 id="✨vue项目通过network的ip地址访问方法✨" tabindex="-1"><a class="header-anchor" href="#✨vue项目通过network的ip地址访问方法✨" aria-hidden="true">#</a> ✨Vue项目通过network的ip地址访问方法✨</h2>\n<ol>\n<li>在config.js文件中的dev中修改host为0.0.0.0</li>\n</ol>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code> <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// 环境配置</span>\n        <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">\'0.0.0.0\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">8080</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">https</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">hotOnly</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">disableHostCheck</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token comment">// 配置自动启动浏览器</span>\n\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ol start="2">\n<li>或者在package.json文件下&quot;scripts&quot;的&quot;dev&quot;后面加上–host 0.0.0.0&quot;，如果没有dev就找serve</li>\n</ol>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token string-property property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string-property property">"serve"</span><span class="token operator">:</span> <span class="token string">"vue-cli-service serve --host 0.0.0.0"</span><span class="token punctuation">,</span>\n    <span class="token string-property property">"build"</span><span class="token operator">:</span> <span class="token string">"vue-cli-service build"</span><span class="token punctuation">,</span>\n    <span class="token string-property property">"lint"</span><span class="token operator">:</span> <span class="token string">"vue-cli-service lint"</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="设置完成之后就可以用ip-端口号的形式来访问项目" tabindex="-1"><a class="header-anchor" href="#设置完成之后就可以用ip-端口号的形式来访问项目" aria-hidden="true">#</a> 设置完成之后就可以用ip+端口号的形式来访问项目</h2>\n<h2 id="在使用network进行局域网访问时注意" tabindex="-1"><a class="header-anchor" href="#在使用network进行局域网访问时注意" aria-hidden="true">#</a> 在使用network进行局域网访问时注意</h2>\n<ul>\n<li>局域网访问访问需要打开出站、入站规则</li>\n<li>防火墙默认打开，无法进行network的ip访问，ip为本机在局域网中的地址</li>\n<li>关闭防火墙（公用网络）和安全软件即可</li>\n</ul>\n<h3 id="设置完成即可使用其它设备在同一局域网下进行访问了" tabindex="-1"><a class="header-anchor" href="#设置完成即可使用其它设备在同一局域网下进行访问了" aria-hidden="true">#</a> 设置完成即可使用其它设备在同一局域网下进行访问了</h3>\n<h3 id="注意" tabindex="-1"><a class="header-anchor" href="#注意" aria-hidden="true">#</a> 注意：</h3>\n<ul>\n<li>如果更换了网络状态，ip地址就会发生改变，就不能用旧的ip地址访问，要使用新ip来访问项目</li>\n</ul>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Vue/通过network的ip访问.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"通过network的ip访问",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Vue/通过network的ip访问.md",filePathRelative:"Vue/通过network的ip访问.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Vue/通过network的ip访问.html.vue",componentFilePathRelative:"pages/Vue/通过network的ip访问.html.vue",componentFileChunkName:"v-1f086782",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Vue/通过network的ip访问.html.js",dataFilePathRelative:"pages/Vue/通过network的ip访问.html.js",dataFileChunkName:"v-1f086782",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Vue/通过network的ip访问.html",htmlFilePathRelative:"Vue/通过network的ip访问.html"},{data:{key:"v-67bdf7e9",path:"/Other/ABAQUS/ABAQUS%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84Mask%E6%8E%A9%E7%A0%81%E6%96%B9%E5%BC%8F%E7%B4%A2%E5%BC%95.html",title:"ABAQUS二次开发中的Mask掩码方式索引",lang:"zh-CN",frontmatter:{date:"2022/4/4 20:08",coverUrl:"/pic/9.jpg",stick:!1,keyword:"ABAQUS,二次开发,Mask掩码，索引",description:"ABAQUS二次开发中的Mask掩码方式索引",title:"ABAQUS二次开发中的Mask掩码方式索引",tag:["ABAQUS","二次开发","Mask掩码，索引"],categories:["ABAQUS","二次开发","Mask掩码，索引"]},excerpt:"",headers:[{level:2,title:"✨ABAQUS二次开发中的Mask掩码方式索引✨",slug:"✨abaqus二次开发中的mask掩码方式索引✨",children:[{level:3,title:"Mask掩码方式索引介绍：",slug:"mask掩码方式索引介绍",children:[]},{level:3,title:"三种索引方式",slug:"三种索引方式",children:[]},{level:3,title:"索引号切换方式",slug:"索引号切换方式",children:[]},{level:3,title:"注意",slug:"注意",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-67bdf7e9",path:"/Other/ABAQUS/ABAQUS%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84Mask%E6%8E%A9%E7%A0%81%E6%96%B9%E5%BC%8F%E7%B4%A2%E5%BC%95.html",title:"ABAQUS二次开发中的Mask掩码方式索引",lang:"zh-CN",frontmatter:{date:"2022/4/4 20:08",coverUrl:"/pic/9.jpg",stick:!1,keyword:"ABAQUS,二次开发,Mask掩码，索引",description:"ABAQUS二次开发中的Mask掩码方式索引",title:"ABAQUS二次开发中的Mask掩码方式索引",tag:["ABAQUS","二次开发","Mask掩码，索引"],categories:["ABAQUS","二次开发","Mask掩码，索引"]},excerpt:"",headers:[{level:2,title:"✨ABAQUS二次开发中的Mask掩码方式索引✨",slug:"✨abaqus二次开发中的mask掩码方式索引✨",children:[{level:3,title:"Mask掩码方式索引介绍：",slug:"mask掩码方式索引介绍",children:[]},{level:3,title:"三种索引方式",slug:"三种索引方式",children:[]},{level:3,title:"索引号切换方式",slug:"索引号切换方式",children:[]},{level:3,title:"注意",slug:"注意",children:[]}]}],content:"\r\n## ✨ABAQUS二次开发中的Mask掩码方式索引✨\r\n\r\n### Mask掩码方式索引介绍：\r\n在做ABAQUS二次开发时，借助rpy文件进行参考，是一个很好的开发方式，但在使用中会发现对一个线、面、体等几何特征索引时，出现的表现方式总是用#号开头的字母数字表示的。\r\n比如：\r\n~~~ python\r\n    f1 = a.instances['Part-rigid-1'].faces\r\n    faces1 = f1.getSequenceFromMask(mask=('[#20]',),)\r\n~~~\r\n其中，getSequenceFromMask方法就是获取Abaqus Cae中选取的线、面、体等几何特征。里面给出的是掩码编码，是为了数据安全的一种掩码，一般不具备通用性，在参数化建模时应尽量避免使用它。\r\n\r\n### 三种索引方式\r\n其实ABAQUS提供了三种对单个对象或者多个对象的索引方式：\r\n1. getSequenceFromMask的方式（默认的方式）\r\n提供掩码数据\r\n2. findAt()+坐标值的方式\r\n提供精确的坐标数据\r\n3. 元素实际索引号的方式\r\n提供精确的单元索引号\r\n\r\n### 索引号切换方式\r\n1. 在命令交互行（Abaqus/CAE最下方）输入以下指令：\r\n```python\r\nsession.journalOptions.setValues(replayGeometry=COORDINATE,recoverGeometry= COORDINATE)\r\n```\r\n这种方式在rpy文件中输出的索引格式为findAt()+坐标值，即第二种方式。\r\n\r\n2. 在命令交互行（Abaqus/CAE最下方）输入以下指令 ：\r\n```python\r\nsession.journalOptions.setValues(replayGeometry=INDEX,recoverGeometry=INDEX\r\n```\r\n该方式会以元素的实际索引号作为对象的索引方式，即第三种方式。\r\n\r\n\r\n### 注意\r\n- 在二次开发参数化建模的脚本过程中，如果模型简单且使用Mask建模不出错的情况下，就可以使用默认的Mask掩码方式（因为使用的Mask掩码没有那么精确，刚好和新的模型选中相同的几何特征）\r\n- 如果使用了Mask掩码方式，需要注意是否会选择错误的几何特性，可能会导致建模错误\r\n- 建议使用第二种findAt()+坐标值的方式来进行索引和参数化建模\r\n- 在做二次开发的时候可以切换一下索引方式，看起来会更方便，索引更准确",contentRendered:'<h2 id="✨abaqus二次开发中的mask掩码方式索引✨" tabindex="-1"><a class="header-anchor" href="#✨abaqus二次开发中的mask掩码方式索引✨" aria-hidden="true">#</a> ✨ABAQUS二次开发中的Mask掩码方式索引✨</h2>\n<h3 id="mask掩码方式索引介绍" tabindex="-1"><a class="header-anchor" href="#mask掩码方式索引介绍" aria-hidden="true">#</a> Mask掩码方式索引介绍：</h3>\n<p>在做ABAQUS二次开发时，借助rpy文件进行参考，是一个很好的开发方式，但在使用中会发现对一个线、面、体等几何特征索引时，出现的表现方式总是用#号开头的字母数字表示的。\n比如：</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>    f1 <span class="token operator">=</span> a<span class="token punctuation">.</span>instances<span class="token punctuation">[</span><span class="token string">\'Part-rigid-1\'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>faces\n    faces1 <span class="token operator">=</span> f1<span class="token punctuation">.</span>getSequenceFromMask<span class="token punctuation">(</span>mask<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">\'[#20]\'</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>其中，getSequenceFromMask方法就是获取Abaqus Cae中选取的线、面、体等几何特征。里面给出的是掩码编码，是为了数据安全的一种掩码，一般不具备通用性，在参数化建模时应尽量避免使用它。</p>\n<h3 id="三种索引方式" tabindex="-1"><a class="header-anchor" href="#三种索引方式" aria-hidden="true">#</a> 三种索引方式</h3>\n<p>其实ABAQUS提供了三种对单个对象或者多个对象的索引方式：</p>\n<ol>\n<li>getSequenceFromMask的方式（默认的方式）\n提供掩码数据</li>\n<li>findAt()+坐标值的方式\n提供精确的坐标数据</li>\n<li>元素实际索引号的方式\n提供精确的单元索引号</li>\n</ol>\n<h3 id="索引号切换方式" tabindex="-1"><a class="header-anchor" href="#索引号切换方式" aria-hidden="true">#</a> 索引号切换方式</h3>\n<ol>\n<li>在命令交互行（Abaqus/CAE最下方）输入以下指令：</li>\n</ol>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>session<span class="token punctuation">.</span>journalOptions<span class="token punctuation">.</span>setValues<span class="token punctuation">(</span>replayGeometry<span class="token operator">=</span>COORDINATE<span class="token punctuation">,</span>recoverGeometry<span class="token operator">=</span> COORDINATE<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>这种方式在rpy文件中输出的索引格式为findAt()+坐标值，即第二种方式。</p>\n<ol start="2">\n<li>在命令交互行（Abaqus/CAE最下方）输入以下指令 ：</li>\n</ol>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>session<span class="token punctuation">.</span>journalOptions<span class="token punctuation">.</span>setValues<span class="token punctuation">(</span>replayGeometry<span class="token operator">=</span>INDEX<span class="token punctuation">,</span>recoverGeometry<span class="token operator">=</span>INDEX\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>该方式会以元素的实际索引号作为对象的索引方式，即第三种方式。</p>\n<h3 id="注意" tabindex="-1"><a class="header-anchor" href="#注意" aria-hidden="true">#</a> 注意</h3>\n<ul>\n<li>在二次开发参数化建模的脚本过程中，如果模型简单且使用Mask建模不出错的情况下，就可以使用默认的Mask掩码方式（因为使用的Mask掩码没有那么精确，刚好和新的模型选中相同的几何特征）</li>\n<li>如果使用了Mask掩码方式，需要注意是否会选择错误的几何特性，可能会导致建模错误</li>\n<li>建议使用第二种findAt()+坐标值的方式来进行索引和参数化建模</li>\n<li>在做二次开发的时候可以切换一下索引方式，看起来会更方便，索引更准确</li>\n</ul>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Other/ABAQUS/ABAQUS二次开发中的Mask掩码方式索引.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"ABAQUS二次开发中的Mask掩码方式索引",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Other/ABAQUS/ABAQUS二次开发中的Mask掩码方式索引.md",filePathRelative:"Other/ABAQUS/ABAQUS二次开发中的Mask掩码方式索引.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Other/ABAQUS/ABAQUS二次开发中的Mask掩码方式索引.html.vue",componentFilePathRelative:"pages/Other/ABAQUS/ABAQUS二次开发中的Mask掩码方式索引.html.vue",componentFileChunkName:"v-67bdf7e9",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Other/ABAQUS/ABAQUS二次开发中的Mask掩码方式索引.html.js",dataFilePathRelative:"pages/Other/ABAQUS/ABAQUS二次开发中的Mask掩码方式索引.html.js",dataFileChunkName:"v-67bdf7e9",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Other/ABAQUS/ABAQUS二次开发中的Mask掩码方式索引.html",htmlFilePathRelative:"Other/ABAQUS/ABAQUS二次开发中的Mask掩码方式索引.html"},{data:{key:"v-09e1915c",path:"/Other/ABAQUS/Simulation%20platform.html",title:"Simulation platform",lang:"zh-CN",frontmatter:{date:"2022/2/2 22:00",coverUrl:"/pic/3.jpg",stick:!0,keyword:"Simulation, platform",description:"Simulation platform",title:"Simulation platform",tag:["Platform","ABAQUS","Simulation"],categories:["Platform","ABAQUS","Simulation"]},excerpt:"",headers:[{level:2,title:"✨基于ABAQUS二次开发的仿真分析平台✨",slug:"✨基于abaqus二次开发的仿真分析平台✨",children:[{level:3,title:"技术栈",slug:"技术栈",children:[]},{level:3,title:"ABAQUS有限元仿真技术",slug:"abaqus有限元仿真技术",children:[]},{level:3,title:"基于ABAQUS的二次开发",slug:"基于abaqus的二次开发",children:[]},{level:3,title:"平台开发",slug:"平台开发",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-09e1915c",path:"/Other/ABAQUS/Simulation%20platform.html",title:"Simulation platform",lang:"zh-CN",frontmatter:{date:"2022/2/2 22:00",coverUrl:"/pic/3.jpg",stick:!0,keyword:"Simulation, platform",description:"Simulation platform",title:"Simulation platform",tag:["Platform","ABAQUS","Simulation"],categories:["Platform","ABAQUS","Simulation"]},excerpt:"",headers:[{level:2,title:"✨基于ABAQUS二次开发的仿真分析平台✨",slug:"✨基于abaqus二次开发的仿真分析平台✨",children:[{level:3,title:"技术栈",slug:"技术栈",children:[]},{level:3,title:"ABAQUS有限元仿真技术",slug:"abaqus有限元仿真技术",children:[]},{level:3,title:"基于ABAQUS的二次开发",slug:"基于abaqus的二次开发",children:[]},{level:3,title:"平台开发",slug:"平台开发",children:[]}]}],content:"\r\n## ✨基于ABAQUS二次开发的仿真分析平台✨\r\n\r\n\r\n1.  **随着近年来计算机领域里程碑式的进步，计算机软件市场的迅速扩张，推出了许多功能强大的计算机仿真软件。ABAQUS有限元仿真分析软件则是其中的翘楚，作为应用广泛、普及率高、分析模块众多且功能强大的有限元仿真分析软件，它不但可以针对模型中的某个具体部件某项性能进行仿真分析，同时还可以对整个模型甚至系统进行多场耦合分析。**\r\n2.  **ABAQUS可以发挥其优秀的仿真计算功能，借助有限元仿真软件对其进行模型设计与分析，得出仿真后的运动情况和各种输出的结果，将仿真计算结果和设计指标进行对比分析，再对模型的结构和关键尺寸进行优化设计，以达到设计要求。**\r\n3. **然而，掌握有限元仿真软件分析流程，需要研究人员投入大量的经历去学习研究，如果让不熟悉有限元软件操作，且对机械设计有许多经验的资深工程师深入学习，则会花费大量时间和经历再仿真软件的基本操作学习上面，导致项目周期增长，非常不利于研发效率的提高。**\r\n4. **因此，以ABAQUS有限元仿真分析软件为例。ABAQUS开放了许多接口并且拥有丰富的接口文档，如果利用其开放的接口开发一个适用于多种仿真需求的仿真分析平台，实现对有限元模型分析条件的自动化设置，数据与结果的自动储存，这对减少冲压成形模具的设计周期，提升研发人员的工作效率，实现研发流程的自动化有着重大的意义。**\r\n\r\n### 技术栈\r\n\r\n- ABAQUS有限元仿真技术\r\n- 基于ABAQUS的二次开发\r\n- 仿真平台：Vue+Node.js+Mongodb\r\n\r\n### ABAQUS有限元仿真技术\r\n- ABAQUS理论基础\r\n- 有限元分析原理\r\n- 有限元仿真操作\r\n\r\n\r\n### 基于ABAQUS的二次开发\r\n\r\n- Python基础\r\n- ABAQUS二次开发理论\r\n- 仿真脚本的二次开发\r\n- 仿真分析功能的实现\r\n\r\n### 平台开发\r\n\r\n> **仿真分析平台的开发主要技术栈：Vue+Node.js+Mongodb**\r\n\r\n#### 平台前端开发\r\n\r\n- 登录页、主页、操作手册页、使用须知页、仿真计算页、结果页\r\n- 后台：仿真数据页、仿真结果页、用户数据页\r\n- 通过Element ui组件库搭建前端页面\r\n- 用户登录、上传信息、下载结果等功能\r\n\r\n#### 平台后端开发\r\n\r\n- 通过Node.js搭建平台后端\r\n- 使用Express框架进行中间件开发\r\n- 后台获取前端数据，运行仿真脚本\r\n- 连接Mongodb数据库，存储仿真数据与结果\r\n- 对仿真数据、结果、用户等数据进行增删改查\r\n\r\n> **平台的操作流程：阅读使用方法=>输入参数=>导入模型=>仿真计算=>查看计算结果=>对比结果=>重复操作**\r\n\r\n- **[平台展示页面](https://tangctt.github.io/simulation-platform/)（去除用户模块，仅供展示），或浏览`https://tangctt.github.io/simulation-platform/`**\r\n\r\n- **更多详细内容与功能仍在开发之中...**\r\n",contentRendered:'<h2 id="✨基于abaqus二次开发的仿真分析平台✨" tabindex="-1"><a class="header-anchor" href="#✨基于abaqus二次开发的仿真分析平台✨" aria-hidden="true">#</a> ✨基于ABAQUS二次开发的仿真分析平台✨</h2>\n<ol>\n<li><strong>随着近年来计算机领域里程碑式的进步，计算机软件市场的迅速扩张，推出了许多功能强大的计算机仿真软件。ABAQUS有限元仿真分析软件则是其中的翘楚，作为应用广泛、普及率高、分析模块众多且功能强大的有限元仿真分析软件，它不但可以针对模型中的某个具体部件某项性能进行仿真分析，同时还可以对整个模型甚至系统进行多场耦合分析。</strong></li>\n<li><strong>ABAQUS可以发挥其优秀的仿真计算功能，借助有限元仿真软件对其进行模型设计与分析，得出仿真后的运动情况和各种输出的结果，将仿真计算结果和设计指标进行对比分析，再对模型的结构和关键尺寸进行优化设计，以达到设计要求。</strong></li>\n<li><strong>然而，掌握有限元仿真软件分析流程，需要研究人员投入大量的经历去学习研究，如果让不熟悉有限元软件操作，且对机械设计有许多经验的资深工程师深入学习，则会花费大量时间和经历再仿真软件的基本操作学习上面，导致项目周期增长，非常不利于研发效率的提高。</strong></li>\n<li><strong>因此，以ABAQUS有限元仿真分析软件为例。ABAQUS开放了许多接口并且拥有丰富的接口文档，如果利用其开放的接口开发一个适用于多种仿真需求的仿真分析平台，实现对有限元模型分析条件的自动化设置，数据与结果的自动储存，这对减少冲压成形模具的设计周期，提升研发人员的工作效率，实现研发流程的自动化有着重大的意义。</strong></li>\n</ol>\n<h3 id="技术栈" tabindex="-1"><a class="header-anchor" href="#技术栈" aria-hidden="true">#</a> 技术栈</h3>\n<ul>\n<li>ABAQUS有限元仿真技术</li>\n<li>基于ABAQUS的二次开发</li>\n<li>仿真平台：Vue+Node.js+Mongodb</li>\n</ul>\n<h3 id="abaqus有限元仿真技术" tabindex="-1"><a class="header-anchor" href="#abaqus有限元仿真技术" aria-hidden="true">#</a> ABAQUS有限元仿真技术</h3>\n<ul>\n<li>ABAQUS理论基础</li>\n<li>有限元分析原理</li>\n<li>有限元仿真操作</li>\n</ul>\n<h3 id="基于abaqus的二次开发" tabindex="-1"><a class="header-anchor" href="#基于abaqus的二次开发" aria-hidden="true">#</a> 基于ABAQUS的二次开发</h3>\n<ul>\n<li>Python基础</li>\n<li>ABAQUS二次开发理论</li>\n<li>仿真脚本的二次开发</li>\n<li>仿真分析功能的实现</li>\n</ul>\n<h3 id="平台开发" tabindex="-1"><a class="header-anchor" href="#平台开发" aria-hidden="true">#</a> 平台开发</h3>\n<blockquote>\n<p><strong>仿真分析平台的开发主要技术栈：Vue+Node.js+Mongodb</strong></p>\n</blockquote>\n<h4 id="平台前端开发" tabindex="-1"><a class="header-anchor" href="#平台前端开发" aria-hidden="true">#</a> 平台前端开发</h4>\n<ul>\n<li>登录页、主页、操作手册页、使用须知页、仿真计算页、结果页</li>\n<li>后台：仿真数据页、仿真结果页、用户数据页</li>\n<li>通过Element ui组件库搭建前端页面</li>\n<li>用户登录、上传信息、下载结果等功能</li>\n</ul>\n<h4 id="平台后端开发" tabindex="-1"><a class="header-anchor" href="#平台后端开发" aria-hidden="true">#</a> 平台后端开发</h4>\n<ul>\n<li>通过Node.js搭建平台后端</li>\n<li>使用Express框架进行中间件开发</li>\n<li>后台获取前端数据，运行仿真脚本</li>\n<li>连接Mongodb数据库，存储仿真数据与结果</li>\n<li>对仿真数据、结果、用户等数据进行增删改查</li>\n</ul>\n<blockquote>\n<p><strong>平台的操作流程：阅读使用方法=&gt;输入参数=&gt;导入模型=&gt;仿真计算=&gt;查看计算结果=&gt;对比结果=&gt;重复操作</strong></p>\n</blockquote>\n<ul>\n<li>\n<p><strong><a href="https://tangctt.github.io/simulation-platform/" target="_blank" rel="noopener noreferrer">平台展示页面<ExternalLinkIcon/></a>（去除用户模块，仅供展示），或浏览<code>https://tangctt.github.io/simulation-platform/</code></strong></p>\n</li>\n<li>\n<p><strong>更多详细内容与功能仍在开发之中...</strong></p>\n</li>\n</ul>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Other/ABAQUS/Simulation platform.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"Simulation platform",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Other/ABAQUS/Simulation platform.md",filePathRelative:"Other/ABAQUS/Simulation platform.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Other/ABAQUS/Simulation platform.html.vue",componentFilePathRelative:"pages/Other/ABAQUS/Simulation platform.html.vue",componentFileChunkName:"v-09e1915c",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Other/ABAQUS/Simulation platform.html.js",dataFilePathRelative:"pages/Other/ABAQUS/Simulation platform.html.js",dataFileChunkName:"v-09e1915c",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Other/ABAQUS/Simulation platform.html",htmlFilePathRelative:"Other/ABAQUS/Simulation platform.html"},{data:{key:"v-d72b840a",path:"/Other/Python/%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%89%A7%E8%A1%8Cpython%E8%84%9A%E6%9C%AC%E7%9A%84%E4%BC%A0%E5%8F%82%E6%96%B9%E5%BC%8F.html",title:"命令行执行Python脚本的传参方式",lang:"zh-CN",frontmatter:{date:"2022/4/24 16:08",coverUrl:"/pic/9.jpg",stick:!1,keyword:"Python,命令行,传参",description:"命令行执行Python脚本的传参方式",title:"命令行执行Python脚本的传参方式",tag:["Python","命令行","传参"],categories:["Python","命令行","传参"]},excerpt:"",headers:[{level:2,title:"✨命令行执行Python脚本的传参方式✨",slug:"✨命令行执行python脚本的传参方式✨",children:[{level:3,title:"应用场景",slug:"应用场景",children:[]},{level:3,title:"方式一",slug:"方式一",children:[]},{level:3,title:"方式二",slug:"方式二",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-d72b840a",path:"/Other/Python/%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%89%A7%E8%A1%8Cpython%E8%84%9A%E6%9C%AC%E7%9A%84%E4%BC%A0%E5%8F%82%E6%96%B9%E5%BC%8F.html",title:"命令行执行Python脚本的传参方式",lang:"zh-CN",frontmatter:{date:"2022/4/24 16:08",coverUrl:"/pic/9.jpg",stick:!1,keyword:"Python,命令行,传参",description:"命令行执行Python脚本的传参方式",title:"命令行执行Python脚本的传参方式",tag:["Python","命令行","传参"],categories:["Python","命令行","传参"]},excerpt:"",headers:[{level:2,title:"✨命令行执行Python脚本的传参方式✨",slug:"✨命令行执行python脚本的传参方式✨",children:[{level:3,title:"应用场景",slug:"应用场景",children:[]},{level:3,title:"方式一",slug:"方式一",children:[]},{level:3,title:"方式二",slug:"方式二",children:[]}]}],content:"\r\n\r\n## ✨命令行执行Python脚本的传参方式✨\r\n\r\n### 应用场景\r\n- 在对ABAQUS进行二次开发时，需要将核心脚本的外部数据传递到脚本内部并执行\r\n- 核心脚本在运行时，可以调用所传递的变量参数\r\n- 命令行执行或者用户子程序执行\r\n\r\n### 方式一\r\n\r\n#### 使用sys.args\r\n\r\n#### 简单示例\r\n```python\r\nimport sys\r\n\r\ndef test_sys_args():\r\n    if len(sys.argv) > 1:\r\n        print(len(sys.argv) - 1)\r\n        print(sys.argv)\r\n    else:\r\n        print('无参数输入')\r\nif __name__ == '__main__':\r\n    test_sys_args()\r\n```\r\n\r\n#### 执行\r\n`python test.py a 1 test`\r\n- 脚本文件名后面的是需要传递的参数\r\n- 其它参数在命令行中传入时需要用空格分开\r\n- 若参数中需要包含“”，则需要使用到转义字符\\进行转义\r\n\r\n#### 输出结果\r\n```python\r\n3\r\n['test.py', 'a', '1', 'test']\r\n```\r\n- 3代表着传递参数的数量\r\n- sys.args实现从程序外部向程序传递参数，它的值是一个列表list，其中保存了通过命令行传递的各个参数\r\n- 输出sys.argv[0],即为第一个参数，是脚本本身\r\n- sys.argv[1]的输出结果为a\r\n\r\n> 所以在二次开发的仿真脚本中，使用子程序进或命令行运行脚本，且需要使用此种方式进行传参时，需要将变量及其参数一并传递，具体使用方式如下\r\n\r\n```python\r\n#执行脚本\r\nchild_process.exec(command val1=1 val2=2 val3=3)\r\n```\r\n\r\n\r\n脚本内部\r\n`sys.argv[1]`输出结果为`val1=1`\r\n- 满足脚本对的变量需求，成功将脚本外的参数传递到脚本内\r\n\r\n\r\n### 方式二\r\n\r\n#### 创建独立脚本参数文件\r\n\r\n- 使用node.js的文本操作`fs`模块\r\n- 在`python`的运行目录下创建单独的变量数据`txt`文件夹\r\n- 先读取变量数据，然后将变量根据格式拼接，最后将其写入单独的文本文件\r\n- 在执行`python`脚本时，只需在脚本中运行目录下的文本文件，就完成了参数的传递工作\r\n\r\n#### 如下所示\r\n\r\n#### node.js后端\r\n```javascript\r\nvar fs = require('fs')\r\n\r\nfs.writeFile('test.txt', _registerMsg, function (err) {\r\n\r\n        if (err) {\r\n            return console.log(err);\r\n        } else {\r\n            // 变量文件创建成功后，执行核心计算脚本\r\n            exec(\"abaqus cae nogui=abaqus.py\", function (error, stdout, stderr) {\r\n                if (stdout.length > 1) {\r\n                    // 计算成功\r\n                    console.log('you offer args:', stdout);\r\n                } else {\r\n                    // 计算失败\r\n                    console.log('you don\\'t offer args');\r\n                }\r\n                if (error) {\r\n                    console.info('stderr : ' + stderr);\r\n                }\r\n            })\r\n\r\n        }\r\n    })\r\n```\r\n> 脚本所需参数已经提前拼接并写入到`_registerMsg`变量中\r\n\r\n#### python脚本\r\n```python\r\nimport io\r\nwith io.open(\"test.txt\", encoding='utf-8') as f:\r\n    code = f.read()\r\nexec(code)\r\n```\r\n> 脚本只需打开同目录下的参数文件并执行，即可将参数传递到脚本中\r\n\r\n#### 两种方式的优缺点\r\n- 第一种方式能够对每个参数进行单独读取，但是也需要进行单独输出\r\n- 当需要传递参数较多时，每次运行脚本都要进行输入，工作量较大\r\n- 第二种方式将参数进行了集成，只需调整脚本中的变量，集合进行参数的修改\r\n- 在面向较多的参数时便于对参数的操作，能够提升效率",contentRendered:'<h2 id="✨命令行执行python脚本的传参方式✨" tabindex="-1"><a class="header-anchor" href="#✨命令行执行python脚本的传参方式✨" aria-hidden="true">#</a> ✨命令行执行Python脚本的传参方式✨</h2>\n<h3 id="应用场景" tabindex="-1"><a class="header-anchor" href="#应用场景" aria-hidden="true">#</a> 应用场景</h3>\n<ul>\n<li>在对ABAQUS进行二次开发时，需要将核心脚本的外部数据传递到脚本内部并执行</li>\n<li>核心脚本在运行时，可以调用所传递的变量参数</li>\n<li>命令行执行或者用户子程序执行</li>\n</ul>\n<h3 id="方式一" tabindex="-1"><a class="header-anchor" href="#方式一" aria-hidden="true">#</a> 方式一</h3>\n<h4 id="使用sys-args" tabindex="-1"><a class="header-anchor" href="#使用sys-args" aria-hidden="true">#</a> 使用sys.args</h4>\n<h4 id="简单示例" tabindex="-1"><a class="header-anchor" href="#简单示例" aria-hidden="true">#</a> 简单示例</h4>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">import</span> sys\n\n<span class="token keyword">def</span> <span class="token function">test_sys_args</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">:</span>\n        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>\n        <span class="token keyword">print</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>\n    <span class="token keyword">else</span><span class="token punctuation">:</span>\n        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">\'无参数输入\'</span><span class="token punctuation">)</span>\n<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">\'__main__\'</span><span class="token punctuation">:</span>\n    test_sys_args<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h4 id="执行" tabindex="-1"><a class="header-anchor" href="#执行" aria-hidden="true">#</a> 执行</h4>\n<p><code>python test.py a 1 test</code></p>\n<ul>\n<li>脚本文件名后面的是需要传递的参数</li>\n<li>其它参数在命令行中传入时需要用空格分开</li>\n<li>若参数中需要包含“”，则需要使用到转义字符\\进行转义</li>\n</ul>\n<h4 id="输出结果" tabindex="-1"><a class="header-anchor" href="#输出结果" aria-hidden="true">#</a> 输出结果</h4>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token number">3</span>\n<span class="token punctuation">[</span><span class="token string">\'test.py\'</span><span class="token punctuation">,</span> <span class="token string">\'a\'</span><span class="token punctuation">,</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span> <span class="token string">\'test\'</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul>\n<li>3代表着传递参数的数量</li>\n<li>sys.args实现从程序外部向程序传递参数，它的值是一个列表list，其中保存了通过命令行传递的各个参数</li>\n<li>输出sys.argv[0],即为第一个参数，是脚本本身</li>\n<li>sys.argv[1]的输出结果为a</li>\n</ul>\n<blockquote>\n<p>所以在二次开发的仿真脚本中，使用子程序进或命令行运行脚本，且需要使用此种方式进行传参时，需要将变量及其参数一并传递，具体使用方式如下</p>\n</blockquote>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token comment">#执行脚本</span>\nchild_process<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span>command val1<span class="token operator">=</span><span class="token number">1</span> val2<span class="token operator">=</span><span class="token number">2</span> val3<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>脚本内部\n<code>sys.argv[1]</code>输出结果为<code>val1=1</code></p>\n<ul>\n<li>满足脚本对的变量需求，成功将脚本外的参数传递到脚本内</li>\n</ul>\n<h3 id="方式二" tabindex="-1"><a class="header-anchor" href="#方式二" aria-hidden="true">#</a> 方式二</h3>\n<h4 id="创建独立脚本参数文件" tabindex="-1"><a class="header-anchor" href="#创建独立脚本参数文件" aria-hidden="true">#</a> 创建独立脚本参数文件</h4>\n<ul>\n<li>使用node.js的文本操作<code>fs</code>模块</li>\n<li>在<code>python</code>的运行目录下创建单独的变量数据<code>txt</code>文件夹</li>\n<li>先读取变量数据，然后将变量根据格式拼接，最后将其写入单独的文本文件</li>\n<li>在执行<code>python</code>脚本时，只需在脚本中运行目录下的文本文件，就完成了参数的传递工作</li>\n</ul>\n<h4 id="如下所示" tabindex="-1"><a class="header-anchor" href="#如下所示" aria-hidden="true">#</a> 如下所示</h4>\n<h4 id="node-js后端" tabindex="-1"><a class="header-anchor" href="#node-js后端" aria-hidden="true">#</a> node.js后端</h4>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'fs\'</span><span class="token punctuation">)</span>\n\nfs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">\'test.txt\'</span><span class="token punctuation">,</span> _registerMsg<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 变量文件创建成功后，执行核心计算脚本</span>\n            <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"abaqus cae nogui=abaqus.py"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>stdout<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token comment">// 计算成功</span>\n                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'you offer args:\'</span><span class="token punctuation">,</span> stdout<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                    <span class="token comment">// 计算失败</span>\n                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'you don\\\'t offer args\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">\'stderr : \'</span> <span class="token operator">+</span> stderr<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><blockquote>\n<p>脚本所需参数已经提前拼接并写入到<code>_registerMsg</code>变量中</p>\n</blockquote>\n<h4 id="python脚本" tabindex="-1"><a class="header-anchor" href="#python脚本" aria-hidden="true">#</a> python脚本</h4>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">import</span> io\n<span class="token keyword">with</span> io<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"test.txt"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">\'utf-8\'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>\n    code <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">exec</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote>\n<p>脚本只需打开同目录下的参数文件并执行，即可将参数传递到脚本中</p>\n</blockquote>\n<h4 id="两种方式的优缺点" tabindex="-1"><a class="header-anchor" href="#两种方式的优缺点" aria-hidden="true">#</a> 两种方式的优缺点</h4>\n<ul>\n<li>第一种方式能够对每个参数进行单独读取，但是也需要进行单独输出</li>\n<li>当需要传递参数较多时，每次运行脚本都要进行输入，工作量较大</li>\n<li>第二种方式将参数进行了集成，只需调整脚本中的变量，集合进行参数的修改</li>\n<li>在面向较多的参数时便于对参数的操作，能够提升效率</li>\n</ul>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/Other/Python/命令行执行python脚本的传参方式.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"命令行执行python脚本的传参方式",filePath:"C:/Users/67099/Desktop/blog-demo/docs/Other/Python/命令行执行python脚本的传参方式.md",filePathRelative:"Other/Python/命令行执行python脚本的传参方式.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Other/Python/命令行执行python脚本的传参方式.html.vue",componentFilePathRelative:"pages/Other/Python/命令行执行python脚本的传参方式.html.vue",componentFileChunkName:"v-d72b840a",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/Other/Python/命令行执行python脚本的传参方式.html.js",dataFilePathRelative:"pages/Other/Python/命令行执行python脚本的传参方式.html.js",dataFileChunkName:"v-d72b840a",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/Other/Python/命令行执行python脚本的传参方式.html",htmlFilePathRelative:"Other/Python/命令行执行python脚本的传参方式.html"},{data:{key:"v-e44ed9cc",path:"/T-zone/life/%E6%B5%AE%E7%94%9F%E4%B8%80%E8%AE%B0(1)-%E9%80%89%E6%8B%A9.html",title:"浮生一记（1）-选择",lang:"zh-CN",frontmatter:{date:"2022/4/10 10:08",coverUrl:"/pic/11.jpg",stick:!1,keyword:"浮生一记，选择",description:"浮生一记（1）-选择",title:"浮生一记（1）-选择",tag:["浮生一记，选择"],categories:["浮生一记，选择"]},excerpt:"",headers:[{level:2,title:"✨浮生一记（1）-选择✨",slug:"✨浮生一记-1-选择✨",children:[{level:3,title:"选择的意义🚥",slug:"选择的意义🚥",children:[]},{level:3,title:"拥有选择🌈",slug:"拥有选择🌈",children:[]},{level:3,title:"如何选择🌠",slug:"如何选择🌠",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-e44ed9cc",path:"/T-zone/life/%E6%B5%AE%E7%94%9F%E4%B8%80%E8%AE%B0(1)-%E9%80%89%E6%8B%A9.html",title:"浮生一记（1）-选择",lang:"zh-CN",frontmatter:{date:"2022/4/10 10:08",coverUrl:"/pic/11.jpg",stick:!1,keyword:"浮生一记，选择",description:"浮生一记（1）-选择",title:"浮生一记（1）-选择",tag:["浮生一记，选择"],categories:["浮生一记，选择"]},excerpt:"",headers:[{level:2,title:"✨浮生一记（1）-选择✨",slug:"✨浮生一记-1-选择✨",children:[{level:3,title:"选择的意义🚥",slug:"选择的意义🚥",children:[]},{level:3,title:"拥有选择🌈",slug:"拥有选择🌈",children:[]},{level:3,title:"如何选择🌠",slug:"如何选择🌠",children:[]}]}],content:"\r\n## ✨浮生一记（1）-选择✨\r\n\r\n### 选择的意义🚥\r\n- 生活中无处不在的各种选择\r\n- 你选择如何度过自己大把的时间\r\n- 你选择值得去做的事和值得交的朋友\r\n- 你选择你想要的生活，选择你要爱的人\r\n\r\n### 拥有选择🌈\r\n> 如果你能选择做某件事，那你已经成功了一半。大多数我们都是被迫做出选择，选择我们不想要的、讨厌的甚至违心的。大多数情况下，我们没有选择的余地，而是随波逐流...\r\n- 拥有选择的权利，已是我们的奢求\r\n- 被迫的选择不是选择，那是妥协\r\n- 向生活低头，便也失去了选择\r\n\r\n``` python\r\n人这一生，能选择的，只有两件事...\r\n这一生怎么爱\r\n这一生怎么活\r\n                                ————王小波\r\n```\r\n\r\n### 如何选择🌠\r\n> 与其说是选择，不如说是放弃，当你做出了某个选择意味着你放弃了其它选择。选择只能有一个，但放弃的有很多。学会放弃才是做出最好选择的第一步\r\n- 你放弃了大城市的欲望生活，必定要降低物质的需求\r\n- 你放弃了小城市的安逸生活，必定要承受工作的压力\r\n- 遵循自己内心的想法，做出不后悔的选择\r\n- 无法选择的事，就随便它去吧...\r\n\r\n\r\n``` py\r\nWhen you have the courage to make a choice, \r\nit's the highlight of your life！🚀🚀🚀\r\n```\r\n\r\n\r\n\r\n\r\n\r\n",contentRendered:'<h2 id="✨浮生一记-1-选择✨" tabindex="-1"><a class="header-anchor" href="#✨浮生一记-1-选择✨" aria-hidden="true">#</a> ✨浮生一记（1）-选择✨</h2>\n<h3 id="选择的意义🚥" tabindex="-1"><a class="header-anchor" href="#选择的意义🚥" aria-hidden="true">#</a> 选择的意义🚥</h3>\n<ul>\n<li>生活中无处不在的各种选择</li>\n<li>你选择如何度过自己大把的时间</li>\n<li>你选择值得去做的事和值得交的朋友</li>\n<li>你选择你想要的生活，选择你要爱的人</li>\n</ul>\n<h3 id="拥有选择🌈" tabindex="-1"><a class="header-anchor" href="#拥有选择🌈" aria-hidden="true">#</a> 拥有选择🌈</h3>\n<blockquote>\n<p>如果你能选择做某件事，那你已经成功了一半。大多数我们都是被迫做出选择，选择我们不想要的、讨厌的甚至违心的。大多数情况下，我们没有选择的余地，而是随波逐流...</p>\n</blockquote>\n<ul>\n<li>拥有选择的权利，已是我们的奢求</li>\n<li>被迫的选择不是选择，那是妥协</li>\n<li>向生活低头，便也失去了选择</li>\n</ul>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>人这一生，能选择的，只有两件事<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n这一生怎么爱\n这一生怎么活\n                                ————王小波\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="如何选择🌠" tabindex="-1"><a class="header-anchor" href="#如何选择🌠" aria-hidden="true">#</a> 如何选择🌠</h3>\n<blockquote>\n<p>与其说是选择，不如说是放弃，当你做出了某个选择意味着你放弃了其它选择。选择只能有一个，但放弃的有很多。学会放弃才是做出最好选择的第一步</p>\n</blockquote>\n<ul>\n<li>你放弃了大城市的欲望生活，必定要降低物质的需求</li>\n<li>你放弃了小城市的安逸生活，必定要承受工作的压力</li>\n<li>遵循自己内心的想法，做出不后悔的选择</li>\n<li>无法选择的事，就随便它去吧...</li>\n</ul>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>When you have the courage to make a choice<span class="token punctuation">,</span> \nit\'s the highlight of your life！🚀🚀🚀\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/T-zone/life/浮生一记(1)-选择.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"浮生一记(1)-选择",filePath:"C:/Users/67099/Desktop/blog-demo/docs/T-zone/life/浮生一记(1)-选择.md",filePathRelative:"T-zone/life/浮生一记(1)-选择.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/T-zone/life/浮生一记(1)-选择.html.vue",componentFilePathRelative:"pages/T-zone/life/浮生一记(1)-选择.html.vue",componentFileChunkName:"v-e44ed9cc",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/T-zone/life/浮生一记(1)-选择.html.js",dataFilePathRelative:"pages/T-zone/life/浮生一记(1)-选择.html.js",dataFileChunkName:"v-e44ed9cc",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/T-zone/life/浮生一记(1)-选择.html",htmlFilePathRelative:"T-zone/life/浮生一记(1)-选择.html"},{data:{key:"v-08f1d122",path:"/T-zone/no-emo/%E8%80%83%E7%A0%94%E7%9A%84%E6%84%8F%E4%B9%89%E4%BD%95%E5%9C%A8.html",title:"考研的意义何在",lang:"zh-CN",frontmatter:{date:"2022/4/1 22:08",coverUrl:"/pic/4.jpg",stick:!0,keyword:"考研,意义,选择",description:"考研的意义何在",title:"考研的意义何在",tag:["考研","意义"],categories:["考研","意义"]},excerpt:"",headers:[{level:2,title:"✨考研的意义何在✨",slug:"✨考研的意义何在✨",children:[{level:3,title:"此篇随笔仅纪录个人对考研的看法，真实性及时效性有待考量",slug:"此篇随笔仅纪录个人对考研的看法-真实性及时效性有待考量",children:[]},{level:3,title:"在你眼中的考研...😁",slug:"在你眼中的考研-😁",children:[]},{level:3,title:"现实中的你读研...😫",slug:"现实中的你读研-😫",children:[]},{level:3,title:"当然有人说他愿意混三年换来一张文凭...😑",slug:"当然有人说他愿意混三年换来一张文凭-😑",children:[]},{level:3,title:"研究生的正确使用方式🚀",slug:"研究生的正确使用方式🚀",children:[]},{level:3,title:"现实的当头一棒🔨",slug:"现实的当头一棒🔨",children:[]}]},{level:2,title:"共勉！！！",slug:"共勉",children:[]}],git:{updatedTime:null,contributors:[]}},key:"v-08f1d122",path:"/T-zone/no-emo/%E8%80%83%E7%A0%94%E7%9A%84%E6%84%8F%E4%B9%89%E4%BD%95%E5%9C%A8.html",title:"考研的意义何在",lang:"zh-CN",frontmatter:{date:"2022/4/1 22:08",coverUrl:"/pic/4.jpg",stick:!0,keyword:"考研,意义,选择",description:"考研的意义何在",title:"考研的意义何在",tag:["考研","意义"],categories:["考研","意义"]},excerpt:"",headers:[{level:2,title:"✨考研的意义何在✨",slug:"✨考研的意义何在✨",children:[{level:3,title:"此篇随笔仅纪录个人对考研的看法，真实性及时效性有待考量",slug:"此篇随笔仅纪录个人对考研的看法-真实性及时效性有待考量",children:[]},{level:3,title:"在你眼中的考研...😁",slug:"在你眼中的考研-😁",children:[]},{level:3,title:"现实中的你读研...😫",slug:"现实中的你读研-😫",children:[]},{level:3,title:"当然有人说他愿意混三年换来一张文凭...😑",slug:"当然有人说他愿意混三年换来一张文凭-😑",children:[]},{level:3,title:"研究生的正确使用方式🚀",slug:"研究生的正确使用方式🚀",children:[]},{level:3,title:"现实的当头一棒🔨",slug:"现实的当头一棒🔨",children:[]}]},{level:2,title:"共勉！！！",slug:"共勉",children:[]}],content:"\r\n## ✨考研的意义何在✨\r\n\r\n### **此篇随笔仅纪录个人对考研的看法，真实性及时效性有待考量**\r\n\r\n### 在你眼中的考研...😁\r\n- 本科毕业后最正确的选择\r\n- 考上了研究生，未来可期\r\n- 你的父母替你感到非常骄傲\r\n- 周围同学朋友都觉得你很厉害\r\n- 你可以继续过着美好的校园生活\r\n- 自己能继续深造三年努力学习\r\n- 期待毕业后找到满意的工作\r\n- 一切都在向好的方向发展\r\n\r\n### 现实中的你读研...😫\r\n- 大学混了四年啥也不会\r\n- 读研可以暂时逃避就业\r\n- 指望着学历提升当人上人\r\n- 读研期间科研压力大毕业难\r\n- 专业天坑学校双非继续混三年\r\n- 好不容易研究生毕业照样啥都不会\r\n- 毕业开始抱怨工作不好找、社会内卷\r\n- 多花三年钱不说，三年的时间就换一纸文凭\r\n\r\n### 当然有人说他愿意混三年换来一张文凭...😑\r\n> 不可否认的是，在当今我国教育体制之下，功利之心人皆有之，90% 的本科生读研就是为了一纸文凭。社会唯学历是图的现状，影响的是真正想搞科研的同学，学术圈水之深，悲哀至极...\r\n- 先上岸，混三年，能毕业，拿文凭，成大器\r\n- 在他眼中三年是无所谓的，反正在学校可以玩\r\n- 他深知本科工作不好找，所以就为了文凭去读研\r\n- 殊不知自己就是拉，读上研也掩盖不了自己拉的事实\r\n- 他的文凭在他眼中价值千金，在社会上可能被视作草芥\r\n- 等他毕业了，三年后他还是这批当初混本科混硕士的最拉的人\r\n- 三年中他没有产生任何实质的变革，毕业后社会收割的就是他们\r\n\r\n### 研究生的正确使用方式🚀\r\n- 这确实是寒门学子向上跃迁的窄通道之一\r\n- 通过好专业、院校来刷掉自己的烂本科烂专业\r\n- 不再饥不择食地上岸，选择朝阳专业、985/211\r\n- 读研期间积极参与研究课题，并且努力获取研究成果\r\n- 为读研后的工作早做准备，不再拘泥于安逸的校园生活\r\n\r\n### 现实的当头一棒🔨\r\n> 真正的大佬本科毕业就找到非常不错的工作了，他知道自己不需要读研，他选择了不读研。如果他来考研，对90%的学生都是降维打击。他有选择不读研的能力，我们没有。我们要承认我们本科混了四年，什么也不会，我们活该...\r\n\r\n> 社会中高阶层或者有资源的家庭早让子女本科毕业占好坑了，一个萝卜一个坑，他们很早就开始做打算，从小到大的培养，本科四年的积累，还有家庭资源的调动，随便哪一项都能吊打你的破研究生文凭\r\n\r\n> 少数985/211几个热门专业研究生大佬们，在读研期间深耕积累，拿项目、写论文、出成果，为毕业后的工作早就做好了准备。毕业后进华为、字节、腾讯、阿里等大厂非常轻松。虽然逃不了资本家的剥削，但是他们给的太多了，通过辛苦工作，翻身和阶级跃迁指日可待...\r\n\r\n> 当你拼命毕业后，找工作时发现，自己还是一无是处。只是工资比当初的本科生高了一些而已，你的三年努力并没有让你改变多少。你也许会发现三年前就工作的本科室友工作顺利、职业升迁，真令人唏嘘啊\r\n\r\n> 你抱怨自己的专业垃圾，研究生没读985/211，研究生啥也没学到，三年青春不再，工作找不到，考公太难。好不容易找到了诚心如意的工作，又开始了无尽的996和内卷大潮\r\n\r\n> 殊不知，我们短浅的目光就注定了我们只能是底层人。何为长远？是积极换赛道？是知耻而后勇？还是逼自己一刻不停地朝目标奔去？可惜，这些在当今社会都很难实现了...\r\n\r\n- 尚且不谈现今考研有多难，择校、备考、复试等，需要你花费至少大半年的时间来准备。半途而废者甚，一战上岸者微。你需忍耐备考期间的诸多压力，可最终上岸的只有少数人，其中也不乏二战三战的人，你想考几年？你也要知道，我们与大佬之间唯一公平的只有时间\r\n- 大多数情况不是我们选择考研，而是考研选择我们。我们似乎没有别的选择，“大家都考，我也要考”才是内心真实的独白。可当我们有了别的发展路径选择，并且有了足够的规划和可行性时，你才有选择考研的权利。这不是我们临近毕业时才考虑的，而是应该早做打算，可我们思维的局限性限制了我们的选择余地\r\n  - 很多学生说“我是打心底想要考研！”，怕不是因为他除了考研就只有工作，没其它路子了，自欺欺人罢了\r\n  - 学校和社会脱节已是现实，我们身在象牙塔中看不到外面的世界，当然无从选择，只能随波逐流...\r\n\r\n\r\n\r\n#### 那现在的普通本科生毕业生应该怎么办？还是去考研吧，好学校、好专业、三年的努力缺一不可。既然顺应大流会让你安心，这就足矣。在这内卷的时代，底层本来就是大多数... \r\n\r\n``` py\r\n只有一种英雄主义，那就是在认清生活的真相后依然热爱生活。\r\n                                                 ————罗曼罗兰\r\n```\r\n\r\n## 共勉！！！",contentRendered:'<h2 id="✨考研的意义何在✨" tabindex="-1"><a class="header-anchor" href="#✨考研的意义何在✨" aria-hidden="true">#</a> ✨考研的意义何在✨</h2>\n<h3 id="此篇随笔仅纪录个人对考研的看法-真实性及时效性有待考量" tabindex="-1"><a class="header-anchor" href="#此篇随笔仅纪录个人对考研的看法-真实性及时效性有待考量" aria-hidden="true">#</a> <strong>此篇随笔仅纪录个人对考研的看法，真实性及时效性有待考量</strong></h3>\n<h3 id="在你眼中的考研-😁" tabindex="-1"><a class="header-anchor" href="#在你眼中的考研-😁" aria-hidden="true">#</a> 在你眼中的考研...😁</h3>\n<ul>\n<li>本科毕业后最正确的选择</li>\n<li>考上了研究生，未来可期</li>\n<li>你的父母替你感到非常骄傲</li>\n<li>周围同学朋友都觉得你很厉害</li>\n<li>你可以继续过着美好的校园生活</li>\n<li>自己能继续深造三年努力学习</li>\n<li>期待毕业后找到满意的工作</li>\n<li>一切都在向好的方向发展</li>\n</ul>\n<h3 id="现实中的你读研-😫" tabindex="-1"><a class="header-anchor" href="#现实中的你读研-😫" aria-hidden="true">#</a> 现实中的你读研...😫</h3>\n<ul>\n<li>大学混了四年啥也不会</li>\n<li>读研可以暂时逃避就业</li>\n<li>指望着学历提升当人上人</li>\n<li>读研期间科研压力大毕业难</li>\n<li>专业天坑学校双非继续混三年</li>\n<li>好不容易研究生毕业照样啥都不会</li>\n<li>毕业开始抱怨工作不好找、社会内卷</li>\n<li>多花三年钱不说，三年的时间就换一纸文凭</li>\n</ul>\n<h3 id="当然有人说他愿意混三年换来一张文凭-😑" tabindex="-1"><a class="header-anchor" href="#当然有人说他愿意混三年换来一张文凭-😑" aria-hidden="true">#</a> 当然有人说他愿意混三年换来一张文凭...😑</h3>\n<blockquote>\n<p>不可否认的是，在当今我国教育体制之下，功利之心人皆有之，90% 的本科生读研就是为了一纸文凭。社会唯学历是图的现状，影响的是真正想搞科研的同学，学术圈水之深，悲哀至极...</p>\n</blockquote>\n<ul>\n<li>先上岸，混三年，能毕业，拿文凭，成大器</li>\n<li>在他眼中三年是无所谓的，反正在学校可以玩</li>\n<li>他深知本科工作不好找，所以就为了文凭去读研</li>\n<li>殊不知自己就是拉，读上研也掩盖不了自己拉的事实</li>\n<li>他的文凭在他眼中价值千金，在社会上可能被视作草芥</li>\n<li>等他毕业了，三年后他还是这批当初混本科混硕士的最拉的人</li>\n<li>三年中他没有产生任何实质的变革，毕业后社会收割的就是他们</li>\n</ul>\n<h3 id="研究生的正确使用方式🚀" tabindex="-1"><a class="header-anchor" href="#研究生的正确使用方式🚀" aria-hidden="true">#</a> 研究生的正确使用方式🚀</h3>\n<ul>\n<li>这确实是寒门学子向上跃迁的窄通道之一</li>\n<li>通过好专业、院校来刷掉自己的烂本科烂专业</li>\n<li>不再饥不择食地上岸，选择朝阳专业、985/211</li>\n<li>读研期间积极参与研究课题，并且努力获取研究成果</li>\n<li>为读研后的工作早做准备，不再拘泥于安逸的校园生活</li>\n</ul>\n<h3 id="现实的当头一棒🔨" tabindex="-1"><a class="header-anchor" href="#现实的当头一棒🔨" aria-hidden="true">#</a> 现实的当头一棒🔨</h3>\n<blockquote>\n<p>真正的大佬本科毕业就找到非常不错的工作了，他知道自己不需要读研，他选择了不读研。如果他来考研，对90%的学生都是降维打击。他有选择不读研的能力，我们没有。我们要承认我们本科混了四年，什么也不会，我们活该...</p>\n</blockquote>\n<blockquote>\n<p>社会中高阶层或者有资源的家庭早让子女本科毕业占好坑了，一个萝卜一个坑，他们很早就开始做打算，从小到大的培养，本科四年的积累，还有家庭资源的调动，随便哪一项都能吊打你的破研究生文凭</p>\n</blockquote>\n<blockquote>\n<p>少数985/211几个热门专业研究生大佬们，在读研期间深耕积累，拿项目、写论文、出成果，为毕业后的工作早就做好了准备。毕业后进华为、字节、腾讯、阿里等大厂非常轻松。虽然逃不了资本家的剥削，但是他们给的太多了，通过辛苦工作，翻身和阶级跃迁指日可待...</p>\n</blockquote>\n<blockquote>\n<p>当你拼命毕业后，找工作时发现，自己还是一无是处。只是工资比当初的本科生高了一些而已，你的三年努力并没有让你改变多少。你也许会发现三年前就工作的本科室友工作顺利、职业升迁，真令人唏嘘啊</p>\n</blockquote>\n<blockquote>\n<p>你抱怨自己的专业垃圾，研究生没读985/211，研究生啥也没学到，三年青春不再，工作找不到，考公太难。好不容易找到了诚心如意的工作，又开始了无尽的996和内卷大潮</p>\n</blockquote>\n<blockquote>\n<p>殊不知，我们短浅的目光就注定了我们只能是底层人。何为长远？是积极换赛道？是知耻而后勇？还是逼自己一刻不停地朝目标奔去？可惜，这些在当今社会都很难实现了...</p>\n</blockquote>\n<ul>\n<li>尚且不谈现今考研有多难，择校、备考、复试等，需要你花费至少大半年的时间来准备。半途而废者甚，一战上岸者微。你需忍耐备考期间的诸多压力，可最终上岸的只有少数人，其中也不乏二战三战的人，你想考几年？你也要知道，我们与大佬之间唯一公平的只有时间</li>\n<li>大多数情况不是我们选择考研，而是考研选择我们。我们似乎没有别的选择，“大家都考，我也要考”才是内心真实的独白。可当我们有了别的发展路径选择，并且有了足够的规划和可行性时，你才有选择考研的权利。这不是我们临近毕业时才考虑的，而是应该早做打算，可我们思维的局限性限制了我们的选择余地\n<ul>\n<li>很多学生说“我是打心底想要考研！”，怕不是因为他除了考研就只有工作，没其它路子了，自欺欺人罢了</li>\n<li>学校和社会脱节已是现实，我们身在象牙塔中看不到外面的世界，当然无从选择，只能随波逐流...</li>\n</ul>\n</li>\n</ul>\n<h4 id="那现在的普通本科生毕业生应该怎么办-还是去考研吧-好学校、好专业、三年的努力缺一不可。既然顺应大流会让你安心-这就足矣。在这内卷的时代-底层本来就是大多数" tabindex="-1"><a class="header-anchor" href="#那现在的普通本科生毕业生应该怎么办-还是去考研吧-好学校、好专业、三年的努力缺一不可。既然顺应大流会让你安心-这就足矣。在这内卷的时代-底层本来就是大多数" aria-hidden="true">#</a> 那现在的普通本科生毕业生应该怎么办？还是去考研吧，好学校、好专业、三年的努力缺一不可。既然顺应大流会让你安心，这就足矣。在这内卷的时代，底层本来就是大多数...</h4>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>只有一种英雄主义，那就是在认清生活的真相后依然热爱生活。\n                                                 ————罗曼罗兰\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="共勉" tabindex="-1"><a class="header-anchor" href="#共勉" aria-hidden="true">#</a> 共勉！！！</h2>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/T-zone/no-emo/考研的意义何在.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"考研的意义何在",filePath:"C:/Users/67099/Desktop/blog-demo/docs/T-zone/no-emo/考研的意义何在.md",filePathRelative:"T-zone/no-emo/考研的意义何在.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/T-zone/no-emo/考研的意义何在.html.vue",componentFilePathRelative:"pages/T-zone/no-emo/考研的意义何在.html.vue",componentFileChunkName:"v-08f1d122",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/T-zone/no-emo/考研的意义何在.html.js",dataFilePathRelative:"pages/T-zone/no-emo/考研的意义何在.html.js",dataFileChunkName:"v-08f1d122",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/T-zone/no-emo/考研的意义何在.html",htmlFilePathRelative:"T-zone/no-emo/考研的意义何在.html"},{data:{key:"v-7072d7a0",path:"/T-zone/no-emo/%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E5%AF%B9%E7%9A%84%EF%BC%9F.html",title:"马克思为什么是对的？",lang:"zh-CN",frontmatter:{date:"2022/5/1 22:08",coverUrl:"/pic/4.jpg",stick:!1,keyword:"马克思,资本主义",description:"马克思为什么是对的？",title:"马克思为什么是对的？",tag:["马克思","资本主义"],categories:["马克思","资本主义"]},excerpt:"",headers:[{level:2,title:"✨马克思为什么是对的？✨",slug:"✨马克思为什么是对的-✨",children:[{level:3,title:"人性论",slug:"人性论",children:[]},{level:3,title:"资本主义性质",slug:"资本主义性质",children:[]},{level:3,title:"剩余价值理论",slug:"剩余价值理论",children:[]},{level:3,title:"资本主义如何控制我们",slug:"资本主义如何控制我们",children:[]},{level:3,title:"消费主义",slug:"消费主义",children:[]}]}],git:{updatedTime:null,contributors:[]}},key:"v-7072d7a0",path:"/T-zone/no-emo/%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E5%AF%B9%E7%9A%84%EF%BC%9F.html",title:"马克思为什么是对的？",lang:"zh-CN",frontmatter:{date:"2022/5/1 22:08",coverUrl:"/pic/4.jpg",stick:!1,keyword:"马克思,资本主义",description:"马克思为什么是对的？",title:"马克思为什么是对的？",tag:["马克思","资本主义"],categories:["马克思","资本主义"]},excerpt:"",headers:[{level:2,title:"✨马克思为什么是对的？✨",slug:"✨马克思为什么是对的-✨",children:[{level:3,title:"人性论",slug:"人性论",children:[]},{level:3,title:"资本主义性质",slug:"资本主义性质",children:[]},{level:3,title:"剩余价值理论",slug:"剩余价值理论",children:[]},{level:3,title:"资本主义如何控制我们",slug:"资本主义如何控制我们",children:[]},{level:3,title:"消费主义",slug:"消费主义",children:[]}]}],content:"\r\n\r\n\r\n## ✨马克思为什么是对的？✨\r\n\r\n### 人性论\r\n`在马克思看来，人性的本质是“工作”`\r\n- 个人的生产和能力是不可或缺的一部分，工作代表着人类最基础的能力，是一种参与自然并改变自然的能力，通过这个能力，个体才能体现出人类物种独有的高级意识\r\n- 人类的本质是由生产定义的，而人类的身份则是由基于生产关系而产生的社会关系定义的，人无法切割环境产生独立的身份\r\n- 在实践活动里，进行生产的个人终将以确定的方式进入确定的社会和政治关系\r\n> 以上是马克思观察人类和社会的最基本方法论，其核心在于体现生产、制造和社会关系基于人类本质的创造性运动所带来的不断流变\r\n\r\n\r\n### 资本主义性质\r\n`马克思把历史理解为社会中物质或经济力量的逐步扩张（历史唯物主义）`\r\n- 马克思认为资本主义制度相比于奴隶制、封建制、皇权制等各种制度而言，已经是一套**极其先进、改良和平等**的制度了\r\n> 资本主义本质上是一种商品生产制度，其根本目的是生产商品，让商品在市场上的销售产生资本，并使资本家获得利润\r\n- 因此，在资本主义社会，资本和利润的生产是首要目标，一切更人性的事物都要**让位于利润的生产**\r\n- 这意味着个人之间的联系和情感纯粹受到经济利益的制约，资本家通过工资雇佣劳动者，这是一个经济型大于政治性的制度\r\n- **资本家有绝对的义务、权利甚至道德优势来对一个工人的就业进行删减和消灭**\r\n- 货币交易反应并强化了**现代社会关系的冷漠、流动性和情感上的脱离**，以及对效用价值的强调与个人独特个性特征的冷漠\r\n> 雇佣和解雇员工在现代社会都是卖Y的延伸，我们每个人本质上都在从事卖身工作\r\n\r\n\r\n### 剩余价值理论\r\n`利润必须来自于剩余价值，即被剥削的价值`\r\n- 工人创造的财富越多，他们就越贫穷\r\n- 工人创造的商品越多，它们就越便宜\r\n\r\n> 在资本主义社会中，工人最大的问题不光是经济利益和剩余价值被剥削。更重要的是他们与自己正真的兴趣的疏远和分离，工作只是为了创造经济效益，而不创造任何精神成就感和利他主义的正外部性\r\n\r\n\r\n### 资本主义如何控制我们\r\n\r\n#### 1. 劳动分工\r\n\r\n- 各种变形的奴隶制到今天都没有彻底灭绝，而是更换了**各种福报的外衣**以全新的生态活了下来\r\n- 所有名为自由的工人，仍然必须在市场上畸形地**出售他们的劳动力**，他们必须把自己变成可以买卖的商品，才能获得生存的基本条件\r\n- 在资本主义制度下，工作失去了作为反应人类更高意识的创造性和合作性活动的潜力\r\n\r\n#### 2. 四种异化\r\n> 马克思将劳动分工看作是对个人和社会的异化与非人化，并终将被科技取代和淘汰，细节化的劳动分工使工人们沦为仅具有交换和使用价值的工具，并将本该释放人类多方面创造力的劳动异化\r\n\r\n    1. 将生产者与其所生产的商品脱离\r\n    2. 雇佣劳动的本质是在他人的支配、胁迫和束缚下从事的服务活动\r\n    3. 异化劳动剥离了人类股有的意义和表达人类创造力的潜力\r\n    4. 工作成为个人生活的目的，工人之间相互异化的一种方式就是工作场所的竞争性\r\n\r\n> 在资本主义国家，工人工作的越多，被异化的就越多。这导致他们必须通过购物和参与消费文化来逃避这种异化的感觉，但这往往**需要更多的金钱**。于是，他们就必须**越来越努力的工作**，越来越努力地被异化。在当下，这种痛苦不光是一个恶性循环，它更像是一个死循环\r\n\r\n#### 3. 为什么工人不反抗\r\n- 人们逐渐富裕，脱离了维持生计的底层生活\r\n- 人们除工资外还有资产，资本家向工人发放少量股份，使工人成为了资本拥有者\r\n- 国家通过宏观调控，保障大多数底层社会的基本需求，维持社会稳定\r\n> 我们沉浸在一个掩盖了不平等的意识形态和文化体系中，它们让资本注意变得顺其自然，无可挑剔...\r\n\r\n\r\n### 消费主义\r\n\r\n`消费主义从来不是一个单独的概念或浪潮，更与个人的自律精神无关`\r\n> 在本质上，消费主义是资本主义的一个强大变种，是资本主义的一种表现形式，它是一种全新的、扭曲的宗教，通过拜物的形式应许一切的幸福和美好，**以维持和压制资本主义内生的矛盾和危机**\r\n\r\n- 统治者们希望把一切需求消费化，他们就能够通过自己所掌握的生产资料来源源不断地创造新需求，并且重新定义所有需求。而这些行为的最终目的就是为了让人民处于一种“新奴隶状态”，**以维持社会的阶级分化**\r\n- 消费主义世界观，最终将服务于统治阶级转移人民注意力的目的，阻止他们思考变革的可能性\r\n\r\n> 在这个时代，当人们看向资本家时，人们看不到他们手上所掌握的权利，看到的是他们的各种奢侈消费享受。这带来了两个结果：\r\n  1. 资本家真正的权利被遮蔽了，这削减了冲突的可能\r\n  2. 消费层次的差距创造了一种续加的目标感和自由感，仿佛普通人只要努力工作也能消费起这样的东西，就好像你也就获得了和资本家一样的社会阶层和权力地位一样\r\n\r\n#### 经过以上马克思对资本主义的论述，结合当经社会无时无刻正在发生的，就足以说明马克思所说的都是对的...\r\n\r\n```python\r\n全世界无产阶级联合起来！\r\n                        ————《共产党宣言》\r\n```",contentRendered:'<h2 id="✨马克思为什么是对的-✨" tabindex="-1"><a class="header-anchor" href="#✨马克思为什么是对的-✨" aria-hidden="true">#</a> ✨马克思为什么是对的？✨</h2>\n<h3 id="人性论" tabindex="-1"><a class="header-anchor" href="#人性论" aria-hidden="true">#</a> 人性论</h3>\n<p><code>在马克思看来，人性的本质是“工作”</code></p>\n<ul>\n<li>个人的生产和能力是不可或缺的一部分，工作代表着人类最基础的能力，是一种参与自然并改变自然的能力，通过这个能力，个体才能体现出人类物种独有的高级意识</li>\n<li>人类的本质是由生产定义的，而人类的身份则是由基于生产关系而产生的社会关系定义的，人无法切割环境产生独立的身份</li>\n<li>在实践活动里，进行生产的个人终将以确定的方式进入确定的社会和政治关系</li>\n</ul>\n<blockquote>\n<p>以上是马克思观察人类和社会的最基本方法论，其核心在于体现生产、制造和社会关系基于人类本质的创造性运动所带来的不断流变</p>\n</blockquote>\n<h3 id="资本主义性质" tabindex="-1"><a class="header-anchor" href="#资本主义性质" aria-hidden="true">#</a> 资本主义性质</h3>\n<p><code>马克思把历史理解为社会中物质或经济力量的逐步扩张（历史唯物主义）</code></p>\n<ul>\n<li>马克思认为资本主义制度相比于奴隶制、封建制、皇权制等各种制度而言，已经是一套<strong>极其先进、改良和平等</strong>的制度了</li>\n</ul>\n<blockquote>\n<p>资本主义本质上是一种商品生产制度，其根本目的是生产商品，让商品在市场上的销售产生资本，并使资本家获得利润</p>\n</blockquote>\n<ul>\n<li>因此，在资本主义社会，资本和利润的生产是首要目标，一切更人性的事物都要<strong>让位于利润的生产</strong></li>\n<li>这意味着个人之间的联系和情感纯粹受到经济利益的制约，资本家通过工资雇佣劳动者，这是一个经济型大于政治性的制度</li>\n<li><strong>资本家有绝对的义务、权利甚至道德优势来对一个工人的就业进行删减和消灭</strong></li>\n<li>货币交易反应并强化了<strong>现代社会关系的冷漠、流动性和情感上的脱离</strong>，以及对效用价值的强调与个人独特个性特征的冷漠</li>\n</ul>\n<blockquote>\n<p>雇佣和解雇员工在现代社会都是卖Y的延伸，我们每个人本质上都在从事卖身工作</p>\n</blockquote>\n<h3 id="剩余价值理论" tabindex="-1"><a class="header-anchor" href="#剩余价值理论" aria-hidden="true">#</a> 剩余价值理论</h3>\n<p><code>利润必须来自于剩余价值，即被剥削的价值</code></p>\n<ul>\n<li>工人创造的财富越多，他们就越贫穷</li>\n<li>工人创造的商品越多，它们就越便宜</li>\n</ul>\n<blockquote>\n<p>在资本主义社会中，工人最大的问题不光是经济利益和剩余价值被剥削。更重要的是他们与自己正真的兴趣的疏远和分离，工作只是为了创造经济效益，而不创造任何精神成就感和利他主义的正外部性</p>\n</blockquote>\n<h3 id="资本主义如何控制我们" tabindex="-1"><a class="header-anchor" href="#资本主义如何控制我们" aria-hidden="true">#</a> 资本主义如何控制我们</h3>\n<h4 id="_1-劳动分工" tabindex="-1"><a class="header-anchor" href="#_1-劳动分工" aria-hidden="true">#</a> 1. 劳动分工</h4>\n<ul>\n<li>各种变形的奴隶制到今天都没有彻底灭绝，而是更换了<strong>各种福报的外衣</strong>以全新的生态活了下来</li>\n<li>所有名为自由的工人，仍然必须在市场上畸形地<strong>出售他们的劳动力</strong>，他们必须把自己变成可以买卖的商品，才能获得生存的基本条件</li>\n<li>在资本主义制度下，工作失去了作为反应人类更高意识的创造性和合作性活动的潜力</li>\n</ul>\n<h4 id="_2-四种异化" tabindex="-1"><a class="header-anchor" href="#_2-四种异化" aria-hidden="true">#</a> 2. 四种异化</h4>\n<blockquote>\n<p>马克思将劳动分工看作是对个人和社会的异化与非人化，并终将被科技取代和淘汰，细节化的劳动分工使工人们沦为仅具有交换和使用价值的工具，并将本该释放人类多方面创造力的劳动异化</p>\n</blockquote>\n<pre><code>1. 将生产者与其所生产的商品脱离\n2. 雇佣劳动的本质是在他人的支配、胁迫和束缚下从事的服务活动\n3. 异化劳动剥离了人类股有的意义和表达人类创造力的潜力\n4. 工作成为个人生活的目的，工人之间相互异化的一种方式就是工作场所的竞争性\n</code></pre>\n<blockquote>\n<p>在资本主义国家，工人工作的越多，被异化的就越多。这导致他们必须通过购物和参与消费文化来逃避这种异化的感觉，但这往往<strong>需要更多的金钱</strong>。于是，他们就必须<strong>越来越努力的工作</strong>，越来越努力地被异化。在当下，这种痛苦不光是一个恶性循环，它更像是一个死循环</p>\n</blockquote>\n<h4 id="_3-为什么工人不反抗" tabindex="-1"><a class="header-anchor" href="#_3-为什么工人不反抗" aria-hidden="true">#</a> 3. 为什么工人不反抗</h4>\n<ul>\n<li>人们逐渐富裕，脱离了维持生计的底层生活</li>\n<li>人们除工资外还有资产，资本家向工人发放少量股份，使工人成为了资本拥有者</li>\n<li>国家通过宏观调控，保障大多数底层社会的基本需求，维持社会稳定</li>\n</ul>\n<blockquote>\n<p>我们沉浸在一个掩盖了不平等的意识形态和文化体系中，它们让资本注意变得顺其自然，无可挑剔...</p>\n</blockquote>\n<h3 id="消费主义" tabindex="-1"><a class="header-anchor" href="#消费主义" aria-hidden="true">#</a> 消费主义</h3>\n<p><code>消费主义从来不是一个单独的概念或浪潮，更与个人的自律精神无关</code></p>\n<blockquote>\n<p>在本质上，消费主义是资本主义的一个强大变种，是资本主义的一种表现形式，它是一种全新的、扭曲的宗教，通过拜物的形式应许一切的幸福和美好，<strong>以维持和压制资本主义内生的矛盾和危机</strong></p>\n</blockquote>\n<ul>\n<li>统治者们希望把一切需求消费化，他们就能够通过自己所掌握的生产资料来源源不断地创造新需求，并且重新定义所有需求。而这些行为的最终目的就是为了让人民处于一种“新奴隶状态”，<strong>以维持社会的阶级分化</strong></li>\n<li>消费主义世界观，最终将服务于统治阶级转移人民注意力的目的，阻止他们思考变革的可能性</li>\n</ul>\n<blockquote>\n<p>在这个时代，当人们看向资本家时，人们看不到他们手上所掌握的权利，看到的是他们的各种奢侈消费享受。这带来了两个结果：</p>\n</blockquote>\n<ol>\n<li>资本家真正的权利被遮蔽了，这削减了冲突的可能</li>\n<li>消费层次的差距创造了一种续加的目标感和自由感，仿佛普通人只要努力工作也能消费起这样的东西，就好像你也就获得了和资本家一样的社会阶层和权力地位一样</li>\n</ol>\n<h4 id="经过以上马克思对资本主义的论述-结合当经社会无时无刻正在发生的-就足以说明马克思所说的都是对的" tabindex="-1"><a class="header-anchor" href="#经过以上马克思对资本主义的论述-结合当经社会无时无刻正在发生的-就足以说明马克思所说的都是对的" aria-hidden="true">#</a> 经过以上马克思对资本主义的论述，结合当经社会无时无刻正在发生的，就足以说明马克思所说的都是对的...</h4>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>全世界无产阶级联合起来！\n                        ————《共产党宣言》\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/T-zone/no-emo/马克思为什么是对的？.html",pathLocale:"/",permalink:null,routeMeta:{},slug:"马克思为什么是对的？",filePath:"C:/Users/67099/Desktop/blog-demo/docs/T-zone/no-emo/马克思为什么是对的？.md",filePathRelative:"T-zone/no-emo/马克思为什么是对的？.md",componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/T-zone/no-emo/马克思为什么是对的？.html.vue",componentFilePathRelative:"pages/T-zone/no-emo/马克思为什么是对的？.html.vue",componentFileChunkName:"v-7072d7a0",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/T-zone/no-emo/马克思为什么是对的？.html.js",dataFilePathRelative:"pages/T-zone/no-emo/马克思为什么是对的？.html.js",dataFileChunkName:"v-7072d7a0",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/T-zone/no-emo/马克思为什么是对的？.html",htmlFilePathRelative:"T-zone/no-emo/马克思为什么是对的？.html"},{data:{key:"v-3706649a",path:"/404.html",title:"",lang:"zh-CN",frontmatter:{layout:"404"},excerpt:"",headers:[],git:{}},key:"v-3706649a",path:"/404.html",title:"",lang:"zh-CN",frontmatter:{layout:"404"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/404.html.vue",componentFilePathRelative:"pages/404.html.vue",componentFileChunkName:"v-3706649a",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/404.html.js",dataFilePathRelative:"pages/404.html.js",dataFileChunkName:"v-3706649a",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/404.html",htmlFilePathRelative:"404.html"},{data:{key:"v-8daa1a0e",path:"/",title:"",lang:"zh-CN",frontmatter:{layout:"Layout",home:!0},excerpt:"",headers:[],git:{}},key:"v-8daa1a0e",path:"/",title:"",lang:"zh-CN",frontmatter:{layout:"Layout",home:!0},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/index.html.vue",componentFilePathRelative:"pages/index.html.vue",componentFileChunkName:"v-8daa1a0e",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/index.html.js",dataFilePathRelative:"pages/index.html.js",dataFileChunkName:"v-8daa1a0e",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/index.html",htmlFilePathRelative:"index.html"},{data:{key:"v-74bc627b",path:"/about/",title:"",lang:"zh-CN",frontmatter:{layout:"About",slug:"aurora-about"},excerpt:"",headers:[],git:{}},key:"v-74bc627b",path:"/about/",title:"",lang:"zh-CN",frontmatter:{layout:"About",slug:"aurora-about"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/about/index.html.vue",componentFilePathRelative:"pages/about/index.html.vue",componentFileChunkName:"v-74bc627b",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/about/index.html.js",dataFilePathRelative:"pages/about/index.html.js",dataFileChunkName:"v-74bc627b",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/about/index.html",htmlFilePathRelative:"about/index.html"},{data:{key:"v-14f724bf",path:"/mood/",title:"",lang:"zh-CN",frontmatter:{layout:"Mood",slug:"aurora-mood"},excerpt:"",headers:[],git:{}},key:"v-14f724bf",path:"/mood/",title:"",lang:"zh-CN",frontmatter:{layout:"Mood",slug:"aurora-mood"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/mood/index.html.vue",componentFilePathRelative:"pages/mood/index.html.vue",componentFileChunkName:"v-14f724bf",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/mood/index.html.js",dataFilePathRelative:"pages/mood/index.html.js",dataFileChunkName:"v-14f724bf",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/mood/index.html",htmlFilePathRelative:"mood/index.html"},{data:{key:"v-14e6501c",path:"/link/",title:"",lang:"zh-CN",frontmatter:{layout:"Link",slug:"aurora-link"},excerpt:"",headers:[],git:{}},key:"v-14e6501c",path:"/link/",title:"",lang:"zh-CN",frontmatter:{layout:"Link",slug:"aurora-link"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/link/index.html.vue",componentFilePathRelative:"pages/link/index.html.vue",componentFileChunkName:"v-14e6501c",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/link/index.html.js",dataFilePathRelative:"pages/link/index.html.js",dataFileChunkName:"v-14e6501c",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/link/index.html",htmlFilePathRelative:"link/index.html"},{data:{key:"v-744d024e",path:"/tag/",title:"",lang:"zh-CN",frontmatter:{layout:"Tag",slug:"aurora-tag"},excerpt:"",headers:[],git:{}},key:"v-744d024e",path:"/tag/",title:"",lang:"zh-CN",frontmatter:{layout:"Tag",slug:"aurora-tag"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/tag/index.html.vue",componentFilePathRelative:"pages/tag/index.html.vue",componentFileChunkName:"v-744d024e",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/tag/index.html.js",dataFilePathRelative:"pages/tag/index.html.js",dataFileChunkName:"v-744d024e",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/tag/index.html",htmlFilePathRelative:"tag/index.html"},{data:{key:"v-705c21a6",path:"/archive/",title:"",lang:"zh-CN",frontmatter:{layout:"Archive",slug:"aurora-archive"},excerpt:"",headers:[],git:{}},key:"v-705c21a6",path:"/archive/",title:"",lang:"zh-CN",frontmatter:{layout:"Archive",slug:"aurora-archive"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/archive/index.html.vue",componentFilePathRelative:"pages/archive/index.html.vue",componentFileChunkName:"v-705c21a6",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/archive/index.html.js",dataFilePathRelative:"pages/archive/index.html.js",dataFileChunkName:"v-705c21a6",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/archive/index.html",htmlFilePathRelative:"archive/index.html"},{data:{key:"v-6629f178",path:"/aurora-coze/",title:"",lang:"zh-CN",frontmatter:{layout:"CozeMood",slug:"aurora-coze-mood"},excerpt:"",headers:[],git:{}},key:"v-6629f178",path:"/aurora-coze/",title:"",lang:"zh-CN",frontmatter:{layout:"CozeMood",slug:"aurora-coze-mood"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/aurora-coze/index.html.vue",componentFilePathRelative:"pages/aurora-coze/index.html.vue",componentFileChunkName:"v-6629f178",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/aurora-coze/index.html.js",dataFilePathRelative:"pages/aurora-coze/index.html.js",dataFileChunkName:"v-6629f178",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/aurora-coze/index.html",htmlFilePathRelative:"aurora-coze/index.html"},{data:{key:"v-f693f690",path:"/aurora-register/",title:"",lang:"zh-CN",frontmatter:{layout:"RegisterUser",slug:"aurora-coze-register"},excerpt:"",headers:[],git:{}},key:"v-f693f690",path:"/aurora-register/",title:"",lang:"zh-CN",frontmatter:{layout:"RegisterUser",slug:"aurora-coze-register"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/aurora-register/index.html.vue",componentFilePathRelative:"pages/aurora-register/index.html.vue",componentFileChunkName:"v-f693f690",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/aurora-register/index.html.js",dataFilePathRelative:"pages/aurora-register/index.html.js",dataFileChunkName:"v-f693f690",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/aurora-register/index.html",htmlFilePathRelative:"aurora-register/index.html"},{data:{key:"v-e2acc714",path:"/photo/",title:"",lang:"zh-CN",frontmatter:{layout:"CozePhoto",slug:"aurora-photo"},excerpt:"",headers:[],git:{}},key:"v-e2acc714",path:"/photo/",title:"",lang:"zh-CN",frontmatter:{layout:"CozePhoto",slug:"aurora-photo"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/photo/index.html.vue",componentFilePathRelative:"pages/photo/index.html.vue",componentFileChunkName:"v-e2acc714",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/photo/index.html.js",dataFilePathRelative:"pages/photo/index.html.js",dataFileChunkName:"v-e2acc714",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/photo/index.html",htmlFilePathRelative:"photo/index.html"},{data:{key:"v-4382d077",path:"/next-mood/",title:"",lang:"zh-CN",frontmatter:{layout:"AuroraCozeMood",slug:"aurora-AuroraCozeMood"},excerpt:"",headers:[],git:{}},key:"v-4382d077",path:"/next-mood/",title:"",lang:"zh-CN",frontmatter:{layout:"AuroraCozeMood",slug:"aurora-AuroraCozeMood"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/next-mood/index.html.vue",componentFilePathRelative:"pages/next-mood/index.html.vue",componentFileChunkName:"v-4382d077",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/next-mood/index.html.js",dataFilePathRelative:"pages/next-mood/index.html.js",dataFileChunkName:"v-4382d077",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/next-mood/index.html",htmlFilePathRelative:"next-mood/index.html"},{data:{key:"v-3c506944",path:"/aurora-music/",title:"",lang:"zh-CN",frontmatter:{layout:"AuroraMusic",slug:"aurora-plugin-music"},excerpt:"",headers:[],git:{}},key:"v-3c506944",path:"/aurora-music/",title:"",lang:"zh-CN",frontmatter:{layout:"AuroraMusic",slug:"aurora-plugin-music"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/aurora-music/index.html.vue",componentFilePathRelative:"pages/aurora-music/index.html.vue",componentFileChunkName:"v-3c506944",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/aurora-music/index.html.js",dataFilePathRelative:"pages/aurora-music/index.html.js",dataFileChunkName:"v-3c506944",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/aurora-music/index.html",htmlFilePathRelative:"aurora-music/index.html"},{data:{key:"v-3279cf61",path:"/aurora-archive/",title:"",lang:"zh-CN",frontmatter:{layout:"AuroraArchive",slug:"aurora-plugin-archive"},excerpt:"",headers:[],git:{}},key:"v-3279cf61",path:"/aurora-archive/",title:"",lang:"zh-CN",frontmatter:{layout:"AuroraArchive",slug:"aurora-plugin-archive"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,routeMeta:{},slug:"",filePath:null,filePathRelative:null,componentFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/aurora-archive/index.html.vue",componentFilePathRelative:"pages/aurora-archive/index.html.vue",componentFileChunkName:"v-3279cf61",dataFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/.temp/pages/aurora-archive/index.html.js",dataFilePathRelative:"pages/aurora-archive/index.html.js",dataFileChunkName:"v-3279cf61",htmlFilePath:"C:/Users/67099/Desktop/blog-demo/docs/.vuepress/dist/aurora-archive/index.html",htmlFilePathRelative:"aurora-archive/index.html"}]}},n=>{n.O(0,[918,58],(()=>(5698,n(n.s=5698)))),n.O()}]);