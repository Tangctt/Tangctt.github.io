"use strict";(self.webpackChunkaurora_template=self.webpackChunkaurora_template||[]).push([[558],{6815:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-6382c4c6",path:"/Javascript/%E8%AE%BF%E9%97%AEnode-express%E4%B8%ADstatic%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6.html",title:"访问node-express中static静态文件",lang:"zh-CN",frontmatter:{date:"2022/4/19 20:08",coverUrl:"/pic/8.jpg",stick:!1,keyword:"Node.js,express,静态",description:"访问node-express中static静态文件",title:"访问node-express中static静态文件",tag:["Node.js","express","静态"],categories:["Node.js","express","静态"]},excerpt:"",headers:[{level:2,title:"✨访问node-express中static静态文件✨",slug:"✨访问node-express中static静态文件✨",children:[{level:3,title:"应用场合",slug:"应用场合",children:[]},{level:3,title:"解决方法",slug:"解决方法",children:[]},{level:3,title:"示例",slug:"示例",children:[]}]}],git:{updatedTime:null,contributors:[]}}},1519:(s,n,a)=>{a.r(n),a.d(n,{default:()=>p});const e=(0,a(6252).uE)('<h2 id="✨访问node-express中static静态文件✨" tabindex="-1"><a class="header-anchor" href="#✨访问node-express中static静态文件✨" aria-hidden="true">#</a> ✨访问node-express中static静态文件✨</h2><h3 id="应用场合" tabindex="-1"><a class="header-anchor" href="#应用场合" aria-hidden="true">#</a> 应用场合</h3><ul><li>在项目中需要使用到<code>node express</code>框架进行中间件开发、</li><li>使用<code>express</code>托管静态文件或开放其它静态文件</li></ul><h3 id="解决方法" tabindex="-1"><a class="header-anchor" href="#解决方法" aria-hidden="true">#</a> 解决方法</h3><blockquote><p>通过<code>express</code>内置的<code>express.static</code>方法可以方便地托管静态文件，例如图片、CSS、JavaScript文件等 将静态资源文件所在目录作为参数传递给<code>express.static</code>中间件就可以提供静态资源文件的访问</p></blockquote><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h3><ol><li>express框架下运行以下代码</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>#注意格式\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&#39;/public&#39;</span><span class="token punctuation">,</span>express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span><span class="token string">&#39;public&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将文件设置成静态</span>\n\n#若需要开发其它静态文件，则不需要<span class="token string">&#39;/public&#39;</span>路径\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span><span class="token string">&#39;Simulation_Result&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="2"><li>在项目中访问静态文件地址即可</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>     <span class="token keyword">let</span> _PicUrl <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token string">&quot;http://127.0.0.1:5678/S-1.png&quot;</span><span class="token punctuation">,</span>\n        <span class="token string">&quot;http://127.0.0.1:5678/S-2.png&quot;</span>\n     <span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>注意：静态文件的路径为express中间件设置，端口号必须为后端端口号。若访问了错误的路径或者端口号，则页面为空白</strong></p>',11),t={},p=(0,a(3744).Z)(t,[["render",function(s,n){return e}]])}}]);