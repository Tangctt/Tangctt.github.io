"use strict";(self.webpackChunkaurora_template=self.webpackChunkaurora_template||[]).push([[837],{9737:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-ba03ecda",path:"/Vue/Vue%E8%B7%AF%E7%94%B1%E4%BC%A0%E5%8F%82.html",title:"Vue路由传参",lang:"zh-CN",frontmatter:{date:"2022/5/3 14:10",coverUrl:"/pic/7.jpg",stick:!1,keyword:"Vue,路由,传参",description:"Vue路由传参",title:"Vue路由传参",tag:["Vue","路由","传参"],categories:["Vue","路由","传参"]},excerpt:"",headers:[{level:2,title:"✨Vue路由传参✨",slug:"✨vue路由传参✨",children:[{level:3,title:"方式一：配置动态路由",slug:"方式一-配置动态路由",children:[]},{level:3,title:"方式二：通过query属性传值",slug:"方式二-通过query属性传值",children:[]},{level:3,title:"方式三：通过params属性传值",slug:"方式三-通过params属性传值",children:[]},{level:3,title:"query和params传参的区别",slug:"query和params传参的区别",children:[]}]}],git:{updatedTime:null,contributors:[]}}},7932:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const e=(0,a(6252).uE)('<h2 id="✨vue路由传参✨" tabindex="-1"><a class="header-anchor" href="#✨vue路由传参✨" aria-hidden="true">#</a> ✨Vue路由传参✨</h2><h3 id="方式一-配置动态路由" tabindex="-1"><a class="header-anchor" href="#方式一-配置动态路由" aria-hidden="true">#</a> 方式一：配置动态路由</h3><ul><li>页面刷新，参数不会消失</li><li>URL路径中会显示传递的参数</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 1. 路由配置文件中配置动态路由</span>\n<span class="token punctuation">{</span>\n     path<span class="token operator">:</span> &#39;<span class="token operator">/</span>detail<span class="token operator">/</span><span class="token operator">:</span>id&#39;<span class="token punctuation">,</span>\n     name<span class="token operator">:</span> <span class="token char">&#39;Detail&#39;</span><span class="token punctuation">,</span>\n     component<span class="token operator">:</span> <span class="token class-name">Detail</span>\n <span class="token punctuation">}</span>\n   \n   \n<span class="token comment">//2. 使用，跳转时页面</span>\n<span class="token keyword">var</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>&#39;<span class="token operator">/</span>detail<span class="token operator">/</span>&#39; <span class="token operator">+</span> id<span class="token punctuation">)</span>\n<span class="token comment">//url形式： http://192.169.3.198/detail/1</span>\n \n<span class="token comment">//3. 跳转后页面获取参数</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="方式二-通过query属性传值" tabindex="-1"><a class="header-anchor" href="#方式二-通过query属性传值" aria-hidden="true">#</a> 方式二：通过<code>query</code>属性传值</h3><ul><li>使用<code>path</code>来匹配路由</li><li>页面刷新，参数不会消失</li><li><code>query</code>类似<code>get</code>，跳转之后页面的url后面会拼接参数，类似<code>?id=1</code></li><li><strong>目标组件在<code>create</code>生命周期中，通过<code>this.$route</code>接受</strong></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//1. 路由配置文件</span>\n<span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/detail&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Detail&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">component</span><span class="token operator">:</span> Detail\n<span class="token punctuation">}</span>\n   \n<span class="token comment">//2. 跳转时页面</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/detail&#39;</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;张三&#39;</span>，\n    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">//url形式： http://192.169.3.198/detail?id=1&amp;name=&#39;张三&#39;</span>\n \n<span class="token comment">//3. 跳转后页面获取参数对象（create生命周期）</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>query\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="方式三-通过params属性传值" tabindex="-1"><a class="header-anchor" href="#方式三-通过params属性传值" aria-hidden="true">#</a> 方式三：通过<code>params</code>属性传值</h3><ul><li><strong>目标组件在<code>create</code>生命周期中，通过<code>this.$route</code>接受</strong></li><li>通过路由属性中的<code>name</code>来确定匹配的路由</li><li>密文传参，页面不再url地址上显示</li><li>缺点：刷新页面后，参数就消失了</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//1. 路由配置文件</span>\n<span class="token punctuation">{</span>\n     <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/detail&#39;</span><span class="token punctuation">,</span>\n     <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Detail&#39;</span><span class="token punctuation">,</span>\n     <span class="token literal-property property">component</span><span class="token operator">:</span> Detail\n   <span class="token punctuation">}</span>\n   \n<span class="token comment">//2. 跳转时页面</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Detail&#39;</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;张三&#39;</span>，\n    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n \n<span class="token comment">//3. 跳转后页面获取参数对象（create生命周期）</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>params\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="query和params传参的区别" tabindex="-1"><a class="header-anchor" href="#query和params传参的区别" aria-hidden="true">#</a> <code>query</code>和<code>params</code>传参的区别</h3><ol><li><code>params</code>传参必须使用命名路由的方式传参</li><li><code>params</code>传参不会显示在地址栏上，会保存在内存中，刷新就会丢失，可以配合本地存储进行使用</li><li><code>query</code>的参数会显示在地址栏上，不会消失</li></ol>',12),p={},t=(0,a(3744).Z)(p,[["render",function(n,s){return e}]])}}]);